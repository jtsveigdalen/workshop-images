/* Minification failed. Returning unminified contents.
(1116,9-10): run-time error JS1010: Expected identifier: .
(1116,9-10): run-time error JS1195: Expected expression: .
(2437,19-20): run-time error JS1010: Expected identifier: .
(2437,19-20): run-time error JS1195: Expected expression: .
(2454,19-20): run-time error JS1010: Expected identifier: .
(2454,19-20): run-time error JS1195: Expected expression: .
(2685,23-24): run-time error JS1010: Expected identifier: .
(2685,23-24): run-time error JS1195: Expected expression: .
 */
/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.4",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b="length"in a&&a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/'|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){
return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ba=/<([\w:]+)/,ca=/<|&#?\w+;/,da=/<(?:script|style|link)/i,ea=/checked\s*(?:[^=]|=\s*.checked.)/i,fa=/^$|\/(?:java|ecma)script/i,ga=/^true\/(.*)/,ha=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ia={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function ka(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,"script"),g.length>0&&ma(g,!i&&oa(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement("div")),g=(ba.exec(e)||["",""])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),"script"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||"")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(aa,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,"script"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,"")))}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),"none"!==c&&c||(qa=(qa||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp("^("+Q+")(.*)$","i"),Ba=new RegExp("^([+-])=("+Q+")","i"),Ca={position:"absolute",visibility:"hidden",display:"block"},Da={letterSpacing:"0",fontWeight:"400"},Ea=["Webkit","O","Moz","ms"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Ha(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ia(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?"border":"content"),d,f)+"px"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",ta(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),"normal"===e&&b in Da&&(e=Da[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xa,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pa=/queueHooks$/,Qa=[Va],Ra={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||ta(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?ta(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta("show"),slideUp:Ta("hide"),slideToggle:Ta("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),
void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ab," ").indexOf(b)>=0)return!0;return!1}});var bb=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cb=n.now(),db=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \t]*([^\r\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\/\//,kb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,lb={},mb={},nb="*/".concat("*"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:"GET",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":nb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+"").replace(eb,"").replace(jb,pb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(pb[3]||("http:"===pb[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,"$1_="+cb++):d+(db.test(d)?"&":"?")+"_="+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+nb+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\[\]$/,xb=/\r?\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Ab(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join("&").replace(vb,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,"\r\n")}}):{name:b.name,value:c.replace(xb,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&&"withCredentials"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Cb[g]=b("abort");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fb=[],Gb=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Fb.pop()||n.expando+"_"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gb.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,"$1"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});
;
/*! jQuery UI - v1.12.1 - 2019-06-05
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/draggable.js, widgets/droppable.js, widgets/resizable.js, widgets/selectable.js, widgets/sortable.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/selectmenu.js, widgets/slider.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */

(function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)})(function(t){function e(t){for(var e=t.css("visibility");"inherit"===e;)t=t.parent(),e=t.css("visibility");return"hidden"!==e}function i(t){for(var e,i;t.length&&t[0]!==document;){if(e=t.css("position"),("absolute"===e||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=n(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function n(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.on("mouseout",i,function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover")}).on("mouseover",i,o)}function o(){t.datepicker._isDisabledDatepicker(p.inline?p.dpDiv.parent()[0]:p.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"))}function a(e,i){t.extend(e,i);for(var s in i)null==i[s]&&(e[s]=i[s]);return e}function r(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger("change")}}t.ui=t.ui||{},t.ui.version="1.12.1";var l=0,h=Array.prototype.slice;t.cleanData=function(e){return function(i){var s,n,o;for(o=0;null!=(n=i[o]);o++)try{s=t._data(n,"events"),s&&s.remove&&t(n).triggerHandler("remove")}catch(a){}e(i)}}(t.cleanData),t.widget=function(e,i,s){var n,o,a,r={},l=e.split(".")[0];e=e.split(".")[1];var h=l+"-"+e;return s||(s=i,i=t.Widget),t.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr[":"][h.toLowerCase()]=function(e){return!!t.data(e,h)},t[l]=t[l]||{},n=t[l][e],o=t[l][e]=function(t,e){return this._createWidget?(arguments.length&&this._createWidget(t,e),void 0):new o(t,e)},t.extend(o,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),a=new i,a.options=t.widget.extend({},a.options),t.each(s,function(e,s){return t.isFunction(s)?(r[e]=function(){function t(){return i.prototype[e].apply(this,arguments)}function n(t){return i.prototype[e].apply(this,t)}return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=n,e=s.apply(this,arguments),this._super=i,this._superApply=o,e}}(),void 0):(r[e]=s,void 0)}),o.prototype=t.widget.extend(a,{widgetEventPrefix:n?a.widgetEventPrefix||e:e},r,{constructor:o,namespace:l,widgetName:e,widgetFullName:h}),n?(t.each(n._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+"."+s.widgetName,o,i._proto)}),delete n._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o},t.widget.extend=function(e){for(var i,s,n=h.call(arguments,1),o=0,a=n.length;a>o;o++)for(i in n[o])s=n[o][i],n[o].hasOwnProperty(i)&&void 0!==s&&(e[i]=t.isPlainObject(s)?t.isPlainObject(e[i])?t.widget.extend({},e[i],s):t.widget.extend({},s):s);return e},t.widget.bridge=function(e,i){var s=i.prototype.widgetFullName||e;t.fn[e]=function(n){var o="string"==typeof n,a=h.call(arguments,1),r=this;return o?this.length||"instance"!==n?this.each(function(){var i,o=t.data(this,s);return"instance"===n?(r=o,!1):o?t.isFunction(o[n])&&"_"!==n.charAt(0)?(i=o[n].apply(o,a),i!==o&&void 0!==i?(r=i&&i.jquery?r.pushStack(i.get()):i,!1):void 0):t.error("no such method '"+n+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; "+"attempted to call method '"+n+"'")}):r=void 0:(a.length&&(n=t.widget.extend.apply(null,[n].concat(a))),this.each(function(){var e=t.data(this,s);e?(e.option(n||{}),e._init&&e._init()):t.data(this,s,new i(n,this))})),r}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=l++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===i&&this.destroy()}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,function(t,i){e._removeClass(i,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var s,n,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(a={},s=e.split("."),e=s.shift(),s.length){for(n=a[e]=t.widget.extend({},this.options[e]),o=0;s.length-1>o;o++)n[s[o]]=n[s[o]]||{},n=n[s[o]];if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return"classes"===t&&this._setOptionClasses(e),this.options[t]=e,"disabled"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,s,n;for(i in e)n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!t),t&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){function i(i,o){var a,r;for(r=0;i.length>r;r++)a=n.classesElementLookup[i[r]]||t(),a=e.add?t(t.unique(a.get().concat(e.element.get()))):t(a.not(e.element).get()),n.classesElementLookup[i[r]]=a,s.push(i[r]),o&&e.classes[i[r]]&&s.push(e.classes[i[r]])}var s=[],n=this;return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:"_untrackClassesElement"}),e.keys&&i(e.keys.match(/\S+/g)||[],!0),e.extra&&i(e.extra.match(/\S+/g)||[]),s.join(" ")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()))})},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){s="boolean"==typeof s?s:i;var n="string"==typeof t||null===t,o={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return o.element.toggleClass(this._classes(o),s),this},_on:function(e,i,s){var n,o=this;"boolean"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,function(s,a){function r(){return e||o.options.disabled!==!0&&!t(this).hasClass("ui-state-disabled")?("string"==typeof a?o[a]:a).apply(o,arguments):void 0}"string"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++);var l=s.match(/^([\w:-]*)\s*(.*)$/),h=l[1]+o.eventNamespace,c=l[2];c?n.on(h,c,r):i.on(h,r)})},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return("string"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,"ui-state-hover")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,"ui-state-focus")},focusout:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-focus")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(s,n,o){"string"==typeof n&&(n={effect:n});var a,r=n?n===!0||"number"==typeof n?i:n.effect||i:e;n=n||{},"number"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i()})}}),t.widget,function(){function e(t,e,i){return[parseFloat(t[0])*(u.test(t[0])?e/100:1),parseFloat(t[1])*(u.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function s(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}var n,o=Math.max,a=Math.abs,r=/left|center|right/,l=/top|center|bottom/,h=/[\+\-]\d+(\.[\d]+)?%?/,c=/^\w+/,u=/%$/,d=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==n)return n;var e,i,s=t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return t("body").append(s),e=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,e===i&&(i=s[0].clientWidth),s.remove(),n=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),s=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),n="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,o="scroll"===s||"auto"===s&&e.height<e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType,o=!s&&!n;return{element:i,isWindow:s,isDocument:n,offset:o?t(e).offset():{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},t.fn.position=function(n){if(!n||!n.of)return d.apply(this,arguments);n=t.extend({},n);var u,p,f,g,m,_,v=t(n.of),b=t.position.getWithinInfo(n.within),y=t.position.getScrollInfo(b),w=(n.collision||"flip").split(" "),k={};return _=s(v),v[0].preventDefault&&(n.at="left top"),p=_.width,f=_.height,g=_.offset,m=t.extend({},g),t.each(["my","at"],function(){var t,e,i=(n[this]||"").split(" ");1===i.length&&(i=r.test(i[0])?i.concat(["center"]):l.test(i[0])?["center"].concat(i):["center","center"]),i[0]=r.test(i[0])?i[0]:"center",i[1]=l.test(i[1])?i[1]:"center",t=h.exec(i[0]),e=h.exec(i[1]),k[this]=[t?t[0]:0,e?e[0]:0],n[this]=[c.exec(i[0])[0],c.exec(i[1])[0]]}),1===w.length&&(w[1]=w[0]),"right"===n.at[0]?m.left+=p:"center"===n.at[0]&&(m.left+=p/2),"bottom"===n.at[1]?m.top+=f:"center"===n.at[1]&&(m.top+=f/2),u=e(k.at,p,f),m.left+=u[0],m.top+=u[1],this.each(function(){var s,r,l=t(this),h=l.outerWidth(),c=l.outerHeight(),d=i(this,"marginLeft"),_=i(this,"marginTop"),x=h+d+i(this,"marginRight")+y.width,C=c+_+i(this,"marginBottom")+y.height,D=t.extend({},m),T=e(k.my,l.outerWidth(),l.outerHeight());"right"===n.my[0]?D.left-=h:"center"===n.my[0]&&(D.left-=h/2),"bottom"===n.my[1]?D.top-=c:"center"===n.my[1]&&(D.top-=c/2),D.left+=T[0],D.top+=T[1],s={marginLeft:d,marginTop:_},t.each(["left","top"],function(e,i){t.ui.position[w[e]]&&t.ui.position[w[e]][i](D,{targetWidth:p,targetHeight:f,elemWidth:h,elemHeight:c,collisionPosition:s,collisionWidth:x,collisionHeight:C,offset:[u[0]+T[0],u[1]+T[1]],my:n.my,at:n.at,within:b,elem:l})}),n.using&&(r=function(t){var e=g.left-D.left,i=e+p-h,s=g.top-D.top,r=s+f-c,u={target:{element:v,left:g.left,top:g.top,width:p,height:f},element:{element:l,left:D.left,top:D.top,width:h,height:c},horizontal:0>i?"left":e>0?"right":"center",vertical:0>r?"top":s>0?"bottom":"middle"};h>p&&p>a(e+i)&&(u.horizontal="center"),c>f&&f>a(s+r)&&(u.vertical="middle"),u.important=o(a(e),a(i))>o(a(s),a(r))?"horizontal":"vertical",n.using.call(this,t,u)}),l.offset(t.extend(D,{using:r}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,l=n-r,h=r+e.collisionWidth-a-n;e.collisionWidth>a?l>0&&0>=h?(i=t.left+l+e.collisionWidth-a-n,t.left+=l-i):t.left=h>0&&0>=l?n:l>h?n+a-e.collisionWidth:n:l>0?t.left+=l:h>0?t.left-=h:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,l=n-r,h=r+e.collisionHeight-a-n;e.collisionHeight>a?l>0&&0>=h?(i=t.top+l+e.collisionHeight-a-n,t.top+=l-i):t.top=h>0&&0>=l?n:l>h?n+a-e.collisionHeight:n:l>0?t.top+=l:h>0?t.top-=h:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,r=n.width,l=n.isWindow?n.scrollLeft:n.offset.left,h=t.left-e.collisionPosition.marginLeft,c=h-l,u=h+e.collisionWidth-r-l,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,p="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-r-o,(0>i||a(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-l,(s>0||u>a(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,r=n.height,l=n.isWindow?n.scrollTop:n.offset.top,h=t.top-e.collisionPosition.marginTop,c=h-l,u=h+e.collisionHeight-r-l,d="top"===e.my[1],p=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,f="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-r-o,(0>s||a(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-l,(i>0||u>a(i))&&(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}}}(),t.ui.position,t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,s){return!!t.data(e,s[3])}}),t.fn.extend({disableSelection:function(){var t="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.on(t+".ui-disableSelection",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.off(".ui-disableSelection")}}),t.ui.focusable=function(i,s){var n,o,a,r,l,h=i.nodeName.toLowerCase();return"area"===h?(n=i.parentNode,o=n.name,i.href&&o&&"map"===n.nodeName.toLowerCase()?(a=t("img[usemap='#"+o+"']"),a.length>0&&a.is(":visible")):!1):(/^(input|select|textarea|button|object)$/.test(h)?(r=!i.disabled,r&&(l=t(i).closest("fieldset")[0],l&&(r=!l.disabled))):r="a"===h?i.href||s:s,r&&t(i).is(":visible")&&e(t(i)))},t.extend(t.expr[":"],{focusable:function(e){return t.ui.focusable(e,null!=t.attr(e,"tabindex"))}}),t.ui.focusable,t.fn.form=function(){return"string"==typeof this[0].form?this.closest("form"):t(this[0].form)},t.ui.formResetMixin={_formResetHandler:function(){var e=t(this);setTimeout(function(){var i=e.data("ui-form-reset-instances");t.each(i,function(){this.refresh()})})},_bindFormResetHandler:function(){if(this.form=this.element.form(),this.form.length){var t=this.form.data("ui-form-reset-instances")||[];t.length||this.form.on("reset.ui-form-reset",this._formResetHandler),t.push(this),this.form.data("ui-form-reset-instances",t)}},_unbindFormResetHandler:function(){if(this.form.length){var e=this.form.data("ui-form-reset-instances");e.splice(t.inArray(this,e),1),e.length?this.form.data("ui-form-reset-instances",e):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")}}},"1.7"===t.fn.jquery.substring(0,3)&&(t.each(["Width","Height"],function(e,i){function s(e,i,s,o){return t.each(n,function(){i-=parseFloat(t.css(e,"padding"+this))||0,s&&(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),o&&(i-=parseFloat(t.css(e,"margin"+this))||0)}),i}var n="Width"===i?["Left","Right"]:["Top","Bottom"],o=i.toLowerCase(),a={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+i]=function(e){return void 0===e?a["inner"+i].call(this):this.each(function(){t(this).css(o,s(this,e)+"px")})},t.fn["outer"+i]=function(e,n){return"number"!=typeof e?a["outer"+i].call(this,e):this.each(function(){t(this).css(o,s(this,e,!0,n)+"px")})}}),t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},t.ui.escapeSelector=function(){var t=/([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;return function(e){return e.replace(t,"\\$1")}}(),t.fn.labels=function(){var e,i,s,n,o;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(n=this.eq(0).parents("label"),s=this.attr("id"),s&&(e=this.eq(0).parents().last(),o=e.add(e.length?e.siblings():this.siblings()),i="label[for='"+t.ui.escapeSelector(s)+"']",n=n.add(o.find(i).addBack(i))),this.pushStack(n))},t.fn.scrollParent=function(e){var i=this.css("position"),s="absolute"===i,n=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return s&&"static"===e.css("position")?!1:n.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))}).eq(0);return"fixed"!==i&&o.length?o:t(this[0].ownerDocument||document)},t.extend(t.expr[":"],{tabbable:function(e){var i=t.attr(e,"tabindex"),s=null!=i;return(!s||i>=0)&&t.ui.focusable(e,s)}}),t.fn.extend({uniqueId:function(){var t=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++t)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id")})}}),t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var c=!1;t(document).on("mouseup",function(){c=!1}),t.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).on("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!c){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,s=1===e.which,n="string"==typeof this.options.cancel&&e.target.nodeName?t(e.target).closest(this.options.cancel).length:!1;return s&&!n&&this._mouseCapture(e)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+".preventClickEvent")&&t.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),c=!0,!0)):!0}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,c=!1,e.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),t.ui.plugin={add:function(e,i,s){var n,o=t.ui[e].prototype;for(n in s)o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]])},call:function(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;o.length>n;n++)t.options[o[n][0]]&&o[n][1].apply(t.element,i)}},t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement}catch(i){e=t.body}return e||(e=t.body),e.nodeName||(e=t.body),e},t.ui.safeBlur=function(e){e&&"body"!==e.nodeName.toLowerCase()&&t(e).trigger("blur")},t.widget("ui.draggable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?(this.destroyOnClear=!0,void 0):(this._removeHandleClassName(),this._mouseDestroy(),void 0)},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blurActiveElement(e),this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0):!1)},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=t.ui.safeActiveElement(this.document[0]),s=t(e.target);s.closest(i).length||t.ui.safeBlur(i)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===t(this).css("position")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",e,s)===!1)return this._mouseUp(new t.Event("mouseup",e)),!1;this.position=s.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!s||"valid"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&&i._clear()}):this._trigger("stop",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger("focus"),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new t.Event("mouseup",{target:this.element[0]})):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle")},_removeHandleClassName:function(){this._removeClass(this.handleElement,"ui-draggable-handle")},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper),n=s?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return n.parents("body").length||n.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s&&n[0]===this.element[0]&&this._setPositionRelative(),n[0]===this.element[0]||/(fixed|absolute)/.test(n.css("position"))||n.css("position","absolute"),n},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options,o=this.document[0];return this.relativeContainer=null,n.containment?"window"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):"document"===n.containment?(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):n.containment.constructor===Array?(this.containment=n.containment,void 0):("parent"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i),void 0):(this.containment=null,void 0)
},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,s,n,o,a=this.options,r=this._isRootNode(this.scrollParent[0]),l=t.pageX,h=t.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(s=this.relativeContainer.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),a.grid&&(n=a.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,h=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-a.grid[1]:n+a.grid[1]:n,o=a.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,l=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),"y"===a.axis&&(l=this.originalPageX),"x"===a.axis&&(h=this.originalPageY)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),s.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i,s){var n=t.extend({},i,{item:s.element});s.sortables=[],t(s.options.connectToSortable).each(function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(s.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,n))})},stop:function(e,i,s){var n=t.extend({},i,{item:s.element});s.cancelHelperRemoval=!1,t.each(s.sortables,function(){var t=this;t.isOver?(t.isOver=0,s.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,n))})},drag:function(e,i,s){t.each(s.sortables,function(){var n=!1,o=this;o.positionAbs=s.positionAbs,o.helperProportions=s.helperProportions,o.offset.click=s.offset.click,o._intersectsWith(o.containerCache)&&(n=!0,t.each(s.sortables,function(){return this.positionAbs=s.positionAbs,this.helperProportions=s.helperProportions,this.offset.click=s.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(n=!1),n})),n?(o.isOver||(o.isOver=1,s._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data("ui-sortable-item",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=s.offset.click.top,o.offset.click.left=s.offset.click.left,o.offset.parent.left-=s.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=s.offset.parent.top-o.offset.parent.top,s._trigger("toSortable",e),s.dropped=o.element,t.each(s.sortables,function(){this.refreshPositions()}),s.currentItem=s.element,o.fromOutside=s),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger("out",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(s._parent),s._refreshOffsets(e),i.position=s._generatePosition(e,!0),s._trigger("fromSortable",e),s.dropped=!1,t.each(s.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add("draggable","cursor",{start:function(e,i,s){var n=t("body"),o=s.options;n.css("cursor")&&(o._cursor=n.css("cursor")),n.css("cursor",o.cursor)},stop:function(e,i,s){var n=s.options;n._cursor&&t("body").css("cursor",n._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css("opacity")&&(o._opacity=n.css("opacity")),n.css("opacity",o.opacity)},stop:function(e,i,s){var n=s.options;n._opacity&&t(i.helper).css("opacity",n._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,s){var n=s.options,o=!1,a=s.scrollParentNotHidden[0],r=s.document[0];a!==r&&"HTML"!==a.tagName?(n.axis&&"x"===n.axis||(s.overflowOffset.top+a.offsetHeight-e.pageY<n.scrollSensitivity?a.scrollTop=o=a.scrollTop+n.scrollSpeed:e.pageY-s.overflowOffset.top<n.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-n.scrollSpeed)),n.axis&&"y"===n.axis||(s.overflowOffset.left+a.offsetWidth-e.pageX<n.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+n.scrollSpeed:e.pageX-s.overflowOffset.left<n.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-n.scrollSpeed))):(n.axis&&"x"===n.axis||(e.pageY-t(r).scrollTop()<n.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<n.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+n.scrollSpeed))),n.axis&&"y"===n.axis||(e.pageX-t(r).scrollLeft()<n.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<n.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+n.scrollSpeed)))),o!==!1&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(s,e)}}),t.ui.plugin.add("draggable","snap",{start:function(e,i,s){var n=s.options;s.snapElements=[],t(n.snap.constructor!==String?n.snap.items||":data(ui-draggable)":n.snap).each(function(){var e=t(this),i=e.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,s){var n,o,a,r,l,h,c,u,d,p,f=s.options,g=f.snapTolerance,m=i.offset.left,_=m+s.helperProportions.width,v=i.offset.top,b=v+s.helperProportions.height;for(d=s.snapElements.length-1;d>=0;d--)l=s.snapElements[d].left-s.margins.left,h=l+s.snapElements[d].width,c=s.snapElements[d].top-s.margins.top,u=c+s.snapElements[d].height,l-g>_||m>h+g||c-g>b||v>u+g||!t.contains(s.snapElements[d].item.ownerDocument,s.snapElements[d].item)?(s.snapElements[d].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=!1):("inner"!==f.snapMode&&(n=g>=Math.abs(c-b),o=g>=Math.abs(u-v),a=g>=Math.abs(l-_),r=g>=Math.abs(h-m),n&&(i.position.top=s._convertPositionTo("relative",{top:c-s.helperProportions.height,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:u,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l-s.helperProportions.width}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h}).left)),p=n||o||a||r,"outer"!==f.snapMode&&(n=g>=Math.abs(c-v),o=g>=Math.abs(u-b),a=g>=Math.abs(l-m),r=g>=Math.abs(h-_),n&&(i.position.top=s._convertPositionTo("relative",{top:c,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:u-s.helperProportions.height,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h-s.helperProportions.width}).left)),!s.snapElements[d].snapping&&(n||o||a||r||p)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=n||o||a||r||p)}}),t.ui.plugin.add("draggable","stack",{start:function(e,i,s){var n,o=s.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)});a.length&&(n=parseInt(t(a[0]).css("zIndex"),10)||0,t(a).each(function(e){t(this).css("zIndex",n+e)}),this.css("zIndex",n+a.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css("zIndex")&&(o._zIndex=n.css("zIndex")),n.css("zIndex",o.zIndex)},stop:function(e,i,s){var n=s.options;n._zIndex&&t(i.helper).css("zIndex",n._zIndex)}}),t.ui.draggable,t.widget("ui.droppable",{version:"1.12.1",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,s=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(s)?s:function(t){return t.is(s)},this.proportions=function(){return arguments.length?(e=arguments[0],void 0):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this._addClass("ui-droppable")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;t.length>e;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e)},_setOption:function(e,i){if("accept"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i)};else if("scope"===e){var s=t.ui.ddmanager.droppables[this.options.scope];this._splice(s),this._addToManager(i)}this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var s=i||t.ui.ddmanager.current,n=!1;return s&&(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=t(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===s.options.scope&&i.accept.call(i.element[0],s.currentItem||s.element)&&u(s,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(n=!0,!1):void 0}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",e,this.ui(s)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}},_addHoverClass:function(){this._addClass("ui-droppable-hover")},_removeHoverClass:function(){this._removeClass("ui-droppable-hover")},_addActiveClass:function(){this._addClass("ui-droppable-active")},_removeActiveClass:function(){this._removeClass("ui-droppable-active")}});var u=t.ui.intersect=function(){function t(t,e,i){return t>=e&&e+i>t}return function(e,i,s,n){if(!i.offset)return!1;var o=(e.positionAbs||e.position.absolute).left+e.margins.left,a=(e.positionAbs||e.position.absolute).top+e.margins.top,r=o+e.helperProportions.width,l=a+e.helperProportions.height,h=i.offset.left,c=i.offset.top,u=h+i.proportions().width,d=c+i.proportions().height;switch(s){case"fit":return o>=h&&u>=r&&a>=c&&d>=l;case"intersect":return o+e.helperProportions.width/2>h&&u>r-e.helperProportions.width/2&&a+e.helperProportions.height/2>c&&d>l-e.helperProportions.height/2;case"pointer":return t(n.pageY,c,i.proportions().height)&&t(n.pageX,h,i.proportions().width);case"touch":return(a>=c&&d>=a||l>=c&&d>=l||c>a&&l>d)&&(o>=h&&u>=o||r>=h&&u>=r||h>o&&r>u);default:return!1}}}();t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,i){var s,n,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,r=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(s=0;o.length>s;s++)if(!(o[s].options.disabled||e&&!o[s].accept.call(o[s].element[0],e.currentItem||e.element))){for(n=0;r.length>n;n++)if(r[n]===o[s].element[0]){o[s].proportions().height=0;continue t}o[s].visible="none"!==o[s].element.css("display"),o[s].visible&&("mousedown"===a&&o[s]._activate.call(o[s],i),o[s].offset=o[s].element.offset(),o[s].proportions({width:o[s].element[0].offsetWidth,height:o[s].element[0].offsetHeight}))}},drop:function(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&u(e,this,this.options.tolerance,i)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),s},dragStart:function(e,i){e.element.parentsUntil("body").on("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var s,n,o,a=u(e,this,this.options.tolerance,i),r=!a&&this.isover?"isout":a&&!this.isover?"isover":null;r&&(this.options.greedy&&(n=this.options.scope,o=this.element.parents(":data(ui-droppable)").filter(function(){return t(this).droppable("instance").options.scope===n}),o.length&&(s=t(o[0]).droppable("instance"),s.greedyChild="isover"===r)),s&&"isover"===r&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),s&&"isout"===r&&(s.isout=!1,s.isover=!0,s._over.call(s,i)))}})},dragStop:function(e,i){e.element.parentsUntil("body").off("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}},t.uiBackCompat!==!1&&t.widget("ui.droppable",t.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}}),t.ui.droppable,t.widget("ui.resizable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(e,i){if("hidden"===t(e).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop",n=!1;return e[s]>0?!0:(e[s]=1,n=e[s]>0,e[s]=0,n)},_create:function(){var e,i=this.options,s=this;this._addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(e),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on("mouseenter",function(){i.disabled||(s._removeClass("ui-resizable-autohide"),s._handles.show())}).on("mouseleave",function(){i.disabled||s.resizing||(s._addClass("ui-resizable-autohide"),s._handles.hide())}),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case"handles":this._removeHandles(),this._setupHandles();break;default:}},_setupHandles:function(){var e,i,s,n,o,a=this.options,r=this;if(this.handles=a.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=t(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),s=this.handles.split(","),this.handles={},i=0;s.length>i;i++)e=t.trim(s[i]),n="ui-resizable-"+e,o=t("<div>"),this._addClass(o,"ui-resizable-handle "+n),o.css({zIndex:a.zIndex}),this.handles[e]=".ui-resizable-"+e,this.element.append(o);this._renderAxis=function(e){var i,s,n,o;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(s=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(n,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",function(){r.resizing||(this.className&&(o=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=o&&o[1]?o[1]:"se")}),a.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(e){var i,s,n,o=this.options,a=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),s=this._num(this.helper.css("top")),o.containment&&(i+=t(o.containment).scrollLeft()||0,s+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalPosition={left:i,top:s},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,n=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===n?this.axis+"-resize":n),this._addClass("ui-resizable-resizing"),this._propagate("start",e),!0},_mouseDrag:function(e){var i,s,n=this.originalMousePosition,o=this.axis,a=e.pageX-n.left||0,r=e.pageY-n.top||0,l=this._change[o];return this._updatePrevProperties(),l?(i=l.apply(this,[e,a,r]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),s=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(s)||(this._updatePrevProperties(),this._trigger("resize",e,this.ui()),this._applyChanges()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,o,a,r,l,h=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&this._hasScroll(i[0],"left")?0:c.sizeDiff.height,o=s?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-n},r=parseFloat(c.element.css("left"))+(c.position.left-c.originalPosition.left)||null,l=parseFloat(c.element.css("top"))+(c.position.top-c.originalPosition.top)||null,h.animate||this.element.css(t.extend(a,{top:l,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!h.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,s,n,o,a=this.options;o={minWidth:this._isNumber(a.minWidth)?a.minWidth:0,maxWidth:this._isNumber(a.maxWidth)?a.maxWidth:1/0,minHeight:this._isNumber(a.minHeight)?a.minHeight:0,maxHeight:this._isNumber(a.maxHeight)?a.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,n=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),o.maxWidth>i&&(o.maxWidth=i),o.maxHeight>n&&(o.maxHeight=n)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===s&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,h=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&h&&(t.left=r-e.minWidth),s&&h&&(t.left=r-e.maxWidth),a&&c&&(t.top=l-e.minHeight),n&&c&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],s=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],n=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];4>e;e++)i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div style='overflow:hidden;'></div>"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).resizable("instance"),s=i.options,n=i._proportionallyResizeElements,o=n.length&&/textarea/i.test(n[0].nodeName),a=o&&i._hasScroll(n[0],"left")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,l={width:i.size.width-r,height:i.size.height-a},h=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,c=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(l,c&&h?{top:c,left:h}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var e,i,s,n,o,a,r,l=t(this).resizable("instance"),h=l.options,c=l.element,u=h.containment,d=u instanceof t?u.get(0):/parent/.test(u)?c.parent().get(0):u;d&&(l.containerElement=t(d),/document/.test(u)||u===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t(["Top","Right","Left","Bottom"]).each(function(t,s){i[t]=l._num(e.css("padding"+s))}),l.containerOffset=e.offset(),l.containerPosition=e.position(),l.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},s=l.containerOffset,n=l.containerSize.height,o=l.containerSize.width,a=l._hasScroll(d,"left")?d.scrollWidth:o,r=l._hasScroll(d)?d.scrollHeight:n,l.parentData={element:d,left:s.left,top:s.top,width:a,height:r}))},resize:function(e){var i,s,n,o,a=t(this).resizable("instance"),r=a.options,l=a.containerOffset,h=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement,p=!0;d[0]!==document&&/static/.test(d.css("position"))&&(u=l),h.left<(a._helper?l.left:0)&&(a.size.width=a.size.width+(a._helper?a.position.left-l.left:a.position.left-u.left),c&&(a.size.height=a.size.width/a.aspectRatio,p=!1),a.position.left=r.helper?l.left:0),h.top<(a._helper?l.top:0)&&(a.size.height=a.size.height+(a._helper?a.position.top-l.top:a.position.top),c&&(a.size.width=a.size.height*a.aspectRatio,p=!1),a.position.top=a._helper?l.top:0),n=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css("position")),n&&o?(a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top):(a.offset.left=a.element.offset().left,a.offset.top=a.element.offset().top),i=Math.abs(a.sizeDiff.width+(a._helper?a.offset.left-u.left:a.offset.left-l.left)),s=Math.abs(a.sizeDiff.height+(a._helper?a.offset.top-u.top:a.offset.top-l.top)),i+a.size.width>=a.parentData.width&&(a.size.width=a.parentData.width-i,c&&(a.size.height=a.size.width/a.aspectRatio,p=!1)),s+a.size.height>=a.parentData.height&&(a.size.height=a.parentData.height-s,c&&(a.size.width=a.size.height*a.aspectRatio,p=!1)),p||(a.position.left=a.prevPosition.left,a.position.top=a.prevPosition.top,a.size.width=a.prevSize.width,a.size.height=a.prevSize.height)},stop:function(){var e=t(this).resizable("instance"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),l=a.outerWidth()-e.sizeDiff.width,h=a.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:l,height:h}),e._helper&&!i.animate&&/static/.test(o.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:l,height:h})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).resizable("instance"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css("left")),top:parseFloat(e.css("top"))})})},resize:function(e,i){var s=t(this).resizable("instance"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0};
t(n.alsoResize).each(function(){var e=t(this),s=t(this).data("ui-resizable-alsoresize"),n={},o=e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(o,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&i>=0&&(n[e]=i||null)}),e.css(n)})},stop:function(){t(this).removeData("ui-resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).resizable("instance"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,"ui-resizable-ghost"),t.uiBackCompat!==!1&&"string"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable("instance");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable("instance");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e,i=t(this).resizable("instance"),s=i.options,n=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,l="number"==typeof s.grid?[s.grid,s.grid]:s.grid,h=l[0]||1,c=l[1]||1,u=Math.round((n.width-o.width)/h)*h,d=Math.round((n.height-o.height)/c)*c,p=o.width+u,f=o.height+d,g=s.maxWidth&&p>s.maxWidth,m=s.maxHeight&&f>s.maxHeight,_=s.minWidth&&s.minWidth>p,v=s.minHeight&&s.minHeight>f;s.grid=l,_&&(p+=h),v&&(f+=c),g&&(p-=h),m&&(f-=c),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=a.left-u):((0>=f-c||0>=p-h)&&(e=i._getPaddingPlusBorderDimensions(this)),f-c>0?(i.size.height=f,i.position.top=a.top-d):(f=c-e.height,i.size.height=f,i.position.top=a.top+o.height-f),p-h>0?(i.size.width=p,i.position.left=a.left-u):(p=h-e.width,i.size.width=p,i.position.left=a.left+o.width-p))}}),t.ui.resizable,t.widget("ui.selectable",t.ui.mouse,{version:"1.12.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e.elementPos=t(e.element[0]).offset(),e.selectees=t(e.options.filter,e.element[0]),e._addClass(e.selectees,"ui-selectee"),e.selectees.each(function(){var i=t(this),s=i.offset(),n={left:s.left-e.elementPos.left,top:s.top-e.elementPos.top};t.data(this,"selectable-item",{element:this,$element:i,left:n.left,top:n.top,right:n.left+i.outerWidth(),bottom:n.top+i.outerHeight(),startselected:!1,selected:i.hasClass("ui-selected"),selecting:i.hasClass("ui-selecting"),unselecting:i.hasClass("ui-unselecting")})})},this.refresh(),this._mouseInit(),this.helper=t("<div>"),this._addClass(this.helper,"ui-selectable-helper")},_destroy:function(){this.selectees.removeData("selectable-item"),this._mouseDestroy()},_mouseStart:function(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.elementPos=t(this.element[0]).offset(),this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger("start",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var s=t.data(this,"selectable-item");s.startselected=!0,e.metaKey||e.ctrlKey||(i._removeClass(s.$element,"ui-selected"),s.selected=!1,i._addClass(s.$element,"ui-unselecting"),s.unselecting=!0,i._trigger("unselecting",e,{unselecting:s.element}))}),t(e.target).parents().addBack().each(function(){var s,n=t.data(this,"selectable-item");return n?(s=!e.metaKey&&!e.ctrlKey||!n.$element.hasClass("ui-selected"),i._removeClass(n.$element,s?"ui-unselecting":"ui-selected")._addClass(n.$element,s?"ui-selecting":"ui-unselecting"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger("selecting",e,{selecting:n.element}):i._trigger("unselecting",e,{unselecting:n.element}),!1):void 0}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,o=this.opos[0],a=this.opos[1],r=e.pageX,l=e.pageY;return o>r&&(i=r,r=o,o=i),a>l&&(i=l,l=a,a=i),this.helper.css({left:o,top:a,width:r-o,height:l-a}),this.selectees.each(function(){var i=t.data(this,"selectable-item"),h=!1,c={};i&&i.element!==s.element[0]&&(c.left=i.left+s.elementPos.left,c.right=i.right+s.elementPos.left,c.top=i.top+s.elementPos.top,c.bottom=i.bottom+s.elementPos.top,"touch"===n.tolerance?h=!(c.left>r||o>c.right||c.top>l||a>c.bottom):"fit"===n.tolerance&&(h=c.left>o&&r>c.right&&c.top>a&&l>c.bottom),h?(i.selected&&(s._removeClass(i.$element,"ui-selected"),i.selected=!1),i.unselecting&&(s._removeClass(i.$element,"ui-unselecting"),i.unselecting=!1),i.selecting||(s._addClass(i.$element,"ui-selecting"),i.selecting=!0,s._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,s._addClass(i.$element,"ui-selected"),i.selected=!0):(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,i.startselected&&(s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0),s._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(s._removeClass(i.$element,"ui-selected"),i.selected=!1,s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0,s._trigger("unselecting",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-unselecting"),s.unselecting=!1,s.startselected=!1,i._trigger("unselected",e,{unselected:s.element})}),t(".ui-selecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-selecting")._addClass(s.$element,"ui-selected"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger("selected",e,{selected:s.element})}),this._trigger("stop",e),this.helper.remove(),!1}}),t.widget("ui.sortable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){var e=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),t.each(this.items,function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle")})},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+"-item")===o?(s=t(this),!1):void 0}),t.data(e.target,o.widgetName+"-item")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find("*").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&"auto"!==a.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("<style>*{ cursor: "+a.cursor+" !important; }</style>").appendTo(o)),a.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),a.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?"next":"prev"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&("semi-dynamic"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&"x"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new t.Event("mouseup",{target:null})),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&s.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+"="),s.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||"id")||"")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,l=r+t.height,h=this.offset.click.top,c=this.offset.click.left,u="x"===this.options.axis||s+h>r&&l>s+h,d="y"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&l>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var e,i,s="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),n="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),o=s&&n;return o?(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?"right"===i||"down"===e?2:1:e&&("down"===e?2:1)):!1},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),n=this._getDragHorizontalDirection();return this.floating&&n?"right"===n&&i||"left"===n&&!i:s&&("down"===s&&e||"up"===s&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],l=[],h=this._connectWith();if(h&&e)for(s=h.length-1;s>=0;s--)for(o=t(h[s],this.document[0]),n=o.length-1;n>=0;n--)a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&l.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),s=l.length-1;s>=0;s--)l[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,l,h,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i],this.document[0]),s=n.length-1;s>=0;s--)o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],s=0,h=r.length;h>s;s++)l=t(r[s]),l.data(this.widgetName+"-item",a),c.push({item:l,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=this.items.length?"x"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t("<"+s+">",e.document[0]);return e._addClass(n,"ui-sortable-placeholder",i||e.currentItem[0].className)._removeClass(n,"ui-sortable-helper"),"tbody"===s?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(n)):"tr"===s?e._createTrPlaceholder(e.currentItem,n):"img"===s&&n.attr("src",e.currentItem.attr("src")),i||n.css("visibility","hidden"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var s=this;e.children().each(function(){t("<td>&#160;</td>",s.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i)})},_contactContainers:function(e){var i,s,n,o,a,r,l,h,c,u,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(n=1e4,o=null,c=d.floating||this._isFloating(this.currentItem),a=c?"left":"top",r=c?"width":"height",u=c?"pageX":"pageY",s=this.items.length-1;s>=0;s--)t.contains(this.containers[p].element[0],this.items[s].item[0])&&this.items[s].item[0]!==this.currentItem[0]&&(l=this.items[s].item.offset()[a],h=!1,e[u]-l>this.items[s][r]/2&&(h=!0),n>Math.abs(e[u]-l)&&(n=Math.abs(e[u]-l),o=this.items[s],this.direction=h?"up":"down"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return this.currentContainer.containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1),void 0;o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger("change",e,this._uiHash()),this.containers[p]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return s.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;"parent"===n.containment&&(n.containment=this.helper[0].parentNode),("document"===n.containment||"window"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===n.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===n.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)("auto"===this._storedCSS[s]||"static"===this._storedCSS[s])&&(this._storedCSS[s]="");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger("remove",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--)e||n.push(i("deactivate",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i("out",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(s=0;n.length>s;s++)n[s].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}}),t.widget("ui.accordion",{version:"1.12.1",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:"> li > :first-child, > :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),e.collapsible||e.active!==!1&&null!=e.active||(e.active=0),this._processPanels(),0>e.active&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t()}},_createIcons:function(){var e,i,s=this.options.icons;s&&(e=t("<span>"),this._addClass(e,"ui-accordion-header-icon","ui-icon "+s.header),e.prependTo(this.headers),i=this.active.children(".ui-accordion-header-icon"),this._removeClass(i,s.header)._addClass(i,null,s.activeHeader)._addClass(this.headers,"ui-accordion-icons"))
},_destroyIcons:function(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","")},_setOption:function(t,e){return"active"===t?(this._activate(e),void 0):("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||this.options.active!==!1||this._activate(0),"icons"===t&&(this._destroyIcons(),e&&this._createIcons()),void 0)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!t)},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,s=this.headers.length,n=this.headers.index(e.target),o=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:o=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[s-1]}o&&(t(e.target).attr("tabIndex",-1),t(o).attr("tabIndex",0),t(o).trigger("focus"),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().trigger("focus")},refresh:function(){var e=this.options;this._processPanels(),e.active===!1&&e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var e,i=this.options,s=i.heightStyle,n=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each(function(){var e=t(this),i=e.uniqueId().attr("id"),s=e.next(),n=s.uniqueId().attr("id");e.attr("aria-controls",n),s.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===s?(e=n.height(),this.element.siblings(":visible").each(function(){var i=t(this),s=i.css("position");"absolute"!==s&&"fixed"!==s&&(e-=i.outerHeight(!0))}),this.headers.each(function(){e-=t(this).outerHeight(!0)}),this.headers.next().each(function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===s&&(e=0,this.headers.next().each(function(){var i=t(this).is(":visible");i||t(this).show(),e=Math.max(e,t(this).css("height","").height()),i||t(this).hide()}).height(e))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return"number"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:"_keydown"};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i,s,n=this.options,o=this.active,a=t(e.currentTarget),r=a[0]===o[0],l=r&&n.collapsible,h=l?t():a.next(),c=o.next(),u={oldHeader:o,oldPanel:c,newHeader:l?t():a,newPanel:h};e.preventDefault(),r&&!n.collapsible||this._trigger("beforeActivate",e,u)===!1||(n.active=l?!1:this.headers.index(a),this.active=r?t():a,this._toggle(u),this._removeClass(o,"ui-accordion-header-active","ui-state-active"),n.icons&&(i=o.children(".ui-accordion-header-icon"),this._removeClass(i,null,n.icons.activeHeader)._addClass(i,null,n.icons.header)),r||(this._removeClass(a,"ui-accordion-header-collapsed")._addClass(a,"ui-accordion-header-active","ui-state-active"),n.icons&&(s=a.children(".ui-accordion-header-icon"),this._removeClass(s,null,n.icons.header)._addClass(s,null,n.icons.activeHeader)),this._addClass(a.next(),"ui-accordion-content-active")))},_toggle:function(e){var i=e.newPanel,s=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,e):(s.hide(),i.show(),this._toggleComplete(e)),s.attr({"aria-hidden":"true"}),s.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&s.length?s.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter(function(){return 0===parseInt(t(this).attr("tabIndex"),10)}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(t,e,i){var s,n,o,a=this,r=0,l=t.css("box-sizing"),h=t.length&&(!e.length||t.index()<e.index()),c=this.options.animate||{},u=h&&c.down||c,d=function(){a._toggleComplete(i)};return"number"==typeof u&&(o=u),"string"==typeof u&&(n=u),n=n||u.easing||c.easing,o=o||u.duration||c.duration,e.length?t.length?(s=t.show().outerHeight(),e.animate(this.hideProps,{duration:o,easing:n,step:function(t,e){e.now=Math.round(t)}}),t.hide().animate(this.showProps,{duration:o,easing:n,complete:d,step:function(t,i){i.now=Math.round(t),"height"!==i.prop?"content-box"===l&&(r+=i.now):"content"!==a.options.heightStyle&&(i.now=Math.round(s-e.outerHeight()-r),r=0)}}),void 0):e.animate(this.hideProps,o,n,d):t.animate(this.showProps,o,n,d)},_toggleComplete:function(t){var e=t.oldPanel,i=e.prev();this._removeClass(e,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}}),t.widget("ui.menu",{version:"1.12.1",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function(t){t.preventDefault()},"click .ui-menu-item":function(e){var i=t(e.target),s=t(t.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&&s.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(e){if(!this.previousFilter){var i=t(e.target).closest(".ui-menu-item"),s=t(e.currentTarget);i[0]===s[0]&&(this._removeClass(s.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(e,s))}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){var i=!t.contains(this.element[0],t.ui.safeActiveElement(this.document[0]));i&&this.collapseAll(e)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){var e=this.element.find(".ui-menu-item").removeAttr("role aria-disabled"),i=e.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),i.children().each(function(){var e=t(this);e.data("ui-menu-submenu-caret")&&e.remove()})},_keydown:function(e){var i,s,n,o,a=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:a=!1,s=this.previousFilter||"",o=!1,n=e.keyCode>=96&&105>=e.keyCode?""+(e.keyCode-96):String.fromCharCode(e.keyCode),clearTimeout(this.filterTimer),n===s?o=!0:n=s+n,i=this._filterMenuItems(n),i=o&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i,i.length||(n=String.fromCharCode(e.keyCode),i=this._filterMenuItems(n)),i.length?(this.focus(e,i),this.previousFilter=n,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}a&&e.preventDefault()},_activate:function(t){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(t):this.select(t))},refresh:function(){var e,i,s,n,o,a=this,r=this.options.icons.submenu,l=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),s=l.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var e=t(this),i=e.prev(),s=t("<span>").data("ui-menu-submenu-caret",!0);a._addClass(s,"ui-menu-icon","ui-icon "+r),i.attr("aria-haspopup","true").prepend(s),e.attr("aria-labelledby",i.attr("id"))}),this._addClass(s,"ui-menu","ui-widget ui-widget-content ui-front"),e=l.add(this.element),i=e.find(this.options.items),i.not(".ui-menu-item").each(function(){var e=t(this);a._isDivider(e)&&a._addClass(e,"ui-menu-divider","ui-widget-content")}),n=i.not(".ui-menu-item, .ui-menu-divider"),o=n.children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(n,"ui-menu-item")._addClass(o,"ui-menu-item-wrapper"),i.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){if("icons"===t){var i=this.element.find(".ui-menu-icon");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)}this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t+""),this._toggleClass(null,"ui-state-disabled",!!t)},focus:function(t,e){var i,s,n;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),s=this.active.children(".ui-menu-item-wrapper"),this._addClass(s,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",s.attr("id")),n=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(n,null,"ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(".ui-menu"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(e){var i,s,n,o,a,r;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,s=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,n=e.offset().top-this.activeMenu.offset().top-i-s,o=this.activeMenu.scrollTop(),a=this.activeMenu.height(),r=e.outerHeight(),0>n?this.activeMenu.scrollTop(o+n):n+r>a&&this.activeMenu.scrollTop(o+n-a+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:t(e&&e.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(e),this._removeClass(s.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=s},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false")},_closeOnDocumentClick:function(e){return!t(e.target).closest(".ui-menu").length},_isDivider:function(t){return!/[^\-\u2014\u2013\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(t,e,i){var s;this.active&&(s="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.find(this.options.items)[e]()),this.focus(i,s)},nextPage:function(e){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=t(this),0>i.offset().top-s-n}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items)[this.active?"last":"first"]())),void 0):(this.next(e),void 0)},previousPage:function(e){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=t(this),i.offset().top-s+n>0}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items).first())),void 0):(this.next(e),void 0)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i)},_filterMenuItems:function(e){var i=e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),s=RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return s.test(t.trim(t(this).children(".ui-menu-item-wrapper").text()))})}}),t.widget("ui.autocomplete",{version:"1.12.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,s,n=this.element[0].nodeName.toLowerCase(),o="textarea"===n,a="input"===n;this.isMultiLine=o||!a&&this._isContentEditable(this.element),this.valueMethod=this.element[o||a?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))return e=!0,s=!0,i=!0,void 0;e=!1,s=!1,i=!1;var o=t.ui.keyCode;switch(n.keyCode){case o.PAGE_UP:e=!0,this._move("previousPage",n);break;case o.PAGE_DOWN:e=!0,this._move("nextPage",n);break;case o.UP:e=!0,this._keyEvent("previous",n);break;case o.DOWN:e=!0,this._keyEvent("next",n);break;case o.ENTER:this.menu.active&&(e=!0,n.preventDefault(),this.menu.select(n));break;case o.TAB:this.menu.active&&this.menu.select(n);break;case o.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(e)return e=!1,(!this.isMultiLine||this.menu.element.is(":visible"))&&s.preventDefault(),void 0;if(!i){var n=t.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(t){return s?(s=!1,t.preventDefault(),void 0):(this._searchTimeout(t),void 0)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(clearTimeout(this.searching),this.close(t),this._change(t),void 0)}}),this._initSource(),this.menu=t("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,this.element[0]!==t.ui.safeActiveElement(this.document[0])&&this.element.trigger("focus")})},menufocus:function(e,i){var s,n;return this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type))?(this.menu.blur(),this.document.one("mousemove",function(){t(e.target).trigger(e.originalEvent)}),void 0):(n=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",e,{item:n})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(n.value),s=i.item.attr("aria-label")||n.value,s&&t.trim(s).length&&(this.liveRegion.children().hide(),t("<div>").text(s).appendTo(this.liveRegion)),void 0)},menuselect:function(e,i){var s=i.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==t.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=s})),!1!==this._trigger("select",e,{item:s})&&this._value(s.value),this.term=this._value(),this.close(e),this.selectedItem=s}}),this.liveRegion=t("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(e){var i=this.menu.element[0];return e.target===this.element[0]||e.target===i||t.contains(i,e.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,s=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,s){s(t.ui.autocomplete.filter(e,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,n){s.xhr&&s.xhr.abort(),s.xhr=t.ajax({url:i,data:e,dataType:"json",success:function(t){n(t)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay(function(){var e=this.term===this._value(),i=this.menu.element.is(":visible"),s=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;(!e||e&&!i&&!s)&&(this.selectedItem=null,this.search(null,t))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):this._trigger("search",e)!==!1?this._search(t):void 0},_search:function(t){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")},this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,function(e){return"string"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label})})},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var s=this;t.each(i,function(t,i){s._renderItemData(e,i)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(e,i){return t("<li>").append(t("<div>").text(i.label)).appendTo(e)},_move:function(t,e){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),this.menu.blur(),void 0):(this.menu[t](e),void 0):(this.search(null,e),void 0)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop("contentEditable");return"inherit"===e?this._isContentEditable(t.parent()):"true"===e}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(e,i){var s=RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,function(t){return s.test(t.label||t.value||t)})}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(t>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.children().hide(),t("<div>").text(i).appendTo(this.liveRegion))}}),t.ui.autocomplete;var d=/ui-corner-([a-z]){2,6}/g;t.widget("ui.controlgroup",{version:"1.12.1",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr("role","toolbar"),this.refresh()},_destroy:function(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()},_initWidgets:function(){var e=this,i=[];t.each(this.options.items,function(s,n){var o,a={};return n?"controlgroupLabel"===s?(o=e.element.find(n),o.each(function(){var e=t(this);e.children(".ui-controlgroup-label-contents").length||e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")}),e._addClass(o,null,"ui-widget ui-widget-content ui-state-default"),i=i.concat(o.get()),void 0):(t.fn[s]&&(a=e["_"+s+"Options"]?e["_"+s+"Options"]("middle"):{classes:{}},e.element.find(n).each(function(){var n=t(this),o=n[s]("instance"),r=t.widget.extend({},a);if("button"!==s||!n.parent(".ui-spinner").length){o||(o=n[s]()[s]("instance")),o&&(r.classes=e._resolveClassesValues(r.classes,o)),n[s](r);var l=n[s]("widget");t.data(l[0],"ui-controlgroup-data",o?o:n[s]("instance")),i.push(l[0])}})),void 0):void 0}),this.childWidgets=t(t.unique(i)),this._addClass(this.childWidgets,"ui-controlgroup-item")},_callChildMethod:function(e){this.childWidgets.each(function(){var i=t(this),s=i.data("ui-controlgroup-data");s&&s[e]&&s[e]()})},_updateCornerClass:function(t,e){var i="ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all",s=this._buildSimpleOptions(e,"label").classes.label;this._removeClass(t,null,i),this._addClass(t,null,s)},_buildSimpleOptions:function(t,e){var i="vertical"===this.options.direction,s={classes:{}};return s.classes[e]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[t],s},_spinnerOptions:function(t){var e=this._buildSimpleOptions(t,"ui-spinner");return e.classes["ui-spinner-up"]="",e.classes["ui-spinner-down"]="",e},_buttonOptions:function(t){return this._buildSimpleOptions(t,"ui-button")},_checkboxradioOptions:function(t){return this._buildSimpleOptions(t,"ui-checkboxradio-label")},_selectmenuOptions:function(t){var e="vertical"===this.options.direction;return{width:e?"auto":!1,classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(e?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(e?"top":"left")},last:{"ui-selectmenu-button-open":e?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(e?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[t]}},_resolveClassesValues:function(e,i){var s={};return t.each(e,function(n){var o=i.options.classes[n]||"";o=t.trim(o.replace(d,"")),s[n]=(o+" "+e[n]).replace(/\s+/g," ")}),s},_setOption:function(t,e){return"direction"===t&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(t,e),"disabled"===t?(this._callChildMethod(e?"disable":"enable"),void 0):(this.refresh(),void 0)},refresh:function(){var e,i=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),e=this.childWidgets,this.options.onlyVisible&&(e=e.filter(":visible")),e.length&&(t.each(["first","last"],function(t,s){var n=e[s]().data("ui-controlgroup-data");if(n&&i["_"+n.widgetName+"Options"]){var o=i["_"+n.widgetName+"Options"](1===e.length?"only":s);o.classes=i._resolveClassesValues(o.classes,n),n.element[n.widgetName](o)}else i._updateCornerClass(e[s](),s)}),this._callChildMethod("refresh"))}}),t.widget("ui.checkboxradio",[t.ui.formResetMixin,{version:"1.12.1",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function(){var e,i,s=this,n=this._super()||{};return this._readType(),i=this.element.labels(),this.label=t(i[i.length-1]),this.label.length||t.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element[0]).each(function(){s.originalLabel+=3===this.nodeType?t(this).text():this.outerHTML}),this.originalLabel&&(n.label=this.originalLabel),e=this.element[0].disabled,null!=e&&(n.disabled=e),n},_create:function(){var t=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),t&&(this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this.icon&&this._addClass(this.icon,null,"ui-state-hover")),this._on({change:"_toggleClasses",focus:function(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus")},blur:function(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus")}})},_readType:function(){var e=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===e&&/radio|checkbox/.test(this.type)||t.error("Can't create checkboxradio on element.nodeName="+e+" and element.type="+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var e,i=this.element[0].name,s="input[name='"+t.ui.escapeSelector(i)+"']";return i?(e=this.form.length?t(this.form[0].elements).filter(s):t(s).filter(function(){return 0===t(this).form().length}),e.not(this.element)):t([])},_toggleClasses:function(){var e=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",e),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",e)._toggleClass(this.icon,null,"ui-icon-blank",!e),"radio"===this.type&&this._getRadioGroup().each(function(){var e=t(this).checkboxradio("instance");e&&e._removeClass(e.label,"ui-checkboxradio-checked","ui-state-active")})},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(t,e){return"label"!==t||e?(this._super(t,e),"disabled"===t?(this._toggleClass(this.label,null,"ui-state-disabled",e),this.element[0].disabled=e,void 0):(this.refresh(),void 0)):void 0},_updateIcon:function(e){var i="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=t("<span>"),this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(i+=e?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,e?"ui-icon-blank":"ui-icon-check")):i+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",i),e||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)
},_updateLabel:function(){var t=this.label.contents().not(this.element[0]);this.icon&&(t=t.not(this.icon[0])),this.iconSpace&&(t=t.not(this.iconSpace[0])),t.remove(),this.label.append(this.options.label)},refresh:function(){var t=this.element[0].checked,e=this.element[0].disabled;this._updateIcon(t),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),null!==this.options.label&&this._updateLabel(),e!==this.options.disabled&&this._setOptions({disabled:e})}}]),t.ui.checkboxradio,t.widget("ui.button",{version:"1.12.1",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function(){var t,e=this._super()||{};return this.isInput=this.element.is("input"),t=this.element[0].disabled,null!=t&&(e.disabled=t),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(e.label=this.originalLabel),e},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function(e){e.keyCode===t.ui.keyCode.SPACE&&(e.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"))}})},_enhance:function(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label)},_updateIcon:function(e,i){var s="iconPosition"!==e,n=s?this.options.iconPosition:i,o="top"===n||"bottom"===n;this.icon?s&&this._removeClass(this.icon,null,this.options.icon):(this.icon=t("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),s&&this._addClass(this.icon,null,i),this._attachIcon(n),o?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(n))},_destroy:function(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title")},_attachIconSpace:function(t){this.icon[/^(?:end|bottom)/.test(t)?"before":"after"](this.iconSpace)},_attachIcon:function(t){this.element[/^(?:end|bottom)/.test(t)?"append":"prepend"](this.icon)},_setOptions:function(t){var e=void 0===t.showLabel?this.options.showLabel:t.showLabel,i=void 0===t.icon?this.options.icon:t.icon;e||i||(t.showLabel=!0),this._super(t)},_setOption:function(t,e){"icon"===t&&(e?this._updateIcon(t,e):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===t&&this._updateIcon(t,e),"showLabel"===t&&(this._toggleClass("ui-button-icon-only",null,!e),this._updateTooltip()),"label"===t&&(this.isInput?this.element.val(e):(this.element.html(e),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(t,e),"disabled"===t&&(this._toggleClass(null,"ui-state-disabled",e),this.element[0].disabled=e,e&&this.element.blur())},refresh:function(){var t=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOptions({disabled:t}),this._updateTooltip()}}),t.uiBackCompat!==!1&&(t.widget("ui.button",t.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super()},_setOption:function(t,e){return"text"===t?(this._super("showLabel",e),void 0):("showLabel"===t&&(this.options.text=e),"icon"===t&&(this.options.icons.primary=e),"icons"===t&&(e.primary?(this._super("icon",e.primary),this._super("iconPosition","beginning")):e.secondary&&(this._super("icon",e.secondary),this._super("iconPosition","end"))),this._superApply(arguments),void 0)}}),t.fn.button=function(e){return function(){return!this.length||this.length&&"INPUT"!==this[0].tagName||this.length&&"INPUT"===this[0].tagName&&"checkbox"!==this.attr("type")&&"radio"!==this.attr("type")?e.apply(this,arguments):(t.ui.checkboxradio||t.error("Checkboxradio widget missing"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments))}}(t.fn.button),t.fn.buttonset=function(){return t.ui.controlgroup||t.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))}),t.ui.button,t.extend(t.ui,{datepicker:{version:"1.12.1"}});var p;t.extend(s.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return a(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var s,n,o;s=e.nodeName.toLowerCase(),n="div"===s||"span"===s,e.id||(this.uuid+=1,e.id="dp"+this.uuid),o=this._newInst(t(e),n),o.settings=t.extend({},i||{}),"input"===s?this._connectDatepicker(e,o):n&&this._inlineDatepicker(e,o)},_newInst:function(e,i){var s=e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:s,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?n(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(e,i){var s=t(e);i.append=t([]),i.trigger=t([]),s.hasClass(this.markerClassName)||(this._attachments(s,i),s.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var s,n,o,a=this._get(i,"appendText"),r=this._get(i,"isRTL");i.append&&i.append.remove(),a&&(i.append=t("<span class='"+this._appendClass+"'>"+a+"</span>"),e[r?"before":"after"](i.append)),e.off("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),s=this._get(i,"showOn"),("focus"===s||"both"===s)&&e.on("focus",this._showDatepicker),("button"===s||"both"===s)&&(n=this._get(i,"buttonText"),o=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("<img/>").addClass(this._triggerClass).attr({src:o,alt:n,title:n}):t("<button type='button'></button>").addClass(this._triggerClass).html(o?t("<img/>").attr({src:o,alt:n,title:n}):n)),e[r?"before":"after"](i.trigger),i.trigger.on("click",function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,s,n,o=new Date(2009,11,20),a=this._get(t,"dateFormat");a.match(/[DM]/)&&(e=function(t){for(i=0,s=0,n=0;t.length>n;n++)t[n].length>i&&(i=t[n].length,s=n);return s},o.setMonth(e(this._get(t,a.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,a.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length)}},_inlineDatepicker:function(e,i){var s=t(e);s.hasClass(this.markerClassName)||(s.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,s,n,o){var r,l,h,c,u,d=this._dialogInst;return d||(this.uuid+=1,r="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+r+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),t("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},t.data(this._dialogInput[0],"datepicker",d)),a(d.settings,n||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(l=document.documentElement.clientWidth,h=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+c,h/2-150+u]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=s,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(e){var i,s=t(e),n=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(n.append.remove(),n.trigger.remove(),s.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):("div"===i||"span"===i)&&s.removeClass(this.markerClassName).empty(),p===n&&(p=null))},_enableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!1,o.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&(s=n.children("."+this._inlineClass),s.children().removeClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!0,o.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&(s=n.children("."+this._inlineClass),s.children().addClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;this._disabledInputs.length>e;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,"datepicker")}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,i,s){var n,o,r,l,h=this._getInst(e);return 2===arguments.length&&"string"==typeof i?"defaults"===i?t.extend({},t.datepicker._defaults):h?"all"===i?t.extend({},h.settings):this._get(h,i):null:(n=i||{},"string"==typeof i&&(n={},n[i]=s),h&&(this._curInst===h&&this._hideDatepicker(),o=this._getDateDatepicker(e,!0),r=this._getMinMaxDate(h,"min"),l=this._getMinMaxDate(h,"max"),a(h.settings,n),null!==r&&void 0!==n.dateFormat&&void 0===n.minDate&&(h.settings.minDate=this._formatDate(h,r)),null!==l&&void 0!==n.dateFormat&&void 0===n.maxDate&&(h.settings.maxDate=this._formatDate(h,l)),"disabled"in n&&(n.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),h),this._autoSize(h),this._setDate(h,o),this._updateAlternate(h),this._updateDatepicker(h)),void 0)},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,s,n,o=t.datepicker._getInst(e.target),a=!0,r=o.dpDiv.is(".ui-datepicker-rtl");if(o._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),a=!1;break;case 13:return n=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",o.dpDiv),n[0]&&t.datepicker._selectDay(e.target,o.selectedMonth,o.selectedYear,n[0]),i=t.datepicker._get(o,"onSelect"),i?(s=t.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[s,o])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),a=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),a=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?1:-1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),a=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?-1:1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),a=e.ctrlKey||e.metaKey;break;default:a=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):a=!1;a&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,s,n=t.datepicker._getInst(e.target);return t.datepicker._get(n,"constrainInput")?(i=t.datepicker._possibleChars(t.datepicker._get(n,"dateFormat")),s=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||" ">s||!i||i.indexOf(s)>-1):void 0},_doKeyUp:function(e){var i,s=t.datepicker._getInst(e.target);if(s.input.val()!==s.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(s,"dateFormat"),s.input?s.input.val():null,t.datepicker._getFormatConfig(s)),i&&(t.datepicker._setDateFromField(s),t.datepicker._updateAlternate(s),t.datepicker._updateDatepicker(s))}catch(n){}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!==e.nodeName.toLowerCase()&&(e=t("input",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&&t.datepicker._lastInput!==e){var s,n,o,r,l,h,c;s=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==s&&(t.datepicker._curInst.dpDiv.stop(!0,!0),s&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),n=t.datepicker._get(s,"beforeShow"),o=n?n.apply(e,[e,s]):{},o!==!1&&(a(s.settings,o),s.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(s),t.datepicker._inDialog&&(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),r=!1,t(e).parents().each(function(){return r|="fixed"===t(this).css("position"),!r}),l={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,s.dpDiv.empty(),s.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(s),l=t.datepicker._checkOffset(s,l,r),s.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":r?"fixed":"absolute",display:"none",left:l.left+"px",top:l.top+"px"}),s.inline||(h=t.datepicker._get(s,"showAnim"),c=t.datepicker._get(s,"duration"),s.dpDiv.css("z-index",i(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[h]?s.dpDiv.show(h,t.datepicker._get(s,"showOptions"),c):s.dpDiv[h||"show"](h?c:null),t.datepicker._shouldFocusInput(s)&&s.input.trigger("focus"),t.datepicker._curInst=s))}},_updateDatepicker:function(e){this.maxRows=4,p=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,s=this._getNumberOfMonths(e),n=s[1],a=17,r=e.dpDiv.find("."+this._dayOverClass+" a");r.length>0&&o.apply(r.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),n>1&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",a*n+"em"),e.dpDiv[(1!==s[0]||1!==s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.trigger("focus"),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(e,i,s){var n=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,l=document.documentElement.clientWidth+(s?0:t(document).scrollLeft()),h=document.documentElement.clientHeight+(s?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?n-a:0,i.left-=s&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=s&&i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+n>l&&l>n?Math.abs(i.left+n-l):0),i.top-=Math.min(i.top,i.top+o>h&&h>o?Math.abs(o+r):0),i},_findPos:function(e){for(var i,s=this._getInst(e),n=this._get(s,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[n?"previousSibling":"nextSibling"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,s,n,o,a=this._curInst;!a||e&&a!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(a,"showAnim"),s=this._get(a,"duration"),n=function(){t.datepicker._tidyDialog(a)},t.effects&&(t.effects.effect[i]||t.effects[i])?a.dpDiv.hide(i,t.datepicker._get(a,"showOptions"),s,n):a.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?s:null,n),i||n(),this._datepickerShowing=!1,o=this._get(a,"onClose"),o&&o.apply(a.input?a.input[0]:null,[a.input?a.input.val():"",a]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),s=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents("#"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest("."+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==s)&&t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,s){var n=t(e),o=this._getInst(n[0]);this._isDisabledDatepicker(n[0])||(this._adjustInstDate(o,i+("M"===s?this._get(o,"showCurrentAtPos"):0),s),this._updateDatepicker(o))},_gotoToday:function(e){var i,s=t(e),n=this._getInst(s[0]);this._get(n,"gotoCurrent")&&n.currentDay?(n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear):(i=new Date,n.selectedDay=i.getDate(),n.drawMonth=n.selectedMonth=i.getMonth(),n.drawYear=n.selectedYear=i.getFullYear()),this._notifyChange(n),this._adjustDate(s)},_selectMonthYear:function(e,i,s){var n=t(e),o=this._getInst(n[0]);o["selected"+("M"===s?"Month":"Year")]=o["draw"+("M"===s?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(n)},_selectDay:function(e,i,s,n){var o,a=t(e);t(n).hasClass(this._unselectableClass)||this._isDisabledDatepicker(a[0])||(o=this._getInst(a[0]),o.selectedDay=o.currentDay=t("a",n).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=s,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,"")},_selectDate:function(e,i){var s,n=t(e),o=this._getInst(n[0]);i=null!=i?i:this._formatDate(o),o.input&&o.input.val(i),this._updateAlternate(o),s=this._get(o,"onSelect"),s?s.apply(o.input?o.input[0]:null,[i,o]):o.input&&o.input.trigger("change"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],"object"!=typeof o.input[0]&&o.input.trigger("focus"),this._lastInput=null)},_updateAlternate:function(e){var i,s,n,o=this._get(e,"altField");o&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e)),t(o).val(n))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(e,i,s){if(null==e||null==i)throw"Invalid arguments";if(i="object"==typeof i?""+i:i+"",""===i)return null;var n,o,a,r,l=0,h=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,c="string"!=typeof h?h:(new Date).getFullYear()%100+parseInt(h,10),u=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,d=(s?s.dayNames:null)||this._defaults.dayNames,p=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,f=(s?s.monthNames:null)||this._defaults.monthNames,g=-1,m=-1,_=-1,v=-1,b=!1,y=function(t){var i=e.length>n+1&&e.charAt(n+1)===t;return i&&n++,i},w=function(t){var e=y(t),s="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,n="y"===t?s:1,o=RegExp("^\\d{"+n+","+s+"}"),a=i.substring(l).match(o);if(!a)throw"Missing number at position "+l;return l+=a[0].length,parseInt(a[0],10)},k=function(e,s,n){var o=-1,a=t.map(y(e)?n:s,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(a,function(t,e){var s=e[1];return i.substr(l,s.length).toLowerCase()===s.toLowerCase()?(o=e[0],l+=s.length,!1):void 0}),-1!==o)return o+1;throw"Unknown name at position "+l},x=function(){if(i.charAt(l)!==e.charAt(n))throw"Unexpected literal at position "+l;l++};for(n=0;e.length>n;n++)if(b)"'"!==e.charAt(n)||y("'")?x():b=!1;else switch(e.charAt(n)){case"d":_=w("d");break;case"D":k("D",u,d);break;case"o":v=w("o");break;case"m":m=w("m");break;case"M":m=k("M",p,f);break;case"y":g=w("y");break;case"@":r=new Date(w("@")),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case"!":r=new Date((w("!")-this._ticksTo1970)/1e4),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case"'":y("'")?x():b=!0;break;default:x()}if(i.length>l&&(a=i.substr(l),!/^\s+/.test(a)))throw"Extra/unparsed characters found in date: "+a;if(-1===g?g=(new Date).getFullYear():100>g&&(g+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c>=g?0:-100)),v>-1)for(m=1,_=v;;){if(o=this._getDaysInMonth(g,m-1),o>=_)break;m++,_-=o}if(r=this._daylightSavingAdjust(new Date(g,m-1,_)),r.getFullYear()!==g||r.getMonth()+1!==m||r.getDate()!==_)throw"Invalid date";return r},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(t,e,i){if(!e)return"";var s,n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,l=function(e){var i=t.length>s+1&&t.charAt(s+1)===e;return i&&s++,i},h=function(t,e,i){var s=""+e;if(l(t))for(;i>s.length;)s="0"+s;return s},c=function(t,e,i,s){return l(t)?s[e]:i[e]},u="",d=!1;if(e)for(s=0;t.length>s;s++)if(d)"'"!==t.charAt(s)||l("'")?u+=t.charAt(s):d=!1;else switch(t.charAt(s)){case"d":u+=h("d",e.getDate(),2);break;case"D":u+=c("D",e.getDay(),n,o);break;case"o":u+=h("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=h("m",e.getMonth()+1,2);break;case"M":u+=c("M",e.getMonth(),a,r);break;case"y":u+=l("y")?e.getFullYear():(10>e.getFullYear()%100?"0":"")+e.getFullYear()%100;break;case"@":u+=e.getTime();break;case"!":u+=1e4*e.getTime()+this._ticksTo1970;break;case"'":l("'")?u+="'":d=!0;break;default:u+=t.charAt(s)}return u},_possibleChars:function(t){var e,i="",s=!1,n=function(i){var s=t.length>e+1&&t.charAt(e+1)===i;return s&&e++,s};for(e=0;t.length>e;e++)if(s)"'"!==t.charAt(e)||n("'")?i+=t.charAt(e):s=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":n("'")?i+="'":s=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),s=t.lastVal=t.input?t.input.val():null,n=this._getDefaultDate(t),o=n,a=this._getFormatConfig(t);try{o=this.parseDate(i,s,a)||n}catch(r){s=e?"":s}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=s?o.getDate():0,t.currentMonth=s?o.getMonth():0,t.currentYear=s?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,s){var n=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},o=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(s){}for(var n=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,o=n.getFullYear(),a=n.getMonth(),r=n.getDate(),l=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,h=l.exec(i);h;){switch(h[2]||"d"){case"d":case"D":r+=parseInt(h[1],10);break;case"w":case"W":r+=7*parseInt(h[1],10);break;case"m":case"M":a+=parseInt(h[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a));break;case"y":case"Y":o+=parseInt(h[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a))}h=l.exec(i)}return new Date(o,a,r)},a=null==i||""===i?s:"string"==typeof i?o(i):"number"==typeof i?isNaN(i)?s:n(i):new Date(i.getTime());return a=a&&"Invalid Date"==""+a?s:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var s=!e,n=t.selectedMonth,o=t.selectedYear,a=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=a.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=a.getMonth(),t.drawYear=t.selectedYear=t.currentYear=a.getFullYear(),n===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(s?"":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),s="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){t.datepicker._adjustDate(s,-i,"M")},next:function(){t.datepicker._adjustDate(s,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(s)},selectDay:function(){return t.datepicker._selectDay(s,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(s,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(s,this,"Y"),!1}};t(this).on(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(t){var e,i,s,n,o,a,r,l,h,c,u,d,p,f,g,m,_,v,b,y,w,k,x,C,D,T,I,M,P,S,N,H,A,z,O,E,W,F,L,R=new Date,Y=this._daylightSavingAdjust(new Date(R.getFullYear(),R.getMonth(),R.getDate())),B=this._get(t,"isRTL"),j=this._get(t,"showButtonPanel"),q=this._get(t,"hideIfNoPrevNext"),K=this._get(t,"navigationAsDateFormat"),U=this._getNumberOfMonths(t),V=this._get(t,"showCurrentAtPos"),X=this._get(t,"stepMonths"),$=1!==U[0]||1!==U[1],G=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),J=this._getMinMaxDate(t,"min"),Q=this._getMinMaxDate(t,"max"),Z=t.drawMonth-V,te=t.drawYear;if(0>Z&&(Z+=12,te--),Q)for(e=this._daylightSavingAdjust(new Date(Q.getFullYear(),Q.getMonth()-U[0]*U[1]+1,Q.getDate())),e=J&&J>e?J:e;this._daylightSavingAdjust(new Date(te,Z,1))>e;)Z--,0>Z&&(Z=11,te--);for(t.drawMonth=Z,t.drawYear=te,i=this._get(t,"prevText"),i=K?this.formatDate(i,this._daylightSavingAdjust(new Date(te,Z-X,1)),this._getFormatConfig(t)):i,s=this._canAdjustMonth(t,-1,te,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(B?"e":"w")+"'>"+i+"</span></a>":q?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(B?"e":"w")+"'>"+i+"</span></a>",n=this._get(t,"nextText"),n=K?this.formatDate(n,this._daylightSavingAdjust(new Date(te,Z+X,1)),this._getFormatConfig(t)):n,o=this._canAdjustMonth(t,1,te,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(B?"w":"e")+"'>"+n+"</span></a>":q?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(B?"w":"e")+"'>"+n+"</span></a>",a=this._get(t,"currentText"),r=this._get(t,"gotoCurrent")&&t.currentDay?G:Y,a=K?this.formatDate(a,r,this._getFormatConfig(t)):a,l=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",h=j?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(B?l:"")+(this._isInRange(t,r)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+a+"</button>":"")+(B?"":l)+"</div>":"",c=parseInt(this._get(t,"firstDay"),10),c=isNaN(c)?0:c,u=this._get(t,"showWeek"),d=this._get(t,"dayNames"),p=this._get(t,"dayNamesMin"),f=this._get(t,"monthNames"),g=this._get(t,"monthNamesShort"),m=this._get(t,"beforeShowDay"),_=this._get(t,"showOtherMonths"),v=this._get(t,"selectOtherMonths"),b=this._getDefaultDate(t),y="",k=0;U[0]>k;k++){for(x="",this.maxRows=4,C=0;U[1]>C;C++){if(D=this._daylightSavingAdjust(new Date(te,Z,t.selectedDay)),T=" ui-corner-all",I="",$){if(I+="<div class='ui-datepicker-group",U[1]>1)switch(C){case 0:I+=" ui-datepicker-group-first",T=" ui-corner-"+(B?"right":"left");
break;case U[1]-1:I+=" ui-datepicker-group-last",T=" ui-corner-"+(B?"left":"right");break;default:I+=" ui-datepicker-group-middle",T=""}I+="'>"}for(I+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+T+"'>"+(/all|left/.test(T)&&0===k?B?o:s:"")+(/all|right/.test(T)&&0===k?B?s:o:"")+this._generateMonthYearHeader(t,Z,te,J,Q,k>0||C>0,f,g)+"</div><table class='ui-datepicker-calendar'><thead>"+"<tr>",M=u?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",w=0;7>w;w++)P=(w+c)%7,M+="<th scope='col'"+((w+c+6)%7>=5?" class='ui-datepicker-week-end'":"")+">"+"<span title='"+d[P]+"'>"+p[P]+"</span></th>";for(I+=M+"</tr></thead><tbody>",S=this._getDaysInMonth(te,Z),te===t.selectedYear&&Z===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,S)),N=(this._getFirstDayOfMonth(te,Z)-c+7)%7,H=Math.ceil((N+S)/7),A=$?this.maxRows>H?this.maxRows:H:H,this.maxRows=A,z=this._daylightSavingAdjust(new Date(te,Z,1-N)),O=0;A>O;O++){for(I+="<tr>",E=u?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(z)+"</td>":"",w=0;7>w;w++)W=m?m.apply(t.input?t.input[0]:null,[z]):[!0,""],F=z.getMonth()!==Z,L=F&&!v||!W[0]||J&&J>z||Q&&z>Q,E+="<td class='"+((w+c+6)%7>=5?" ui-datepicker-week-end":"")+(F?" ui-datepicker-other-month":"")+(z.getTime()===D.getTime()&&Z===t.selectedMonth&&t._keyEvent||b.getTime()===z.getTime()&&b.getTime()===D.getTime()?" "+this._dayOverClass:"")+(L?" "+this._unselectableClass+" ui-state-disabled":"")+(F&&!_?"":" "+W[1]+(z.getTime()===G.getTime()?" "+this._currentClass:"")+(z.getTime()===Y.getTime()?" ui-datepicker-today":""))+"'"+(F&&!_||!W[2]?"":" title='"+W[2].replace(/'/g,"&#39;")+"'")+(L?"":" data-handler='selectDay' data-event='click' data-month='"+z.getMonth()+"' data-year='"+z.getFullYear()+"'")+">"+(F&&!_?"&#xa0;":L?"<span class='ui-state-default'>"+z.getDate()+"</span>":"<a class='ui-state-default"+(z.getTime()===Y.getTime()?" ui-state-highlight":"")+(z.getTime()===G.getTime()?" ui-state-active":"")+(F?" ui-priority-secondary":"")+"' href='#'>"+z.getDate()+"</a>")+"</td>",z.setDate(z.getDate()+1),z=this._daylightSavingAdjust(z);I+=E+"</tr>"}Z++,Z>11&&(Z=0,te++),I+="</tbody></table>"+($?"</div>"+(U[0]>0&&C===U[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),x+=I}y+=x}return y+=h,t._keyEvent=!1,y},_generateMonthYearHeader:function(t,e,i,s,n,o,a,r){var l,h,c,u,d,p,f,g,m=this._get(t,"changeMonth"),_=this._get(t,"changeYear"),v=this._get(t,"showMonthAfterYear"),b="<div class='ui-datepicker-title'>",y="";if(o||!m)y+="<span class='ui-datepicker-month'>"+a[e]+"</span>";else{for(l=s&&s.getFullYear()===i,h=n&&n.getFullYear()===i,y+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",c=0;12>c;c++)(!l||c>=s.getMonth())&&(!h||n.getMonth()>=c)&&(y+="<option value='"+c+"'"+(c===e?" selected='selected'":"")+">"+r[c]+"</option>");y+="</select>"}if(v||(b+=y+(!o&&m&&_?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!_)b+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(u=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),p=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},f=p(u[0]),g=Math.max(f,p(u[1]||"")),f=s?Math.max(f,s.getFullYear()):f,g=n?Math.min(g,n.getFullYear()):g,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";g>=f;f++)t.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";t.yearshtml+="</select>",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,"yearSuffix"),v&&(b+=(!o&&m&&_?"":"&#xa0;")+y),b+="</div>"},_adjustInstDate:function(t,e,i){var s=t.selectedYear+("Y"===i?e:0),n=t.selectedMonth+("M"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(s,n))+("D"===i?e:0),a=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(s,n,o)));t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),s=this._getMinMaxDate(t,"max"),n=i&&i>e?i:e;return s&&n>s?s:n},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,s){var n=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,s+(0>e?e:n[0]*n[1]),1));return 0>e&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o)},_isInRange:function(t,e){var i,s,n=this._getMinMaxDate(t,"min"),o=this._getMinMaxDate(t,"max"),a=null,r=null,l=this._get(t,"yearRange");return l&&(i=l.split(":"),s=(new Date).getFullYear(),a=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(a+=s),i[1].match(/[+\-].*/)&&(r+=s)),(!n||e.getTime()>=n.getTime())&&(!o||e.getTime()<=o.getTime())&&(!a||e.getFullYear()>=a)&&(!r||r>=e.getFullYear())},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,s){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var n=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(s,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),n,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).on("mousedown",t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&&"getDate"!==e&&"widget"!==e?"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new s,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.12.1",t.datepicker,t.widget("ui.dialog",{version:"1.12.1",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var i=t(this).css(e).offset().top;0>i&&t(this).css("top",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),t=e.parent.children().eq(e.index),t.length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:t.noop,enable:t.noop,close:function(e){var i=this;this._isOpen&&this._trigger("beforeClose",e)!==!1&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,function(){i._trigger("close",e)}))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,i){var s=!1,n=this.uiDialog.siblings(".ui-front:visible").map(function(){return+t(this).css("z-index")}).get(),o=Math.max.apply(null,n);return o>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",o+1),s=!0),s&&!i&&this._trigger("focus",e),s},open:function(){var e=this;return this._isOpen?(this._moveToTop()&&this._focusTabbable(),void 0):(this._isOpen=!0,this.opener=t(t.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger("focus")}),this._makeFocusTarget(),this._trigger("open"),void 0)},_focusTabbable:function(){var t=this._focusedElement;t||(t=this.element.find("[autofocus]")),t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).trigger("focus")},_keepFocus:function(e){function i(){var e=t.ui.safeActiveElement(this.document[0]),i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),this.close(e),void 0;if(e.keyCode===t.ui.keyCode.TAB&&!e.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),s=i.filter(":first"),n=i.filter(":last");e.target!==n[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==s[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay(function(){n.trigger("focus")}),e.preventDefault()):(this._delay(function(){s.trigger("focus")}),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus")}}),this.uiDialogTitlebarClose=t("<button type='button'></button>").button({label:t("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(e,"ui-dialog-title"),this._title(e),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":e.attr("id")})},_title:function(t){this.options.title?t.text(this.options.title):t.html("&#160;")},_createButtonPane:function(){this.uiDialogButtonPane=t("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?(this._removeClass(this.uiDialog,"ui-dialog-buttons"),void 0):(t.each(i,function(i,s){var n,o;s=t.isFunction(s)?{click:s,text:i}:s,s=t.extend({type:"button"},s),n=s.click,o={icon:s.icon,iconPosition:s.iconPosition,showLabel:s.showLabel,icons:s.icons,text:s.text},delete s.click,delete s.icon,delete s.iconPosition,delete s.showLabel,delete s.icons,"boolean"==typeof s.text&&delete s.text,t("<button></button>",s).button(o).appendTo(e.uiButtonSet).on("click",function(){n.apply(e.element[0],arguments)})}),this._addClass(this.uiDialog,"ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog),void 0)},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,s=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(s,n){i._addClass(t(this),"ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",s,e(n))},drag:function(t,s){i._trigger("drag",t,e(s))},stop:function(n,o){var a=o.offset.left-i.document.scrollLeft(),r=o.offset.top-i.document.scrollTop();s.position={my:"left top",at:"left"+(a>=0?"+":"")+a+" "+"top"+(r>=0?"+":"")+r,of:i.window},i._removeClass(t(this),"ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",n,e(o))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,s=this.options,n=s.resizable,o=this.uiDialog.css("position"),a="string"==typeof n?n:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:s.maxWidth,maxHeight:s.maxHeight,minWidth:s.minWidth,minHeight:this._minHeight(),handles:a,start:function(s,n){i._addClass(t(this),"ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",s,e(n))},resize:function(t,s){i._trigger("resize",t,e(s))},stop:function(n,o){var a=i.uiDialog.offset(),r=a.left-i.document.scrollLeft(),l=a.top-i.document.scrollTop();s.height=i.uiDialog.height(),s.width=i.uiDialog.width(),s.position={my:"left top",at:"left"+(r>=0?"+":"")+r+" "+"top"+(l>=0?"+":"")+l,of:i.window},i._removeClass(t(this),"ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",n,e(o))}}).css("position",o)},_trackFocus:function(){this._on(this.widget(),{focusin:function(e){this._makeFocusTarget(),this._focusedElement=t(e.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1)},_trackingInstances:function(){var t=this.document.data("ui-dialog-instances");return t||(t=[],this.document.data("ui-dialog-instances",t)),t},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(e){var i=this,s=!1,n={};t.each(e,function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(s=!0),t in i.resizableRelatedOptions&&(n[t]=e)}),s&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",n)},_setOption:function(e,i){var s,n,o=this.uiDialog;"disabled"!==e&&(this._super(e,i),"appendTo"===e&&this.uiDialog.appendTo(this._appendTo()),"buttons"===e&&this._createButtons(),"closeText"===e&&this.uiDialogTitlebarClose.button({label:t("<a>").text(""+this.options.closeText).html()}),"draggable"===e&&(s=o.is(":data(ui-draggable)"),s&&!i&&o.draggable("destroy"),!s&&i&&this._makeDraggable()),"position"===e&&this._position(),"resizable"===e&&(n=o.is(":data(ui-resizable)"),n&&!i&&o.resizable("destroy"),n&&"string"==typeof i&&o.resizable("option","handles",i),n||i===!1||this._makeResizable()),"title"===e&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,s=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),s.minWidth>s.width&&(s.width=s.minWidth),t=this.uiDialog.css({height:"auto",width:s.width}).outerHeight(),e=Math.max(0,s.minHeight-t),i="number"==typeof s.maxHeight?Math.max(0,s.maxHeight-t):"none","auto"===s.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,s.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var e=t(this);return t("<div>").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return t(e.target).closest(".ui-dialog").length?!0:!!t(e.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var e=!0;this._delay(function(){e=!1}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(t){e||this._allowInteraction(t)||(t.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=t("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var t=this.document.data("ui-dialog-overlays")-1;t?this.document.data("ui-dialog-overlays",t):(this._off(this.document,"focusin"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null}}}),t.uiBackCompat!==!1&&t.widget("ui.dialog",t.ui.dialog,{options:{dialogClass:""},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(t,e){"dialogClass"===t&&this.uiDialog.removeClass(this.options.dialogClass).addClass(e),this._superApply(arguments)}}),t.ui.dialog,t.widget("ui.progressbar",{version:"1.12.1",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=t("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue()},_destroy:function(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove()},value:function(t){return void 0===t?this.options.value:(this.options.value=this._constrainedValue(t),this._refreshValue(),void 0)},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=t===!1,"number"!=typeof t&&(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){"max"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).width(i.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,e===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),e===this.options.max&&this._trigger("complete")}}),t.widget("ui.selectmenu",[t.ui.formResetMixin,{version:"1.12.1",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var e=this.element.uniqueId().attr("id");this.ids={element:e,button:e+"-button",menu:e+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=t()},_drawButton:function(){var e,i=this,s=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function(t){this.button.focus(),t.preventDefault()}}),this.element.hide(),this.button=t("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),e=t("<span>").appendTo(this.button),this._addClass(e,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(s).appendTo(this.button),this.options.width!==!1&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){i._rendered||i._refreshMenu()})},_drawMenu:function(){var e=this;this.menu=t("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=t("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data("ui-selectmenu-item"),t)},focus:function(t,i){var s=i.item.data("ui-selectmenu-item");null!=e.focusIndex&&s.index!==e.focusIndex&&(e._trigger("focus",t,{item:s}),e.isOpen||e._select(s,t)),e.focusIndex=s.index,e.button.attr("aria-activedescendant",e.menuItems.eq(s.index).attr("id"))}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var t,e=this.element.find("option");this.menu.empty(),this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,e.length&&(t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(t){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t)))},_position:function(){this.menuWrap.position(t.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(e){var i=t("<span>");return this._setText(i,e.label),this._addClass(i,"ui-selectmenu-text"),i},_renderMenu:function(e,i){var s=this,n="";t.each(i,function(i,o){var a;o.optgroup!==n&&(a=t("<li>",{text:o.optgroup}),s._addClass(a,"ui-selectmenu-optgroup","ui-menu-divider"+(o.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),a.appendTo(e),n=o.optgroup),s._renderItemData(e,o)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e)},_renderItem:function(e,i){var s=t("<li>"),n=t("<div>",{title:i.element.attr("title")});return i.disabled&&this._addClass(s,null,"ui-state-disabled"),this._setText(n,i.label),s.append(n).appendTo(e)},_setText:function(t,e){e?t.text(e):t.html("&#160;")},_move:function(t,e){var i,s,n=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),n+=":not(.ui-state-disabled)"),s="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](n).eq(-1):i[t+"All"](n).eq(0),s.length&&this.menuInstance.focus(e,s)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li")},_toggle:function(t){this[this.isOpen?"close":"open"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?(t=window.getSelection(),t.removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(e){this.isOpen&&(t(e.target).closest(".ui-selectmenu-menu, #"+t.ui.escapeSelector(this.ids.button)).length||this.close(e))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection(),t.rangeCount&&(this.range=t.getRangeAt(0))):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move("prev",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move("next",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move("prev",e);break;case t.ui.keyCode.RIGHT:this._move("next",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move("first",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move("last",e);break;default:this.menu.trigger(e),i=!1}i&&e.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex).parent("li");e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(t)),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e)},_setAria:function(t){var e=this.menuItems.eq(t.index).attr("id");this.button.attr({"aria-labelledby":e,"aria-activedescendant":e}),this.menu.attr("aria-activedescendant",e)},_setOption:function(t,e){if("icons"===t){var i=this.button.find("span.ui-icon");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,e.button)}this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"width"===t&&this._resizeButton()},_setOptionDisabled:function(t){this._super(t),this.menuInstance.option("disabled",t),this.button.attr("aria-disabled",t),this._toggleClass(this.button,null,"ui-state-disabled",t),this.element.prop("disabled",t),t?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e},_toggleAttr:function(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var t=this.options.width;return t===!1?(this.button.css("width",""),void 0):(null===t&&(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t),void 0)},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){var t=this._super();return t.disabled=this.element.prop("disabled"),t},_parseOptions:function(e){var i=this,s=[];e.each(function(e,n){s.push(i._parseOption(t(n),e))}),this.items=s},_parseOption:function(t,e){var i=t.parent("optgroup");return{element:t,index:e,value:t.val(),label:t.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||t.prop("disabled")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element)}}]),t.widget("ui.slider",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,s=this.options,n=this.element.find(".ui-slider-handle"),o="<span tabindex='0'></span>",a=[];for(i=s.values&&s.values.length||1,n.length>i&&(n.slice(i).remove(),n=n.slice(0,i)),e=n.length;i>e;e++)a.push(o);this.handles=n.add(t(a.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data("ui-slider-handle-index",e).attr("tabIndex",0)})},_createRange:function(){var e=this.options;e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=t("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),("min"===e.range||"max"===e.range)&&this._addClass(this.range,"ui-slider-range-"+e.range)):(this.range&&this.range.remove(),this.range=null)
},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(e){var i,s,n,o,a,r,l,h,c=this,u=this.options;return u.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(s-c.values(e));(n>i||n===i&&(e===c._lastChangedValue||c.values(e)===u.min))&&(n=i,o=t(this),a=e)}),r=this._start(e,a),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=a,this._addClass(o,null,"ui-state-active"),o.trigger("focus"),l=o.offset(),h=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=h?{left:0,top:0}:{left:e.pageX-l.left-o.width()/2,top:e.pageY-l.top-o.height()/2-(parseInt(o.css("borderTopWidth"),10)||0)-(parseInt(o.css("borderBottomWidth"),10)||0)+(parseInt(o.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,a,s),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,s,n,o;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),s=i/e,s>1&&(s=1),0>s&&(s=0),"vertical"===this.orientation&&(s=1-s),n=this._valueMax()-this._valueMin(),o=this._valueMin()+s*n,this._trimAlignValue(o)},_uiHash:function(t,e,i){var s={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(s.value=void 0!==e?e:this.values(t),s.values=i||this.values()),s},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(t,e){return this._trigger("start",t,this._uiHash(e))},_slide:function(t,e,i){var s,n,o=this.value(),a=this.values();this._hasMultipleValues()&&(n=this.values(e?0:1),o=this.values(e),2===this.options.values.length&&this.options.range===!0&&(i=0===e?Math.min(n,i):Math.max(n,i)),a[e]=i),i!==o&&(s=this._trigger("slide",t,this._uiHash(e,i,a)),s!==!1&&(this._hasMultipleValues()?this.values(e,i):this.value(i)))},_stop:function(t,e){this._trigger("stop",t,this._uiHash(e))},_change:function(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger("change",t,this._uiHash(e)))},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),this._change(null,0),void 0):this._value()},values:function(e,i){var s,n,o;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),this._change(null,e),void 0;if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this._hasMultipleValues()?this._values(e):this.value();for(s=this.options.values,n=arguments[0],o=0;s.length>o;o+=1)s[o]=this._trimAlignValue(n[o]),this._change(null,o);this._refreshValue()},_setOption:function(e,i){var s,n=0;switch("range"===e&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(n=this.options.values.length),this._super(e,i),e){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),s=n-1;s>=0;s--)this._change(null,s);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(t){this._super(t),this._toggleClass(null,"ui-state-disabled",!!t)},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this._hasMultipleValues()){for(i=this.options.values.slice(),s=0;i.length>s;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)>=e&&(s+=i>0?e:-e),parseFloat(s.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step,s=Math.round((t-e)/i)*i;t=s+e,t>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(t){"vertical"===t&&this.range.css({width:"",left:""}),"horizontal"===t&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var e,i,s,n,o,a=this.options.range,r=this.options,l=this,h=this._animateOff?!1:r.animate,c={};this._hasMultipleValues()?this.handles.each(function(s){i=100*((l.values(s)-l._valueMin())/(l._valueMax()-l._valueMin())),c["horizontal"===l.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[h?"animate":"css"](c,r.animate),l.options.range===!0&&("horizontal"===l.orientation?(0===s&&l.range.stop(1,1)[h?"animate":"css"]({left:i+"%"},r.animate),1===s&&l.range[h?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:r.animate})):(0===s&&l.range.stop(1,1)[h?"animate":"css"]({bottom:i+"%"},r.animate),1===s&&l.range[h?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:r.animate}))),e=i}):(s=this.value(),n=this._valueMin(),o=this._valueMax(),i=o!==n?100*((s-n)/(o-n)):0,c["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[h?"animate":"css"](c,r.animate),"min"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:i+"%"},r.animate),"max"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:100-i+"%"},r.animate),"min"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:i+"%"},r.animate),"max"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:100-i+"%"},r.animate))},_handleEvents:{keydown:function(e){var i,s,n,o,a=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(t(e.target),null,"ui-state-active"),i=this._start(e,a),i===!1))return}switch(o=this.options.step,s=n=this._hasMultipleValues()?this.values(a):this.value(),e.keyCode){case t.ui.keyCode.HOME:n=this._valueMin();break;case t.ui.keyCode.END:n=this._valueMax();break;case t.ui.keyCode.PAGE_UP:n=this._trimAlignValue(s+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:n=this._trimAlignValue(s-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(s===this._valueMax())return;n=this._trimAlignValue(s+o);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(s===this._valueMin())return;n=this._trimAlignValue(s-o)}this._slide(e,a,n)},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),this._removeClass(t(e.target),null,"ui-state-active"))}}}),t.widget("ui.spinner",{version:"1.12.1",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var e=this._super(),i=this.element;return t.each(["min","max","step"],function(t,s){var n=i.attr(s);null!=n&&n.length&&(e[s]=n)}),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger("change",t),void 0)},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},"mousedown .ui-spinner-button":function(e){function i(){var e=this.element[0]===t.ui.safeActiveElement(this.document[0]);e||(this.element.trigger("focus"),this.previous=s,this._delay(function(){this.previous=s}))}var s;s=this.element[0]===t.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(e){return t(e.currentTarget).hasClass("ui-state-active")?this._start(e)===!1?!1:(this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e),void 0):void 0},"mouseleave .ui-spinner-button":"_stop"},_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&this.uiSpinner.height()>0&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(e){var i=this.options,s=t.ui.keyCode;switch(e.keyCode){case s.UP:return this._repeat(null,1,e),!0;case s.DOWN:return this._repeat(null,-1,e),!0;case s.PAGE_UP:return this._repeat(null,i.page,e),!0;case s.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_start:function(t){return this.spinning||this._trigger("start",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger("spin",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,s=this.options;return e=null!==s.min?s.min:0,i=t-e,i=Math.round(i/s.step)*s.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==s.max&&t>s.max?s.max:null!==s.min&&s.min>t?s.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){var i,s,n;return"culture"===t||"numberFormat"===t?(i=this._parse(this.element.val()),this.options[t]=e,this.element.val(this._format(i)),void 0):(("max"===t||"min"===t||"step"===t)&&"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(s=this.buttons.first().find(".ui-icon"),this._removeClass(s,null,this.options.icons.up),this._addClass(s,null,e.up),n=this.buttons.last().find(".ui-icon"),this._removeClass(n,null,this.options.icons.down),this._addClass(n,null,e.down)),this._super(t,e),void 0)},_setOptionDisabled:function(t){this._super(t),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!t),this.element.prop("disabled",!!t),this.buttons.button(t?"disable":"enable")},_setOptions:r(function(t){this._super(t)}),_parse:function(t){return"string"==typeof t&&""!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null===t?!1:t===this._adjustValue(t)},_value:function(t,e){var i;""!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:r(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:r(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:r(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:r(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?(r(this._value).call(this,t),void 0):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),t.uiBackCompat!==!1&&t.widget("ui.spinner",t.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return"<span>"},_buttonHtml:function(){return"<a></a><a></a>"}}),t.ui.spinner,t.widget("ui.tabs",{version:"1.12.1",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var t=/#.*$/;return function(e){var i,s;i=e.href.replace(t,""),s=location.href.replace(t,"");try{i=decodeURIComponent(i)}catch(n){}try{s=decodeURIComponent(s)}catch(n){}return e.hash.length>1&&i===s}}(),_create:function(){var e=this,i=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),function(t){return e.tabs.index(t)}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var e=this.options.active,i=this.options.collapsible,s=location.hash.substring(1);return null===e&&(s&&this.tabs.each(function(i,n){return t(n).attr("aria-controls")===s?(e=i,!1):void 0}),null===e&&(e=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===e||-1===e)&&(e=this.tabs.length?0:!1)),e!==!1&&(e=this.tabs.index(this.tabs.eq(e)),-1===e&&(e=i?!1:0)),!i&&e===!1&&this.anchors.length&&(e=0),e},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(e){var i=t(t.ui.safeActiveElement(this.document[0])).closest("li"),s=this.tabs.index(i),n=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:s++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:n=!1,s--;break;case t.ui.keyCode.END:s=this.anchors.length-1;break;case t.ui.keyCode.HOME:s=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),this._activate(s),void 0;case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),this._activate(s===this.options.active?!1:s),void 0;default:return}e.preventDefault(),clearTimeout(this.activating),s=this._focusNextTab(s,n),e.ctrlKey||e.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(s).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",s)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.trigger("focus"))},_handlePageNav:function(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(e,i){function s(){return e>n&&(e=0),0>e&&(e=n),e}for(var n=this.tabs.length-1;-1!==t.inArray(s(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).trigger("focus"),t},_setOption:function(t,e){return"active"===t?(this._activate(e),void 0):(this._super(t,e),"collapsible"===t&&(this._toggleClass("ui-tabs-collapsible",null,e),e||this.options.active!==!1||this._activate(0)),"event"===t&&this._setupEvents(e),"heightStyle"===t&&this._setupHeightStyle(e),void 0)},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this,i=this.tabs,s=this.anchors,n=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",function(e){t(this).is(".ui-state-disabled")&&e.preventDefault()}).on("focus"+this.eventNamespace,".ui-tabs-anchor",function(){t(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map(function(){return t("a",this)[0]}).attr({role:"presentation",tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=t(),this.anchors.each(function(i,s){var n,o,a,r=t(s).uniqueId().attr("id"),l=t(s).closest("li"),h=l.attr("aria-controls");e._isLocal(s)?(n=s.hash,a=n.substring(1),o=e.element.find(e._sanitizeSelector(n))):(a=l.attr("aria-controls")||t({}).uniqueId()[0].id,n="#"+a,o=e.element.find(n),o.length||(o=e._createPanel(a),o.insertAfter(e.panels[i-1]||e.tablist)),o.attr("aria-live","polite")),o.length&&(e.panels=e.panels.add(o)),h&&l.data("ui-tabs-aria-controls",h),l.attr({"aria-controls":a,"aria-labelledby":r}),o.attr("aria-labelledby",r)}),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),i&&(this._off(i.not(this.tabs)),this._off(s.not(this.anchors)),this._off(n.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0)},_createPanel:function(e){return t("<div>").attr("id",e).data("ui-tabs-destroy",!0)},_setOptionDisabled:function(e){var i,s,n;for(t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1),n=0;s=this.tabs[n];n++)i=t(s),e===!0||-1!==t.inArray(n,e)?(i.attr("aria-disabled","true"),this._addClass(i,null,"ui-state-disabled")):(i.removeAttr("aria-disabled"),this._removeClass(i,null,"ui-state-disabled"));this.options.disabled=e,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,e===!0)},_setupEvents:function(e){var i={};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,s=this.element.parent();"fill"===e?(i=s.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var e=t(this),s=e.css("position");"absolute"!==s&&"fixed"!==s&&(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height("").height())}).height(i))},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget),o=n.closest("li"),a=o[0]===s[0],r=a&&i.collapsible,l=r?t():this._getPanelForTab(o),h=s.length?this._getPanelForTab(s):t(),c={oldTab:s,oldPanel:h,newTab:r?t():o,newPanel:l};e.preventDefault(),o.hasClass("ui-state-disabled")||o.hasClass("ui-tabs-loading")||this.running||a&&!i.collapsible||this._trigger("beforeActivate",e,c)===!1||(i.active=r?!1:this.tabs.index(o),this.active=a?t():o,this.xhr&&this.xhr.abort(),h.length||l.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),l.length&&this.load(this.tabs.index(o),e),this._toggle(e,c))},_toggle:function(e,i){function s(){o.running=!1,o._trigger("activate",e,i)}function n(){o._addClass(i.newTab.closest("li"),"ui-tabs-active","ui-state-active"),a.length&&o.options.show?o._show(a,o.options.show,s):(a.show(),s())}var o=this,a=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){o._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),n()}):(this._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),r.hide(),n()),r.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),a.length&&r.length?i.oldTab.attr("tabIndex",-1):a.length&&this.tabs.filter(function(){return 0===t(this).attr("tabIndex")}).attr("tabIndex",-1),a.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(e){var i,s=this._findActive(e);s[0]!==this.active[0]&&(s.length||(s=this.active),i=s.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(e){return"string"==typeof e&&(e=this.anchors.index(this.anchors.filter("[href$='"+t.ui.escapeSelector(e)+"']"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each(function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")}),this.tabs.each(function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(e){var i=this.options.disabled;i!==!1&&(void 0===e?i=!1:(e=this._getIndex(e),i=t.isArray(i)?t.map(i,function(t){return t!==e?t:null}):t.map(this.tabs,function(t,i){return i!==e?i:null})),this._setOptionDisabled(i))},disable:function(e){var i=this.options.disabled;if(i!==!0){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=t.isArray(i)?t.merge([e],i).sort():[e]}this._setOptionDisabled(i)}},load:function(e,i){e=this._getIndex(e);var s=this,n=this.tabs.eq(e),o=n.find(".ui-tabs-anchor"),a=this._getPanelForTab(n),r={tab:n,panel:a},l=function(t,e){"abort"===e&&s.panels.stop(!1,!0),s._removeClass(n,"ui-tabs-loading"),a.removeAttr("aria-busy"),t===s.xhr&&delete s.xhr};this._isLocal(o[0])||(this.xhr=t.ajax(this._ajaxSettings(o,i,r)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(n,"ui-tabs-loading"),a.attr("aria-busy","true"),this.xhr.done(function(t,e,n){setTimeout(function(){a.html(t),s._trigger("load",i,r),l(n,e)},1)}).fail(function(t,e){setTimeout(function(){l(t,e)},1)})))},_ajaxSettings:function(e,i,s){var n=this;return{url:e.attr("href").replace(/#.*$/,""),beforeSend:function(e,o){return n._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:o},s))}}},_getPanelForTab:function(e){var i=t(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),t.uiBackCompat!==!1&&t.widget("ui.tabs",t.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab")}}),t.ui.tabs,t.widget("ui.tooltip",{version:"1.12.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var e=t(this).attr("title")||"";return t("<a>").text(e).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(e,i){var s=(e.attr("aria-describedby")||"").split(/\s+/);s.push(i),e.data("ui-tooltip-id",i).attr("aria-describedby",t.trim(s.join(" ")))},_removeDescribedBy:function(e){var i=e.data("ui-tooltip-id"),s=(e.attr("aria-describedby")||"").split(/\s+/),n=t.inArray(i,s);-1!==n&&s.splice(n,1),e.removeData("ui-tooltip-id"),s=t.trim(s.join(" ")),s?e.attr("aria-describedby",s):e.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=t("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=t([])},_setOption:function(e,i){var s=this;this._super(e,i),"content"===e&&t.each(this.tooltips,function(t,e){s._updateContent(e.element)})},_setOptionDisabled:function(t){this[t?"_disable":"_enable"]()},_disable:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur");n.target=n.currentTarget=s.element[0],e.close(n,!0)}),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function(){var e=t(this);return e.is("[title]")?e.data("ui-tooltip-title",e.attr("title")).removeAttr("title"):void 0}))},_enable:function(){this.disabledTitles.each(function(){var e=t(this);e.data("ui-tooltip-title")&&e.attr("title",e.data("ui-tooltip-title"))}),this.disabledTitles=t([])},open:function(e){var i=this,s=t(e?e.target:this.element).closest(this.options.items);s.length&&!s.data("ui-tooltip-id")&&(s.attr("title")&&s.data("ui-tooltip-title",s.attr("title")),s.data("ui-tooltip-open",!0),e&&"mouseover"===e.type&&s.parents().each(function(){var e,s=t(this);s.data("ui-tooltip-open")&&(e=t.Event("blur"),e.target=e.currentTarget=this,i.close(e,!0)),s.attr("title")&&(s.uniqueId(),i.parents[this.id]={element:this,title:s.attr("title")},s.attr("title",""))}),this._registerCloseHandlers(e,s),this._updateContent(s,e))},_updateContent:function(t,e){var i,s=this.options.content,n=this,o=e?e.type:null;return"string"==typeof s||s.nodeType||s.jquery?this._open(e,t,s):(i=s.call(t[0],function(i){n._delay(function(){t.data("ui-tooltip-open")&&(e&&(e.type=o),this._open(e,t,i))})}),i&&this._open(e,t,i),void 0)},_open:function(e,i,s){function n(t){h.of=t,a.is(":hidden")||a.position(h)}var o,a,r,l,h=t.extend({},this.options.position);if(s){if(o=this._find(i))return o.tooltip.find(".ui-tooltip-content").html(s),void 0;i.is("[title]")&&(e&&"mouseover"===e.type?i.attr("title",""):i.removeAttr("title")),o=this._tooltip(i),a=o.tooltip,this._addDescribedBy(i,a.attr("id")),a.find(".ui-tooltip-content").html(s),this.liveRegion.children().hide(),l=t("<div>").html(a.find(".ui-tooltip-content").html()),l.removeAttr("name").find("[name]").removeAttr("name"),l.removeAttr("id").find("[id]").removeAttr("id"),l.appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:n}),n(e)):a.position(t.extend({of:i},this.options.position)),a.hide(),this._show(a,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(r=this.delayedShow=setInterval(function(){a.is(":visible")&&(n(h.of),clearInterval(r))},t.fx.interval)),this._trigger("open",e,{tooltip:a})}},_registerCloseHandlers:function(e,i){var s={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var s=t.Event(e);s.currentTarget=i[0],this.close(s,!0)}}};i[0]!==this.element[0]&&(s.remove=function(){this._removeTooltip(this._find(i).tooltip)}),e&&"mouseover"!==e.type||(s.mouseleave="close"),e&&"focusin"!==e.type||(s.focusout="close"),this._on(!0,i,s)},close:function(e){var i,s=this,n=t(e?e.currentTarget:this.element),o=this._find(n);return o?(i=o.tooltip,o.closing||(clearInterval(this.delayedShow),n.data("ui-tooltip-title")&&!n.attr("title")&&n.attr("title",n.data("ui-tooltip-title")),this._removeDescribedBy(n),o.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){s._removeTooltip(t(this))}),n.removeData("ui-tooltip-open"),this._off(n,"mouseleave focusout keyup"),n[0]!==this.element[0]&&this._off(n,"remove"),this._off(this.document,"mousemove"),e&&"mouseleave"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr("title",i.title),delete s.parents[e]
}),o.closing=!0,this._trigger("close",e,{tooltip:i}),o.hiding||(o.closing=!1)),void 0):(n.removeData("ui-tooltip-open"),void 0)},_tooltip:function(e){var i=t("<div>").attr("role","tooltip"),s=t("<div>").appendTo(i),n=i.uniqueId().attr("id");return this._addClass(s,"ui-tooltip-content"),this._addClass(i,"ui-tooltip","ui-widget ui-widget-content"),i.appendTo(this._appendTo(e)),this.tooltips[n]={element:e,tooltip:i}},_find:function(t){var e=t.data("ui-tooltip-id");return e?this.tooltips[e]:null},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr("id")]},_appendTo:function(t){var e=t.closest(".ui-front, dialog");return e.length||(e=this.document[0].body),e},_destroy:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur"),o=s.element;n.target=n.currentTarget=o[0],e.close(n,!0),t("#"+i).remove(),o.data("ui-tooltip-title")&&(o.attr("title")||o.attr("title",o.data("ui-tooltip-title")),o.removeData("ui-tooltip-title"))}),this.liveRegion.remove()}}),t.uiBackCompat!==!1&&t.widget("ui.tooltip",t.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var t=this._superApply(arguments);return this.options.tooltipClass&&t.tooltip.addClass(this.options.tooltipClass),t}}),t.ui.tooltip;var f="ui-effects-",g="ui-effects-style",m="ui-effects-animated",_=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t)}function s(i){var s=h(),n=s._rgba=[];return i=i.toLowerCase(),f(l,function(t,o){var a,r=o.re.exec(i),l=r&&o.parse(r),h=o.space||"rgba";return l?(a=s[h](l),s[c[h].cache]=a[c[h].cache],n=s._rgba=a._rgba,!1):e}),n.length?("0,0,0,0"===n.join()&&t.extend(n,o.transparent),s):o[i]}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var o,a="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,l=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],h=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=h.support={},p=t("<p>")[0],f=t.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),h.fn=t.extend(h.prototype,{parse:function(n,a,r,l){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(a),a=e);var u=this,d=t.type(n),p=this._rgba=[];return a!==e&&(n=[n,a,r,l],d="array"),"string"===d?this.parse(s(n)||o._default):"array"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):"object"===d?(n instanceof h?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var o=s.cache;f(s.props,function(t,e){if(!u[o]&&s.to){if("alpha"===t||null==n[t])return;u[o]=s.to(u._rgba)}u[o][e.idx]=i(n[t],e,!0)}),u[o]&&0>t.inArray(null,u[o].slice(0,3))&&(u[o][3]=1,s.from&&(u._rgba=s.from(u[o])))}),this):e},is:function(t){var i=h(t),s=!0,n=this;return f(c,function(t,o){var a,r=i[o.cache];return r&&(a=n[o.cache]||o.to&&o.to(n._rgba)||[],f(o.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===a[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var s=h(t),n=s._space(),o=c[n],a=0===this.alpha()?h("transparent"):this,r=a[o.cache]||o.to(a._rgba),l=r.slice();return s=s[o.cache],f(o.props,function(t,n){var o=n.idx,a=r[o],h=s[o],c=u[n.type]||{};null!==h&&(null===a?l[o]=h:(c.mod&&(h-a>c.mod/2?a+=c.mod:a-h>c.mod/2&&(a-=c.mod)),l[o]=i((h-a)*e+a,n)))}),this[n](l)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=h(e)._rgba;return h(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,o=t[2]/255,a=t[3],r=Math.max(s,n,o),l=Math.min(s,n,o),h=r-l,c=r+l,u=.5*c;return e=l===r?0:s===r?60*(n-o)/h+360:n===r?60*(o-s)/h+120:60*(s-n)/h+240,i=0===h?0:.5>=u?h/c:h/(2-c),[Math.round(e)%360,i,u,null==a?1:a]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],o=t[3],a=.5>=s?s*(1+i):s+i-s*i,r=2*s-a;return[Math.round(255*n(r,a,e+1/3)),Math.round(255*n(r,a,e)),Math.round(255*n(r,a,e-1/3)),o]},f(c,function(s,n){var o=n.props,a=n.cache,l=n.to,c=n.from;h.fn[s]=function(s){if(l&&!this[a]&&(this[a]=l(this._rgba)),s===e)return this[a].slice();var n,r=t.type(s),u="array"===r||"object"===r?s:arguments,d=this[a].slice();return f(o,function(t,e){var s=u["object"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=h(c(d)),n[a]=d,n):h(d)},f(o,function(e,i){h.fn[e]||(h.fn[e]=function(n){var o,a=t.type(n),l="alpha"===e?this._hsla?"hsla":"rgba":s,h=this[l](),c=h[i.idx];return"undefined"===a?c:("function"===a&&(n=n.call(this,c),a=t.type(n)),null==n&&i.empty?this:("string"===a&&(o=r.exec(n),o&&(n=c+parseFloat(o[2])*("+"===o[1]?1:-1))),h[i.idx]=n,this[l](h)))})})}),h.hook=function(e){var i=e.split(" ");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var o,a,r="";if("transparent"!==n&&("string"!==t.type(n)||(o=s(n)))){if(n=h(o||n),!d.rgba&&1!==n._rgba[3]){for(a="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&&a&&a.style;)try{r=t.css(a,"backgroundColor"),a=a.parentNode}catch(l){}n=n.blend(r&&"transparent"!==r?r:"_default")}n=n.toRgbaString()}try{e.style[i]=n}catch(l){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=h(e.elem,i),e.end=h(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},h.hook(a),t.cssHooks.borderColor={expand:function(t){var e={};return f(["Top","Right","Bottom","Left"],function(i,s){e["border"+s+"Color"]=t}),e}},o=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(_),function(){function e(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,o={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;)i=n[s],"string"==typeof n[i]&&(o[t.camelCase(i)]=n[i]);else for(i in n)"string"==typeof n[i]&&(o[i]=n[i]);return o}function i(e,i){var s,o,a={};for(s in i)o=i[s],e[s]!==o&&(n[s]||(t.fx.step[s]||!isNaN(parseFloat(o)))&&(a[s]=o));return a}var s=["add","remove","toggle"],n={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(_.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(n,o,a,r){var l=t.speed(o,a,r);return this.queue(function(){var o,a=t(this),r=a.attr("class")||"",h=l.children?a.find("*").addBack():a;h=h.map(function(){var i=t(this);return{el:i,start:e(this)}}),o=function(){t.each(s,function(t,e){n[e]&&a[e+"Class"](n[e])})},o(),h=h.map(function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this}),a.attr("class",r),h=h.map(function(){var e=this,i=t.Deferred(),s=t.extend({},l,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,h.get()).done(function(){o(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),l.complete.call(a[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,o){return s?t.effects.animateClass.call(this,{add:i},s,n,o):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,o){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,o):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(e){return function(i,s,n,o,a){return"boolean"==typeof s||void 0===s?n?t.effects.animateClass.call(this,s?{add:i}:{remove:i},n,o,a):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},s,n,o)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,o){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,o)}})}(),function(){function e(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function i(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=typeof e||e.effect?!1:!0:!0}function s(t,e){var i=e.outerWidth(),s=e.outerHeight(),n=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,o=n.exec(t)||["",0,i,s,0];return{top:parseFloat(o[1])||0,right:"auto"===o[2]?i:parseFloat(o[2]),bottom:"auto"===o[3]?s:parseFloat(o[3]),left:parseFloat(o[4])||0}}t.expr&&t.expr.filters&&t.expr.filters.animated&&(t.expr.filters.animated=function(e){return function(i){return!!t(i).data(m)||e(i)}}(t.expr.filters.animated)),t.uiBackCompat!==!1&&t.extend(t.effects,{save:function(t,e){for(var i=0,s=e.length;s>i;i++)null!==e[i]&&t.data(f+e[i],t[0].style[e[i]])},restore:function(t,e){for(var i,s=0,n=e.length;n>s;s++)null!==e[s]&&(i=t.data(f+e[s]),t.css(e[s],i))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},s=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},o=document.activeElement;try{o.id}catch(a){o=document.body}return e.wrap(s),(e[0]===o||t.contains(e[0],o))&&t(o).trigger("focus"),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).trigger("focus")),e}}),t.extend(t.effects,{version:"1.12.1",define:function(e,i,s){return s||(s=i,i="effect"),t.effects.effect[e]=s,t.effects.effect[e].mode=i,s},scaledDimensions:function(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var s="horizontal"!==i?(e||100)/100:1,n="vertical"!==i?(e||100)/100:1;return{height:t.height()*n,width:t.width()*s,outerHeight:t.outerHeight()*n,outerWidth:t.outerWidth()*s}},clipToBox:function(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top}},unshift:function(t,e,i){var s=t.queue();e>1&&s.splice.apply(s,[1,0].concat(s.splice(e,i))),t.dequeue()},saveStyle:function(t){t.data(g,t[0].style.cssText)},restoreStyle:function(t){t[0].style.cssText=t.data(g)||"",t.removeData(g)},mode:function(t,e){var i=t.is(":hidden");return"toggle"===e&&(e=i?"show":"hide"),(i?"hide"===e:"show"===e)&&(e="none"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createPlaceholder:function(e){var i,s=e.css("position"),n=e.position();return e.css({marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()),/^(static|relative)/.test(s)&&(s="absolute",i=t("<"+e[0].nodeName+">").insertAfter(e).css({display:/^(inline|ruby)/.test(e.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight"),"float":e.css("float")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass("ui-effects-placeholder"),e.data(f+"placeholder",i)),e.css({position:s,left:n.left,top:n.top}),i},removePlaceholder:function(t){var e=f+"placeholder",i=t.data(e);i&&(i.remove(),t.removeData(e))},cleanUp:function(e){t.effects.restoreStyle(e),t.effects.removePlaceholder(e)},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var o=e.cssUnit(i);o[0]>0&&(n[i]=o[0]*s+o[1])}),n}}),t.fn.extend({effect:function(){function i(e){function i(){r.removeData(m),t.effects.cleanUp(r),"hide"===s.mode&&r.hide(),a()}function a(){t.isFunction(l)&&l.call(r[0]),t.isFunction(e)&&e()}var r=t(this);s.mode=c.shift(),t.uiBackCompat===!1||o?"none"===s.mode?(r[h](),a()):n.call(r[0],s,i):(r.is(":hidden")?"hide"===h:"show"===h)?(r[h](),a()):n.call(r[0],s,a)}var s=e.apply(this,arguments),n=t.effects.effect[s.effect],o=n.mode,a=s.queue,r=a||"fx",l=s.complete,h=s.mode,c=[],u=function(e){var i=t(this),s=t.effects.mode(i,h)||o;i.data(m,!0),c.push(s),o&&("show"===s||s===o&&"hide"===s)&&i.show(),o&&"none"===s||t.effects.saveStyle(i),t.isFunction(e)&&e()};return t.fx.off||!n?h?this[h](s.duration,l):this.each(function(){l&&l.call(this)}):a===!1?this.each(u).each(i):this.queue(r,u).queue(r,i)},show:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="show",this.effect.call(this,n)}}(t.fn.show),hide:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="hide",this.effect.call(this,n)}}(t.fn.hide),toggle:function(t){return function(s){if(i(s)||"boolean"==typeof s)return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="toggle",this.effect.call(this,n)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e])}),s},cssClip:function(t){return t?this.css("clip","rect("+t.top+"px "+t.right+"px "+t.bottom+"px "+t.left+"px)"):s(this.css("clip"),this)},transfer:function(e,i){var s=t(this),n=t(e.to),o="fixed"===n.css("position"),a=t("body"),r=o?a.scrollTop():0,l=o?a.scrollLeft():0,h=n.offset(),c={top:h.top-r,left:h.left-l,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(e.className).css({top:u.top-r,left:u.left-l,height:s.innerHeight(),width:s.innerWidth(),position:o?"fixed":"absolute"}).animate(c,e.duration,e.easing,function(){d.remove(),t.isFunction(i)&&i()})}}),t.fx.step.clip=function(e){e.clipInit||(e.start=t(e.elem).cssClip(),"string"==typeof e.end&&(e.end=s(e.end,e.elem)),e.clipInit=!0),t(e.elem).cssClip({top:e.pos*(e.end.top-e.start.top)+e.start.top,right:e.pos*(e.end.right-e.start.right)+e.start.right,bottom:e.pos*(e.end.bottom-e.start.bottom)+e.start.bottom,left:e.pos*(e.end.left-e.start.left)+e.start.left})}}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}();var v=t.effects;t.effects.define("blind","hide",function(e,i){var s={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},n=t(this),o=e.direction||"up",a=n.cssClip(),r={clip:t.extend({},a)},l=t.effects.createPlaceholder(n);r.clip[s[o][0]]=r.clip[s[o][1]],"show"===e.mode&&(n.cssClip(r.clip),l&&l.css(t.effects.clipToBox(r)),r.clip=a),l&&l.animate(t.effects.clipToBox(r),e.duration,e.easing),n.animate(r,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("bounce",function(e,i){var s,n,o,a=t(this),r=e.mode,l="hide"===r,h="show"===r,c=e.direction||"up",u=e.distance,d=e.times||5,p=2*d+(h||l?1:0),f=e.duration/p,g=e.easing,m="up"===c||"down"===c?"top":"left",_="up"===c||"left"===c,v=0,b=a.queue().length;for(t.effects.createPlaceholder(a),o=a.css(m),u||(u=a["top"===m?"outerHeight":"outerWidth"]()/3),h&&(n={opacity:1},n[m]=o,a.css("opacity",0).css(m,_?2*-u:2*u).animate(n,f,g)),l&&(u/=Math.pow(2,d-1)),n={},n[m]=o;d>v;v++)s={},s[m]=(_?"-=":"+=")+u,a.animate(s,f,g).animate(n,f,g),u=l?2*u:u/2;l&&(s={opacity:0},s[m]=(_?"-=":"+=")+u,a.animate(s,f,g)),a.queue(i),t.effects.unshift(a,b,p+1)}),t.effects.define("clip","hide",function(e,i){var s,n={},o=t(this),a=e.direction||"vertical",r="both"===a,l=r||"horizontal"===a,h=r||"vertical"===a;s=o.cssClip(),n.clip={top:h?(s.bottom-s.top)/2:s.top,right:l?(s.right-s.left)/2:s.right,bottom:h?(s.bottom-s.top)/2:s.bottom,left:l?(s.right-s.left)/2:s.left},t.effects.createPlaceholder(o),"show"===e.mode&&(o.cssClip(n.clip),n.clip=s),o.animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("drop","hide",function(e,i){var s,n=t(this),o=e.mode,a="show"===o,r=e.direction||"left",l="up"===r||"down"===r?"top":"left",h="up"===r||"left"===r?"-=":"+=",c="+="===h?"-=":"+=",u={opacity:0};t.effects.createPlaceholder(n),s=e.distance||n["top"===l?"outerHeight":"outerWidth"](!0)/2,u[l]=h+s,a&&(n.css(u),u[l]=c+s,u.opacity=1),n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("explode","hide",function(e,i){function s(){b.push(this),b.length===u*d&&n()}function n(){p.css({visibility:"visible"}),t(b).remove(),i()}var o,a,r,l,h,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,p=t(this),f=e.mode,g="show"===f,m=p.show().css("visibility","hidden").offset(),_=Math.ceil(p.outerWidth()/d),v=Math.ceil(p.outerHeight()/u),b=[];for(o=0;u>o;o++)for(l=m.top+o*v,c=o-(u-1)/2,a=0;d>a;a++)r=m.left+a*_,h=a-(d-1)/2,p.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-a*_,top:-o*v}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:_,height:v,left:r+(g?h*_:0),top:l+(g?c*v:0),opacity:g?0:1}).animate({left:r+(g?0:h*_),top:l+(g?0:c*v),opacity:g?1:0},e.duration||500,e.easing,s)}),t.effects.define("fade","toggle",function(e,i){var s="show"===e.mode;t(this).css("opacity",s?0:1).animate({opacity:s?1:0},{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("fold","hide",function(e,i){var s=t(this),n=e.mode,o="show"===n,a="hide"===n,r=e.size||15,l=/([0-9]+)%/.exec(r),h=!!e.horizFirst,c=h?["right","bottom"]:["bottom","right"],u=e.duration/2,d=t.effects.createPlaceholder(s),p=s.cssClip(),f={clip:t.extend({},p)},g={clip:t.extend({},p)},m=[p[c[0]],p[c[1]]],_=s.queue().length;l&&(r=parseInt(l[1],10)/100*m[a?0:1]),f.clip[c[0]]=r,g.clip[c[0]]=r,g.clip[c[1]]=0,o&&(s.cssClip(g.clip),d&&d.css(t.effects.clipToBox(g)),g.clip=p),s.queue(function(i){d&&d.animate(t.effects.clipToBox(f),u,e.easing).animate(t.effects.clipToBox(g),u,e.easing),i()}).animate(f,u,e.easing).animate(g,u,e.easing).queue(i),t.effects.unshift(s,_,4)}),t.effects.define("highlight","show",function(e,i){var s=t(this),n={backgroundColor:s.css("backgroundColor")};"hide"===e.mode&&(n.opacity=0),t.effects.saveStyle(s),s.css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("size",function(e,i){var s,n,o,a=t(this),r=["fontSize"],l=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],h=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],c=e.mode,u="effect"!==c,d=e.scale||"both",p=e.origin||["middle","center"],f=a.css("position"),g=a.position(),m=t.effects.scaledDimensions(a),_=e.from||m,v=e.to||t.effects.scaledDimensions(a,0);t.effects.createPlaceholder(a),"show"===c&&(o=_,_=v,v=o),n={from:{y:_.height/m.height,x:_.width/m.width},to:{y:v.height/m.height,x:v.width/m.width}},("box"===d||"both"===d)&&(n.from.y!==n.to.y&&(_=t.effects.setTransition(a,l,n.from.y,_),v=t.effects.setTransition(a,l,n.to.y,v)),n.from.x!==n.to.x&&(_=t.effects.setTransition(a,h,n.from.x,_),v=t.effects.setTransition(a,h,n.to.x,v))),("content"===d||"both"===d)&&n.from.y!==n.to.y&&(_=t.effects.setTransition(a,r,n.from.y,_),v=t.effects.setTransition(a,r,n.to.y,v)),p&&(s=t.effects.getBaseline(p,m),_.top=(m.outerHeight-_.outerHeight)*s.y+g.top,_.left=(m.outerWidth-_.outerWidth)*s.x+g.left,v.top=(m.outerHeight-v.outerHeight)*s.y+g.top,v.left=(m.outerWidth-v.outerWidth)*s.x+g.left),a.css(_),("content"===d||"both"===d)&&(l=l.concat(["marginTop","marginBottom"]).concat(r),h=h.concat(["marginLeft","marginRight"]),a.find("*[width]").each(function(){var i=t(this),s=t.effects.scaledDimensions(i),o={height:s.height*n.from.y,width:s.width*n.from.x,outerHeight:s.outerHeight*n.from.y,outerWidth:s.outerWidth*n.from.x},a={height:s.height*n.to.y,width:s.width*n.to.x,outerHeight:s.height*n.to.y,outerWidth:s.width*n.to.x};n.from.y!==n.to.y&&(o=t.effects.setTransition(i,l,n.from.y,o),a=t.effects.setTransition(i,l,n.to.y,a)),n.from.x!==n.to.x&&(o=t.effects.setTransition(i,h,n.from.x,o),a=t.effects.setTransition(i,h,n.to.x,a)),u&&t.effects.saveStyle(i),i.css(o),i.animate(a,e.duration,e.easing,function(){u&&t.effects.restoreStyle(i)})})),a.animate(v,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){var e=a.offset();0===v.opacity&&a.css("opacity",_.opacity),u||(a.css("position","static"===f?"relative":f).offset(e),t.effects.saveStyle(a)),i()}})}),t.effects.define("scale",function(e,i){var s=t(this),n=e.mode,o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"effect"!==n?0:100),a=t.extend(!0,{from:t.effects.scaledDimensions(s),to:t.effects.scaledDimensions(s,o,e.direction||"both"),origin:e.origin||["middle","center"]},e);e.fade&&(a.from.opacity=1,a.to.opacity=0),t.effects.effect.size.call(this,a,i)}),t.effects.define("puff","hide",function(e,i){var s=t.extend(!0,{},e,{fade:!0,percent:parseInt(e.percent,10)||150});t.effects.effect.scale.call(this,s,i)}),t.effects.define("pulsate","show",function(e,i){var s=t(this),n=e.mode,o="show"===n,a="hide"===n,r=o||a,l=2*(e.times||5)+(r?1:0),h=e.duration/l,c=0,u=1,d=s.queue().length;for((o||!s.is(":visible"))&&(s.css("opacity",0).show(),c=1);l>u;u++)s.animate({opacity:c},h,e.easing),c=1-c;s.animate({opacity:c},h,e.easing),s.queue(i),t.effects.unshift(s,d,l+1)}),t.effects.define("shake",function(e,i){var s=1,n=t(this),o=e.direction||"left",a=e.distance||20,r=e.times||3,l=2*r+1,h=Math.round(e.duration/l),c="up"===o||"down"===o?"top":"left",u="up"===o||"left"===o,d={},p={},f={},g=n.queue().length;for(t.effects.createPlaceholder(n),d[c]=(u?"-=":"+=")+a,p[c]=(u?"+=":"-=")+2*a,f[c]=(u?"-=":"+=")+2*a,n.animate(d,h,e.easing);r>s;s++)n.animate(p,h,e.easing).animate(f,h,e.easing);n.animate(p,h,e.easing).animate(d,h/2,e.easing).queue(i),t.effects.unshift(n,g,l+1)}),t.effects.define("slide","show",function(e,i){var s,n,o=t(this),a={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},r=e.mode,l=e.direction||"left",h="up"===l||"down"===l?"top":"left",c="up"===l||"left"===l,u=e.distance||o["top"===h?"outerHeight":"outerWidth"](!0),d={};t.effects.createPlaceholder(o),s=o.cssClip(),n=o.position()[h],d[h]=(c?-1:1)*u+n,d.clip=o.cssClip(),d.clip[a[l][1]]=d.clip[a[l][0]],"show"===r&&(o.cssClip(d.clip),o.css(h,d[h]),d.clip=s,d[h]=n),o.animate(d,{queue:!1,duration:e.duration,easing:e.easing,complete:i})});var v;t.uiBackCompat!==!1&&(v=t.effects.define("transfer",function(e,i){t(this).transfer(e,i)}))});;
var MsSc = MsSc || {};
MsSc.UniversalHeaderV3 = MsSc.UniversalHeaderV3 || {};
var jq2143 = jQuery;

$(function () {
    if (typeof SCBeacon !== "undefined") {
        SCBeacon.push(['ready', MsSc.UniversalHeaderV3.DropdownInit]);
    }
});
``

MsSc.UniversalHeaderV3.initUniversalHeaderV3Dropdowns = function ($headerElem) {

    if ($headerElem === undefined)
        return;

    var namespace = MsSc.UniversalHeaderV3;

    var $window = jq2143(window);
    var $dropdownToggles = $headerElem.find('.uh-navigation-dropdown');
    var $dropdownSubmenuToggles = $headerElem.find('.product-families .dropdown-toggle');
    var $dropdownChildSubMenuToggles = $headerElem.find('.uh-navigation-dropdown-submenu');
    var $allMsDropdownMenu = $headerElem.find('.all-ms-dropdown-menu');
    var $dropdownChildSubMenuTertiaryToggles = $headerElem.find('.uh-navigation-dropdown-submenu-tertiary');
    var $allMsHamburger = $headerElem.find('.dropdown-toggle.all-ms-hamburger');
    var $searchBtn = $headerElem.find('.search-a');
    var $secondaryLink = $headerElem.find('.uh-secondary');
    var $navHamburger = $headerElem.find('.nav-hamburger');
    var $searchFormText = $headerElem.find('.nav-search-text');
    var $notificationBtn = $headerElem.find('a.icon-notification-outline');
    var $loggedInBtn = $headerElem.find('.dropdown-toggle.signin-icon');
    var $signInBtn = $headerElem.find('.nav-header-login-section .signin-icon');
    var $dashboardBtn = $headerElem.find('.dashboard');
    var $emptySearch = $headerElem.find('.search-close');
    var $logo = $headerElem.find('.ms-logo a');
    var $submenus = $headerElem.find('.uh-child-submenu');
    var $submenuLinks = $headerElem.find('.uh-child-submenu a');
    var $siteNameMobile = $headerElem.find('.mobile-header a');
    var $dropdownMenuWidth = $headerElem.find('.categories-nav-items .uh-dropdown-menu').first().outerWidth();
    var $mobileNav = $headerElem.find(".mobile-header .dropdown-toggle");


    var $skipToMainContent = jq2143('#skip-link');

    var mobileBreakpoint = window.matchMedia('(max-width: 899px)');

    var tabifyNavMobile = function () {
        $skipToMainContent.attr('tabindex', 1);
        $allMsHamburger.attr('tabindex', 1);
        $searchBtn.attr('tabindex', 3);
        $logo.attr('tabindex', 4);
        $notificationBtn.attr('tabindex', 4);
        $loggedInBtn.attr('tabindex', 5);
        $signInBtn.attr('tabindex', 6);
        $siteNameMobile.attr('tabindex', 7);
        //$dropdownToggles.attr('tabindex', 8);
        $dashboardBtn.attr('tabindex', 9);
    };

    var tabifyNavDesktop = function () {
        $submenuLinks.attr('tabindex', -1);
        $skipToMainContent.attr('tabindex', 1);
        $logo.attr('tabindex', 1);
        $dropdownToggles.attr('tabindex', 2);
        $secondaryLink.attr('tabindex', 2);
        $dashboardBtn.attr('tabindex', 2);
        $allMsHamburger.attr('tabindex', 3);
        $searchBtn.attr('tabindex', 4);
        // $searchFormBtns.attr('tabindex', 4);
        $notificationBtn.attr('tabindex', 10);
        $loggedInBtn.attr('tabindex', 11);
        $signInBtn.attr('tabindex', 10);
    };

    var keepMenuOpen = function (e) {
        e.stopPropagation();
    };

    var toggleMenu = function (e) {
        e.stopPropagation();
        $headerElem.find('.mobile-header > a.dropdown-toggle').click();
        $navHamburger.toggleClass('active');
    };

    var openOrCloseSubmenu = function (e) {
        var $target = jq2143(e.currentTarget);
        var expanded = $target.attr('aria-expanded') === 'true'; //convert string to a bool

        if (!expanded)
            namespace.openSubmenu($target);
        else
            namespace.closeAllSubmenus();
    };

    var openOrCloseChildSubmenu = function (e) {
        var $target = jq2143(e.currentTarget);
        var $parent = $target.parent();

        if ($parent.hasClass('open')) {
            namespace.closeAllChildSubmenus();
        } else {
            namespace.openChildSubMenu($target);
        }
    };

    var openOrCloseTertiaryChildSubmenu = function (e) {
        var $target = jq2143(e.currentTarget);
        var $parent = $target.parent();
        if ($parent.hasClass('open')) {
            namespace.closeAlltertiarySubmenus();
            removeAllHeights();
            setTimeout(resizeSubNav, 1, $parent.closest('ul.uh-dropdown-menu'));
        }
        else {
            namespace.opentertiaryChildSubMenu($target);
        }
    };

    var initFullWidthDropdown = function () {
        $allMsDropdownMenu.width(window.innerWidth - 2.5);
    };

    var onResizeComplete = function () {
        initFullWidthDropdown();
    };

    var focusSearchField = function (e) {
        var $target = jq2143(e.currentTarget);
        var isSearchFieldToBeFocused = $target.attr('aria-expanded') === 'false';

        if (isSearchFieldToBeFocused) {
            setTimeout(function () {
                $headerElem.find('.search-dropdown-input').focus();
                $target.off('focus', closeAllMenus);
            }, 100);
        }
    };

    var isDropdownClosed = function ($elem) {
        return !$elem.parent().hasClass('open');
    };

    var tabifyDropdowns = function ($elem, tabIndex) {
        var isAllMsft = $elem.attr('class') === $allMsDropdownMenu.attr('class');
        var twoLevelsDown = $elem.children().children();
        var firstLevelLinks = twoLevelsDown.not('ul, div');
        var secondLevelLinks = jq2143(twoLevelsDown).children().children().not('ul, div');
        var allLinks = $elem.find('a');
        var linksToTabify;
        var isMoreBtn;

        function checkIfMoreBtn() {
            if ($elem.parent().hasClass('more-btn')) {
                isMoreBtn = true;
            } else {
                isMoreBtn = false;
            }
        }

        checkIfMoreBtn();

        if (isAllMsft) {
            linksToTabify = $elem.find('a');
        }
        else if (firstLevelLinks.is('a') && isMoreBtn || firstLevelLinks.is('a') && mobileBreakpoint.matches) {
            linksToTabify = allLinks;
        }
        else if (secondLevelLinks.is('a')) {
            linksToTabify = secondLevelLinks;
        }

        jq2143(linksToTabify).attr('tabindex', tabIndex);
        $elem.find('input').attr('tabindex', tabIndex);
        $elem.find('button').attr('tabindex', tabIndex);
    };

    var unTabifyDropdowns = function ($elem) {
        $elem.find('a').attr('tabindex', -1);
        $elem.find('input').attr('tabindex', -1);
        $elem.find('span').attr('tabindex', -1);
        $elem.find('button').attr('tabindex', -1);
    };

    var closeAllMenus = function (e) {
        $container = jq2143(e.currentTarget).closest('.navbar-header');
        var openCatDropdowns = $container.find("[aria-expanded='true']").not(this);
        var openAllMSDropdowns = $container.find(".open .all-ms-dropdown-menu");
        $navHamburger.removeClass('active');

        if (jq2143(e.currentTarget).hasClass('all-ms-hamburger')) {
            openAllMSDropdowns.attr('aria-expanded', false);
            openAllMSDropdowns.parent().removeClass('open');
        }
        else if (!jq2143(e.currentTarget).hasClass('all-ms-hamburger')) {
            jq2143(openCatDropdowns).not('.product-families li').attr('aria-expanded', false);
            jq2143(openCatDropdowns).parent().not('.all-ms-dropdown-menu').removeClass('open');
        }

        if (mobileBreakpoint.matches && $mobileNav.length > 0) {
            jq2143($mobileNav).attr('aria-expanded', false);
            jq2143($mobileNav).addClass('collapsed');
            jq2143('.navbar-collapse').attr('aria-expanded', false).removeClass('in');
        }

        jq2143('.uh-dropdown-menu').on('hidden.bs.dropdown', removeDropdownWidth);
    };

    var detectDropdownClosed = function (e) {
        if (e.originalEvent.propertyName !== 'max-height')
            return;

        var $target = jq2143(e.target);

        if (isDropdownClosed($target)) {
            unTabifyDropdowns($target);
            $target.off('transitionstart', detectDropdownClosed);
        }
    };

    var detectSearchClosed = function () {
        jq2143(this).parent().on('hidden.bs.dropdown', onSearchClosed);
    };

    var onSearchClosed = function () {
        setTimeout(function () {
            jq2143(window).resize();
            jq2143('.search-bar-v3').off('hidden.bs.dropdown');
        }, 5);
    };

    var prepareDropdownForTabification = function (e) {
        var $target = jq2143(e.currentTarget);

        if (isDropdownClosed($target)) {

            var dropdownToTabify;

            if ($target.next('ul').hasClass('uh-dropdown-menu')) {
                dropdownToTabify = $target.next('ul');
            }
            else if ($target.siblings('.dropdown-menu')) {
                dropdownToTabify = $target.siblings('.dropdown-menu');
            }
            else if ($target.next('ul').hasClass('dropdown-menu')) {
                dropdownToTabify = $target.next('ul');
            }
            else {
                return;
            }

            tabifyDropdowns(dropdownToTabify, $target.attr('tabindex'));
            dropdownToTabify.on('transitionstart', detectDropdownClosed);
            $emptySearch.attr('tabindex', 2);
        }
    };

    /* Functions for flyouts */
    var removeAllHeights = function () {
        var $navbar = $headerElem.find('.navbar-nav.uh_nav');
        $navbar.find('ul.uh-dropdown-menu').css("min-height", "1px");
    };

    var removeDropdownWidth = function () {
        var $this = jq2143(this);

        jq2143('.uh-dropdown-menu').off('hidden.bs.dropdown', removeDropdownWidth);
    };

    var resizeSubNav = function ($elem) {
        if (!mobileBreakpoint.matches) {
            var selfUl = $elem.closest('ul.uh-dropdown-menu');
            var childUl = $elem.next('ul.uh-dropdown-menu');
            var parentUl = selfUl.parent().closest('ul.uh-dropdown-menu');

            var dropdowns = [selfUl, childUl]

            if (parentUl.length > 0)
                dropdowns.push(parentUl);

            var maxDropdownHeight
                = Math.max.apply(Math, dropdowns.map(function (o) { return o.outerHeight(); }));

            $.each(dropdowns, function (i, value) {
                if (value.outerHeight() !== maxDropdownHeight)
                    value.css("min-height", maxDropdownHeight + 'px');
            });
        }
    };

    var clearSearchField = function () {
        $headerElem.find('.search-dropdown-input').val('');
    };

    // responsive - - - - - - - - - - - - - - - - - - - - - - - - - 
    var mediaQuery = function (mbp) {
        if (mbp.matches) {
            namespace.initMobileView();
        } else {
            namespace.initDesktopView();
        }
    };

    namespace.openSubmenu = function (elem) {
        if (elem === undefined)
            return;

        var $elem = jq2143(elem);
        namespace.closeAllSubmenus();
        $elem.attr("aria-expanded", "true");
    };

    namespace.closeAllSubmenus = function () {
        $dropdownSubmenuToggles.attr("aria-expanded", "false");
    };

    namespace.openAllMsftSubmenus = function () {
        $dropdownSubmenuToggles.attr("aria-expanded", "true");
    };

    namespace.closeAllChildSubmenus = function () {
        var $dropdownSubmenus = $headerElem.find('.uh-dropdown-submenu');
        $dropdownSubmenus.removeClass('open');
        $dropdownSubmenus.children().attr("aria-expanded", "false");
        namespace.closeAlltertiarySubmenus();
        removeAllHeights();
    };

    namespace.openAllChildSubmenus = function () {
        var $this = jq2143(this);

        if ($this.closest('.panel-dropdowns').length !== 1)
            return;

        if ($this.parent().hasClass('more-btn'))
            return;

        var $dropdown = $this.next('.uh-dropdown-menu');
        var $categoryNavItems = $this.parent('.categories-nav-items');
        var $dropdownItems = $categoryNavItems.find('.uh-dropdown-submenu');
        var $dropdownSubmenus = $dropdown.find('.uh-dropdown-menu');
        var $dropwidth = $this.next('.uh-dropdown-menu').width();


        var $dropdownTrigger = $this.next('.uh-dropdown-menu')
            .find('.uh-dropdown-menu.uh-child-submenu').parent()
            .find('.uh-navigation-dropdown-submenu');
        var containerWidth = $this.closest('.container-v3').width();

        var buffer = 200;
        var widthOfNavItems = $dropdownMenuWidth * $dropdownItems.length;
        var widthOfNavItemsWithBuffer = widthOfNavItems + buffer;

        while (widthOfNavItemsWithBuffer > containerWidth) {
            widthOfNavItems = widthOfNavItems - $dropwidth;
            widthOfNavItemsWithBuffer = widthOfNavItemsWithBuffer - $dropwidth;
        }


        $dropdownSubmenus.css({ opacity: 0 });

        var numberOfItems = $dropdownItems.length;
        $dropdown.width(widthOfNavItems);

        var centeredDropdown = (containerWidth - widthOfNavItems) / 2;

        if (numberOfItems > 2 && window.matchMedia('(max-width: 1200px)').matches) {
            //center the dropdown
            $dropdown.css({ 'left': centeredDropdown });
        } else if (numberOfItems > 3) {
            $dropdown.css({ 'left': centeredDropdown });
        }
        else {
            // right or left layout
            $dropdown.css({ 'left': 'auto' });

            var $trigger = $dropdown.prev('a');
            var $triggerW = $trigger.outerWidth();
            var off = $trigger.offset();
            var leftPos = off.left;
            var docW = $headerElem.find('.container-v3').width();
            var trigCenter = leftPos + ($triggerW * .5);

            var isEntirelyVisibleRight = leftPos + widthOfNavItems <= docW;
            var isEntirelyVisibleLeft = leftPos + $triggerW >= widthOfNavItems;
            var rightSideHasMoreRoom = trigCenter < docW * .5;

            if (rightSideHasMoreRoom && isEntirelyVisibleRight) {
                // console.log('better facing right');
            }
            else if (!rightSideHasMoreRoom && isEntirelyVisibleLeft) {
                // console.log('better facing left');

                if (numberOfItems !== 1) {
                    $dropdown.css({ 'transform': 'translate(-' + widthOfNavItems / 2 + 'px)' });
                }

            }
            else {
                $dropdown.css({ 'left': centeredDropdown });
            }
        }

        setTimeout(function () {
            $dropdownSubmenus.parent().addClass('open');
            $dropdownSubmenus.css({ opacity: 1 });
            $dropdownTrigger.attr("aria-expanded", "true");
        }, 5);
    };

    namespace.closeAlltertiarySubmenus = function () {
        var $dropdownChildSubmenus = $headerElem.find('.uh-child-tertiary');
        $dropdownChildSubmenus.find('reversed').removeClass('reversed');
        $dropdownChildSubmenus.removeClass('open');
      // $dropdownChildSubmenus.children().attr("aria-expanded", "false");
    };

    namespace.openChildSubMenu = function (elem) {

        if (elem === undefined)
            return;

        namespace.closeAllChildSubmenus();
        var $elem = jq2143(elem);
        var $dropdown = $elem.next('.uh-dropdown-menu');

        if ($dropdown.length < 1)
            return;

        $elem.attr("aria-expanded", "true");
        $elem.closest('.uh-dropdown-submenu').addClass('open');
        resizeSubNav($elem);

        $dropdown.removeClass('reversed');
        if ($elem.closest('ul').find('ul.uh-tertiary-child-menu')) {

            var off = $dropdown.offset();
            var l = off.left;
            var w = $dropdown.width() * 2;
            var docW = jq2143('body').width();

            var isEntirelyVisible = (l + w <= docW);

            if (!isEntirelyVisible) {
                $dropdown.addClass('reversed');
            } else {
                $dropdown.removeClass('reversed');
            }
        }
    };

    namespace.opentertiaryChildSubMenu = function (elem) {
        if (elem === undefined)
            return;

        namespace.closeAlltertiarySubmenus();
        var $elem = jq2143(elem);
       // $elem.attr("aria-expanded", "true");
        $elem.closest('.uh-child-tertiary').addClass('open');
        resizeSubNav($elem);

        if ($elem.closest('ul').hasClass('reversed')) {
            $elem.next('ul').addClass('reversed');
        }

    };

    namespace.initMobileView = function () {
        $window.on('resize', onResizeComplete);
        $dropdownSubmenuToggles.on('click', openOrCloseSubmenu);
        tabifyNavMobile();
        namespace.closeAllSubmenus();
        initFullWidthDropdown();
        removeAllHeights();
        namespace.initPanelView(false);
        $dropdownMenuWidth = $headerElem.find('.categories-nav-items .uh-dropdown-menu').first().outerWidth();
    };

    namespace.initDesktopView = function () {
        $window.off('resize', onResizeComplete);
        $dropdownSubmenuToggles.off('click', openOrCloseSubmenu);
        tabifyNavDesktop();
        namespace.openAllMsftSubmenus();
        $allMsDropdownMenu.removeAttr('style');
        removeAllHeights();
        $dropdownMenuWidth = $headerElem.find('.categories-nav-items .uh-dropdown-menu').first().outerWidth();

        if ($headerElem.hasClass('panel-dropdowns')) {
            namespace.initPanelView(true);
        }
        else {
            namespace.initPanelView(false);
        }
    };

    namespace.initPanelView = function (open) {
        var $dropdownChildSubMenuTogglesNotMore = $dropdownChildSubMenuToggles.closest('.categories-nav-items')
            .not('.more-btn')
            .find('.uh-navigation-dropdown-submenu');

        var $dropdownChildSubMenuTogglesIsMore = $dropdownChildSubMenuToggles.closest('.categories-nav-items.more-btn')
            .find('.uh-navigation-dropdown-submenu');

        // remove previous handler before adding it again
        $dropdownChildSubMenuTogglesIsMore.off('click', openOrCloseChildSubmenu);
        $dropdownChildSubMenuTogglesIsMore.on('click', openOrCloseChildSubmenu);
        $dropdownChildSubMenuTogglesNotMore.off('click', openOrCloseChildSubmenu);
        $dropdownChildSubMenuTogglesNotMore.on('click', openOrCloseChildSubmenu);

        if (open) {
            $dropdownToggles.on('click', namespace.openAllChildSubmenus);
            $dropdownChildSubMenuTogglesNotMore.off('click', openOrCloseChildSubmenu);
        }
        else {
            $dropdownToggles.off('click', namespace.openAllChildSubmenus);
        }
    };

    namespace.closeSiteNameMenu = function () {
        if ($headerElem.find('.uh-navigation.collapse').hasClass('in')) {
            $headerElem.find('.mobile-header .dropdown-toggle')
                .addClass('collapsed')
                .attr("aria-expanded", "false");
            $headerElem.find('.uh-navigation.collapse')
                .removeClass('in')
                .attr("aria-expanded", "false");
        }
    };

    // Call listener function at run time
    mediaQuery(mobileBreakpoint);
    // Attach listener function on state changes
    mobileBreakpoint.addListener(mediaQuery);

    $searchBtn.blur(closeAllMenus);
    $searchBtn.on('focus', closeAllMenus);
    $searchBtn.on('click', prepareDropdownForTabification);
    $dropdownToggles.on('focus', closeAllMenus);
    $dropdownToggles.off('focus', closeAllMenus);
    $dropdownToggles.on('click', prepareDropdownForTabification);
    $dropdownToggles.on('focus', function (event) {
        $signInBtn.on('focus', closeAllMenus);
        if (jq2143(document).width() >= 900) {
            closeAllMenus(event);
        }
    });
    $notificationBtn.on('focus', closeAllMenus);
    $notificationBtn.on('click', prepareDropdownForTabification);
    $loggedInBtn.on('focus', closeAllMenus);
    $loggedInBtn.on('click', prepareDropdownForTabification);
    $allMsHamburger.on('focus', closeAllMenus);
    $allMsHamburger.on('click', prepareDropdownForTabification);
    $submenuLinks.on('keydown', function (event) {
        if (event.key == "Escape") {
            closeAllMenus(event);
        }
    });
    $navHamburger.on('click', toggleMenu);

    $dropdownSubmenuToggles.on('click', keepMenuOpen);
    $dropdownChildSubMenuToggles.on('focus', keepMenuOpen);
    $dropdownChildSubMenuToggles.on('click', prepareDropdownForTabification);
    $dropdownChildSubMenuToggles.on('click', keepMenuOpen);
    $dropdownChildSubMenuTertiaryToggles.on('focus', keepMenuOpen);
    $dropdownChildSubMenuToggles.on('focus', keepMenuOpen);
    $dropdownChildSubMenuTertiaryToggles.on('click', prepareDropdownForTabification);
    $dropdownChildSubMenuTertiaryToggles.on('focus', keepMenuOpen);
    $dropdownChildSubMenuTertiaryToggles.on('click', keepMenuOpen);

    $dropdownToggles.on('click', removeAllHeights);

    $searchBtn.on('click', detectSearchClosed);
    $searchBtn.on('click', focusSearchField);
    $dropdownChildSubMenuTertiaryToggles.on('click', openOrCloseTertiaryChildSubmenu);
    $allMsHamburger.on('click', namespace.closeSiteNameMenu);

    $emptySearch.on('click', detectSearchClosed);
    $emptySearch.on('click', clearSearchField);
    $emptySearch.on('click', closeAllMenus);
};

MsSc.UniversalHeaderV3.DropdownInit = function () {
    var $uhv3Elem = jq2143('.universal-header-v3');

    if ($uhv3Elem.length > 0)
        MsSc.UniversalHeaderV3.initUniversalHeaderV3Dropdowns($uhv3Elem);

    jq2143('.dropdown-toggle.icon-caret-rotate.uh-navigation-dropdown-submenu-tertiary').on('keydown', function (e) {
        if (e.keyCode === 9 && !e.shiftKey) {
            if (!jq2143(this).parent().hasClass('open')) {
                jq2143(this).parent().find('ul.uh-dropdown-menu.uh-child-submenu.uh-tertiary-child-menu').find('a').attr('tabindex', '-1');
            } else {
                jq2143(this).parent().find('ul.uh-dropdown-menu.uh-child-submenu.uh-tertiary-child-menu').find('a').attr('tabindex', '2');
            }
        }
    });
    $(".nav-hamburger").keyup(function (event) {
        if (event.keyCode === 27) {
            $(".nav-hamburger").click();
        }
    });
    $(".uh-secondary").keydown(function (event) {
        if (event.keyCode === 27) {
            $(this).closest(".categories-nav-items").children().focus();
        }
    });
    $(".categories-nav-items").keyup(function (event) {
        if (event.keyCode === 27) {
            $(".nav-hamburger").click();
        }
    });
    $('.uh-navigation ul > li:last-child').focusout(function () {
        if ($(window).width < 900) {
            $(".nav-hamburguer").click();
        }
    });
    if (jq2143(document).width() < 540) {

        jq2143('.universal-header-v3 .navbar-nav .signin-dropdown').css('width', $(document).width());
    }
    jq2143(window).on('resize', function () {
        if (jq2143(document).width() < 540) {
            jq2143('.universal-header-v3 .navbar-nav .dropdown .signin-dropdown').css('width', $(document).width());
        }
        else {
            jq2143('.universal-header-v3 .navbar-nav .dropdown .signin-dropdown').removeAttr('style');
        }

    });
};

jq2143(document).ready(function () {
    MsSc.UniversalHeaderV3.DropdownInit();
});

;
var MsSc = MsSc || {};
MsSc.UniversalHeaderV3 = MsSc.UniversalHeaderV3 || {};
var jq2143 = jQuery;

$(function () {
    if (typeof SCBeacon !== "undefined") {
        SCBeacon.push(['ready', MsSc.UniversalHeaderV3.TuckingInit]);
    }
});

MsSc.UniversalHeaderV3.initUniversalHeaderV3Tucking = function($headerElem) {

    var $window             = jq2143(window);
    var prevWidth           = $window.width();
    var $moreBtn            = $headerElem.find('.more-btn');

    var mediaQueries = {
        mobile:     window.matchMedia('(min-width:320px) and (max-width: 899px)'),
        tablet:     window.matchMedia('(min-width: 900px) and (max-width: 1199px)'),
        desktop:    window.matchMedia('(min-width: 1200px)')
    };

    var windowResizeDirectionTuck = function() {
        //check direction
        if($window.width() > prevWidth) {
            unTuckNavItem();
        } else if($window.width() < prevWidth) {
            checkNavItemTuck();
        }
        //store the width
        prevWidth = $window.width();
       
	};

	var unTuckIfNavFits = function() {
        
        if (navFits()) {
            unTuckNavItem();
        } else {
            checkNavItemTuck();
        }
    };

    var closeMenus = function () {
        var $categoryNavs = $headerElem.find('.categories-nav-items');
        var $dropdownToggle = $headerElem.find('.dropdown-toggle');
        if ($categoryNavs.hasClass('open')) {
            $categoryNavs.removeClass('open');
            $dropdownToggle.attr('aria-expanded', 'false');
        }
    };

	//check if the nav elements fit in their container
    var navFits = function (hiddenElemWidth) {

        var $navbarHeader = $headerElem.find('.navbar-header');
        var parentElemWidth = $navbarHeader.width();
        var navbarNavWidth = $navbarHeader.find('ul.nav.navbar-nav.uh_nav').outerWidth();
        var signInControlWidth = $navbarHeader.find('.signin-control').outerWidth();
        var logoWidth = $navbarHeader.find('.ms-logo').outerWidth();
        var dashboardWidth = $navbarHeader.find('.dashboard-container a').outerWidth();
        var allMsHamburgerWidth = $navbarHeader.find('.all-ms-hamburger').outerWidth();
        var loggedinNotificationWidth = $navbarHeader.find('.loggedin-notification').width();
        var searchDiv = $navbarHeader.find('.search-div').outerWidth();
        var buffer = 30;

        if (hiddenElemWidth === undefined)
            hiddenElemWidth = 0;

        var visibleChildrenWidth = navbarNavWidth
            + signInControlWidth
            + logoWidth
            + dashboardWidth
            + allMsHamburgerWidth
            + loggedinNotificationWidth
            + searchDiv
            + buffer
            + hiddenElemWidth;


        if (parentElemWidth > visibleChildrenWidth)
            return true;
        else
            return false;

    };
	
	var checkNavItemTuck = function() {

        var isNothingTucked = $headerElem.find('.navbar-nav>li[data-nav-item].hidden').length == 0;
        
        // if the nav fits and nothing is tucked
        // hide the 'more' btn and leave
        if(navFits()) {
            if(isNothingTucked)
                if(moreMenu.isShowing)
                    moreMenu.hide();

            return;
        }

        tuckNavItem();
        
        // if this is the first item to be tucked show the 'more' button, 
        // and run again so there will be two tucked items
        if(isNothingTucked) {
            moreMenu.show();
            tuckNavItem();
        }
        setArialabel();
    };

    var tuckNavItem = function() {
        // get elements
        var lastNavItem         = $headerElem.find('.navbar-nav>li[data-nav-item]').not('.hidden').last();
        var lastNavItemIndex    = jq2143(lastNavItem).data('nav-item');
        var tuckedNavItem       = $moreBtn.find('li[data-nav-item="' + lastNavItemIndex + '"]');

        // hide item in nav and show in dropdown
        jq2143(lastNavItem).addClass('hidden');
        jq2143(tuckedNavItem).removeClass('hidden');

        //set aria lablel

        //setArialabel();
        

    };
    var setArialabel = function myfunction() {
        var totalNavItems = $('.more-btn li.uh-dropdown-submenu').length
        var totalhiddenNavItems = $('.more-btn li.uh-dropdown-submenu.hidden').length
        var availablenavundermore = totalNavItems - totalhiddenNavItems;
        var c = 0; sec = 0 ;
        if (availablenavundermore > 0) {
            $moreBtn.find('li.uh-dropdown-submenu').each(function (index) {
              
                if (!$(this).hasClass('hidden')) {
                    c++;
                    var link = $(this).find('a.uh-navigation-dropdown-submenu');
                    var pele=  $(link).find('p.submenu-dropdown-text')[0];
                    link.attr('aria-label', c + " of " + availablenavundermore + " " + $(pele).text());
                    var count = $(this).find("li.uh-child-tertiary").length;
                    $(this).find("li.uh-child-tertiary").each(function (index) {
                        sec++;
                        var link = $(this).find('a.uh-navigation-dropdown-submenu-tertiary');
                        var pele = $(link).find('p.submenu-dropdown-text')[0];
                        link.attr('aria-label', sec+" of " + count + " " + $(pele).text());

                    });
                }
            });
            

        }
    }
    var unTuckNavItem = function() {

        var numOfHiddenItems = $headerElem.find('.navbar-nav > li[data-nav-item].hidden').length;

        // hide 'more' button and bail if there are no hidden items
        if (numOfHiddenItems <= 0) {
            moreMenu.hide();

            return;
        }

        //get elements
        var firstHiddenItem         = $headerElem.find('.navbar-nav > li[data-nav-item].hidden').first();

        // get width of next hidden item in line
        var widthOfHiddenItem       = hiddenElement.removeAndGetWidth(firstHiddenItem);

        // add the widths of hidden element and the next hidden element
        if (numOfHiddenItems === 2) {
            var nextHiddenItem      = firstHiddenItem.nextAll('.hidden:first');
            var nextHiddenItemWidth = hiddenElement.removeAndGetWidth(nextHiddenItem);
            widthOfHiddenItem       = widthOfHiddenItem + nextHiddenItemWidth;
            widthOfHiddenItem       = widthOfHiddenItem - $moreBtn.width();
        }
        
        var navFitsWithHiddenItems  = navFits(widthOfHiddenItem);

        // show the item if it fits, otherwise return to hidden state
        if (navFitsWithHiddenItems) {
            var firstHiddenNavItem = jq2143(firstHiddenItem).data('nav-item');
            var firstTuckedNavItem = jq2143('.uh-dropdown-submenu[data-nav-item="' + firstHiddenNavItem + '"]');

            actuallyUntuckItems(firstHiddenItem, firstTuckedNavItem);
            if (nextHiddenItem) {
                moreMenu.hide();
                actuallyUntuckItems(nextHiddenItem, firstTuckedNavItem);
            }
        } 
        else {
            hiddenElement.stayHidden(firstHiddenItem);
            if (nextHiddenItem)
                hiddenElement.stayHidden(nextHiddenItem);
        }

    };

    var actuallyUntuckItems = function(hiddenElem, tuckedElem) {
        hiddenElement.addToFlow(hiddenElem);
        tuckedElem.addClass('hidden');
    };

    var moreMenu = {
        show: function() {
            $moreBtn.removeClass('hidden');
        },
        hide: function() {
            $moreBtn.addClass('hidden');
        },
        isShowing: function() {
            return !$moreBtn.hasClass('hidden');
        }
    };

    var unTuckAll = function() {
        $headerElem.find('.navbar-nav > li[data-nav-item].hidden')
                                     .removeClass('hidden');

        $moreBtn.find('li[data-nav-item]').addClass('hidden');
        $moreBtn.addClass('hidden');
    };

    var resetTopNav = function(){
        var visibleNavItems = $headerElem.find('.navbar-nav>li[data-nav-item]').not('.hidden');
        visibleNavItems.addClass('hidden');
        moreMenu.show();
        var hiddenNavItems = $headerElem.find('.navbar-nav > li[data-nav-item].hidden');

        jq2143.each(hiddenNavItems, function() {
            unTuckIfNavFits();
        });
    };

    var hiddenElement = {
        removeAndGetWidth: function(elem) {
            return elem.addClass('invisible')
                        .css({'position' : 'absolute'})
                        .removeClass('hidden')
                        .width();
        },

        addToFlow: function(elem) {
            return elem.removeClass('invisible').css({'position' : 'static'});
        },

        stayHidden: function(elem) {
            return elem.addClass('hidden')
                        .removeClass('invisible')
                        .css({'position' : 'static'});
        }
    };

    var syncTuckedNavItems = function() {
        var navItems = $headerElem.find('.navbar-nav>li[data-nav-item]');

        jq2143.each(navItems, function(index, value) {
            var navItem = jq2143(value).data('nav-item');
            var isNavItemHidden = jq2143(value).hasClass('hidden');
            var correstpondingItem = $moreBtn.find('li[data-nav-item="' + navItem + '"]');

            if (isNavItemHidden) {
                correstpondingItem.removeClass('hidden');
            } 
            else {
                correstpondingItem.addClass('hidden');
            }
        }); setArialabel();
    };
    
    var mediaqueryresponse = function(mql) {
        if (mediaQueries.mobile.matches) {
            $window.off('resize', windowResizeDirectionTuck);
            unTuckAll();
            closeMenus();
        }

        if (mediaQueries.desktop.matches) {
            resetTopNav();
            jq2143(window).resize(function () {
                setTimeout(function () {
                    if (!mediaQueries.mobile.matches) {
                        unTuckIfNavFits();
                        syncTuckedNavItems();
                    }
                }, 100);
            });
            closeMenus();
        } 

        if (mediaQueries.tablet.matches) {
            resetTopNav();
            jq2143(window).resize(function () {
                setTimeout(function () {
                    if (!mediaQueries.mobile.matches) {
                        unTuckIfNavFits();
                        syncTuckedNavItems();
                    }
                }, 100);
            }); 
            closeMenus();
        } 

        if (!mediaQueries.mobile.matches && !mediaQueries.desktop.matches) {
            $window.off('resize', windowResizeDirectionTuck);
        }
       
    };

    $moreBtn.on('click', syncTuckedNavItems);

    jq2143.each(mediaQueries, function(key) {
        mediaqueryresponse(mediaQueries[key]); // call listener function explicitly at run time
        mediaQueries[key].addListener(mediaqueryresponse); // attach listener function to listen in on state changes
    });
};

MsSc.UniversalHeaderV3.TuckingInit = function () {
    var $uhv3Elem = jq2143('.universal-header-v3');

    if ($uhv3Elem.length > 0) {
        MsSc.UniversalHeaderV3.initUniversalHeaderV3Tucking($uhv3Elem);
       
    }
};

jq2143(document).ready(function () {
    MsSc.UniversalHeaderV3.TuckingInit();
  
});
;
var MsSc = MsSc || {};
MsSc.UniversalHeaderV3 = MsSc.UniversalHeaderV3 || {};
var jq2143 = jQuery;

jq2143(document).ready(function () {
    jq2143(function () {
        jq2143('.view-account').on('keydown', function (e) {
            if (e.keyCode == 13) {
                jq2143('#networkProfileDialog').modal('toggle');
            }
        });
    });
});
;
var jq214 = jQuery;;
var gmositecore =  gmositecore || {};

gmositecore._jQuery = jQuery;
gmositecore._contextItemId = "";
gmositecore._isPreview = "false";
gmositecore._trackPageEventUrl = "";
gmositecore._trackAssetProfileUrl = "";
gmositecore._triggerGoalUrl = "";
gmositecore._welcomeUrl = "";
gmositecore._authType = "";

gmositecore.getJSON = function (msg) {
    try {
        var json = jQuery.parseJSON(msg);
        return json;
    } catch (err) {
    }

    return msg;
}

gmositecore.loadPartial = function(url) {
    jQuery.ajax({
        url: "api/v1/member/utility/getcrossdomaindata",
        dataType: 'text',
        data: { source: url, parameters: "" },
        async: false,
        success: function(response) {
            response = gmositecore.getJSON(response);
            return response.Results.toString();
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }
    });
}

gmositecore.getHost = function() {
    var parser = document.createElement('a');
    var href = window.location.href;
    parser.href = href;
    return parser.protocol + "//" + parser.hostname;
}

gmositecore.signin = function (authType) {
    window.location.href = "/_login?authType=" + authType + "&welcomeUrl=" + gmositecore._welcomeUrl + "&redirectUrl=" + window.location.href;
}

gmositecore._queryString = (function (a) {
    if (a == "") return {};
    var b = {};
    for (var i = 0; i < a.length; ++i) {
        var p = a[i].split('=', 2);
        if (p.length == 1)
            b[p[0]] = "";
        else
            b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " "));
    }
    return b;
})(window.location.search.substr(1).split('&'));


gmositecore.getCookie = function(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
};
/*!
 * Less - Leaner CSS v1.7.5
 * http://lesscss.org
 *
 * Copyright (c) 2009-2014, Alexis Sellier <self@cloudhead.net>
 * Licensed under the Apache v2 License.
 *
 */

 /** * @license Apache v2
 */

!function(a,b){function c(b){return a.less[b.split("/")[1]]}function d(a,b){"undefined"!=typeof console&&w.logLevel>=b&&console.log("less: "+a)}function e(a){return a.replace(/^[a-z-]+:\/+?[^\/]+/,"").replace(/^\//,"").replace(/\.[a-zA-Z]+$/,"").replace(/[^\.\w-]+/g,"-").replace(/\./g,":")}function f(a,c){var e="{line} {content}",f=a.filename||c,g=[],h=(a.type||"Syntax")+"Error: "+(a.message||"There is an error in your .less file")+" in "+f+" ",i=function(a,c,d){a.extract[c]!==b&&g.push(e.replace(/\{line\}/,(parseInt(a.line,10)||0)+(c-1)).replace(/\{class\}/,d).replace(/\{content\}/,a.extract[c]))};a.extract?(i(a,0,""),i(a,1,"line"),i(a,2,""),h+="on line "+a.line+", column "+(a.column+1)+":\n"+g.join("\n")):a.stack&&(h+=a.stack),d(h,z.errors)}function g(a,b,c){var f=b.href||"",g="less:"+(b.title||e(f)),h=document.getElementById(g),i=!1,j=document.createElement("style");j.setAttribute("type","text/css"),b.media&&j.setAttribute("media",b.media),j.id=g,j.styleSheet||(j.appendChild(document.createTextNode(a)),i=null!==h&&h.childNodes.length>0&&j.childNodes.length>0&&h.firstChild.nodeValue===j.firstChild.nodeValue);var k=document.getElementsByTagName("head")[0];if(null===h||i===!1){var l=b&&b.nextSibling||null;l?l.parentNode.insertBefore(j,l):k.appendChild(j)}if(h&&i===!1&&h.parentNode.removeChild(h),j.styleSheet)try{j.styleSheet.cssText=a}catch(m){throw new Error("Couldn't reassign styleSheet.cssText.")}if(c&&D){d("saving "+f+" to cache.",z.info);try{D.setItem(f,a),D.setItem(f+":timestamp",c)}catch(m){d("failed to save",z.errors)}}}function h(a){return w.postProcessor&&"function"==typeof w.postProcessor&&(a=w.postProcessor.call(a,a)||a),a}function i(a,c){var d,f,h="less-error-message:"+e(c||""),i='<li><label>{line}</label><pre class="{class}">{content}</pre></li>',j=document.createElement("div"),k=[],l=a.filename||c,m=l.match(/([^\/]+(\?.*)?)$/)[1];j.id=h,j.className="less-error-message",f="<h3>"+(a.type||"Syntax")+"Error: "+(a.message||"There is an error in your .less file")+'</h3><p>in <a href="'+l+'">'+m+"</a> ";var n=function(a,c,d){a.extract[c]!==b&&k.push(i.replace(/\{line\}/,(parseInt(a.line,10)||0)+(c-1)).replace(/\{class\}/,d).replace(/\{content\}/,a.extract[c]))};a.extract?(n(a,0,""),n(a,1,"line"),n(a,2,""),f+="on line "+a.line+", column "+(a.column+1)+":</p><ul>"+k.join("")+"</ul>"):a.stack&&(f+="<br/>"+a.stack.split("\n").slice(1).join("<br/>")),j.innerHTML=f,g([".less-error-message ul, .less-error-message li {","list-style-type: none;","margin-right: 15px;","padding: 4px 0;","margin: 0;","}",".less-error-message label {","font-size: 12px;","margin-right: 15px;","padding: 4px 0;","color: #cc7777;","}",".less-error-message pre {","color: #dd6666;","padding: 4px 0;","margin: 0;","display: inline-block;","}",".less-error-message pre.line {","color: #ff0000;","}",".less-error-message h3 {","font-size: 20px;","font-weight: bold;","padding: 15px 0 5px 0;","margin: 0;","}",".less-error-message a {","color: #10a","}",".less-error-message .error {","color: red;","font-weight: bold;","padding-bottom: 2px;","border-bottom: 1px dashed red;","}"].join("\n"),{title:"error-message"}),j.style.cssText=["font-family: Arial, sans-serif","border: 1px solid #e00","background-color: #eee","border-radius: 5px","-webkit-border-radius: 5px","-moz-border-radius: 5px","color: #e00","padding: 15px","margin-bottom: 15px"].join(";"),"development"==w.env&&(d=setInterval(function(){document.body&&(document.getElementById(h)?document.body.replaceChild(j,document.getElementById(h)):document.body.insertBefore(j,document.body.firstChild),clearInterval(d))},10))}function j(a,b){w.errorReporting&&"html"!==w.errorReporting?"console"===w.errorReporting?f(a,b):"function"==typeof w.errorReporting&&w.errorReporting("add",a,b):i(a,b)}function k(a){var b=document.getElementById("less-error-message:"+e(a));b&&b.parentNode.removeChild(b)}function l(){}function m(a){w.errorReporting&&"html"!==w.errorReporting?"console"===w.errorReporting?l(a):"function"==typeof w.errorReporting&&w.errorReporting("remove",a):k(a)}function n(a){for(var b,c=document.getElementsByTagName("style"),d=0;d<c.length;d++)if(b=c[d],b.type.match(C)){var e=new w.tree.parseEnv(w),f=b.innerHTML||"";e.filename=document.location.href.replace(/#.*$/,""),(a||w.globalVars)&&(e.useFileCache=!0);var g=function(a){return function(b,c){if(b)return j(b,"inline");var d=c.toCSS(w);a.type="text/css",a.styleSheet?a.styleSheet.cssText=d:a.innerHTML=d}}(b);new w.Parser(e).parse(f,g,{globalVars:w.globalVars,modifyVars:a})}}function o(a,b){var c,d,e=/^((?:[a-z-]+:)?\/+?(?:[^\/\?#]*\/)|([\/\\]))?((?:[^\/\\\?#]*[\/\\])*)([^\/\\\?#]*)([#\?].*)?$/i,f=a.match(e),g={},h=[];if(!f)throw new Error("Could not parse sheet href - '"+a+"'");if(!f[1]||f[2]){if(d=b.match(e),!d)throw new Error("Could not parse page url - '"+b+"'");f[1]=f[1]||d[1]||"",f[2]||(f[3]=d[3]+f[3])}if(f[3]){for(h=f[3].replace(/\\/g,"/").split("/"),c=0;c<h.length;c++)"."===h[c]&&(h.splice(c,1),c-=1);for(c=0;c<h.length;c++)".."===h[c]&&c>0&&(h.splice(c-1,2),c-=2)}return g.hostPart=f[1],g.directories=h,g.path=f[1]+h.join("/"),g.fileUrl=g.path+(f[4]||""),g.url=g.fileUrl+(f[5]||""),g}function p(a,b){var c,d,e,f,g=o(a),h=o(b),i="";if(g.hostPart!==h.hostPart)return"";for(d=Math.max(h.directories.length,g.directories.length),c=0;d>c&&h.directories[c]===g.directories[c];c++);for(f=h.directories.slice(c),e=g.directories.slice(c),c=0;c<f.length-1;c++)i+="../";for(c=0;c<e.length-1;c++)i+=e[c]+"/";return i}function q(){if(a.XMLHttpRequest&&!("file:"===a.location.protocol&&"ActiveXObject"in a))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(b){return d("browser doesn't support AJAX.",z.errors),null}}function r(a,b,c,e){function f(b,c,d){b.status>=200&&b.status<300?c(b.responseText,b.getResponseHeader("Last-Modified")):"function"==typeof d&&d(b.status,a)}var g=q(),h=y?w.fileAsync:w.async;"function"==typeof g.overrideMimeType&&g.overrideMimeType("text/css"),d("XHR: Getting '"+a+"'",z.debug),g.open("GET",a,h),g.setRequestHeader("Accept",b||"text/x-less, text/css; q=0.9, */*; q=0.5"),g.send(null),y&&!w.fileAsync?0===g.status||g.status>=200&&g.status<300?c(g.responseText):e(g.status,a):h?g.onreadystatechange=function(){4==g.readyState&&f(g,c,e)}:f(g,c,e)}function s(b,c,d,e){c&&c.currentDirectory&&!/^([A-Za-z-]+:)?\//.test(b)&&(b=c.currentDirectory+b);var f=o(b,a.location.href),g=f.url,h={currentDirectory:f.path,filename:g};if(c?(h.entryPath=c.entryPath,h.rootpath=c.rootpath,h.rootFilename=c.rootFilename,h.relativeUrls=c.relativeUrls):(h.entryPath=f.path,h.rootpath=w.rootpath||f.path,h.rootFilename=g,h.relativeUrls=e.relativeUrls),h.relativeUrls&&(h.rootpath=e.rootpath?o(e.rootpath+p(f.path,h.entryPath)).path:f.path),e.useFileCache&&E[g])try{var i=E[g];d(null,i,g,h,{lastModified:new Date})}catch(j){d(j,null,g)}else r(g,e.mime,function(a,b){E[g]=a;try{d(null,a,g,h,{lastModified:b})}catch(c){d(c,null,g)}},function(a,b){d({type:"File",message:"'"+b+"' wasn't found ("+a+")"},null,g)})}function t(a,b,c,d,e){var f=new w.tree.parseEnv(w);f.mime=a.type,(e||w.globalVars)&&(f.useFileCache=!0),s(a.href,null,function(h,i,j,k,l){if(l){l.remaining=d;var n=D&&D.getItem(j),o=D&&D.getItem(j+":timestamp");if(!c&&o&&l.lastModified&&new Date(l.lastModified).valueOf()===new Date(o).valueOf())return g(n,a),l.local=!0,void b(null,null,i,a,l,j)}m(j),i?(f.currentFileInfo=k,new w.Parser(f).parse(i,function(c,d){if(c)return b(c,null,null,a);try{b(c,d,i,a,l,j)}catch(c){b(c,null,null,a)}},{modifyVars:e,globalVars:w.globalVars})):b(h,null,null,a,l,j)},f,e)}function u(a,b,c){for(var d=0;d<w.sheets.length;d++)t(w.sheets[d],a,b,w.sheets.length-(d+1),c)}function v(){"development"===w.env?(w.optimization=0,w.watchTimer=setInterval(function(){w.watchMode&&u(function(a,b,c,d,e){if(a)j(a,d.href);else if(b){var f=b.toCSS(w);f=h(f),g(f,d,e.lastModified)}})},w.poll)):w.optimization=3}("undefined"==typeof a.less||"undefined"!=typeof a.less.nodeType)&&(a.less={}),w=a.less,x=a.less.tree={},w.mode="browser";var w,x;w===b&&(w=exports,x=c("./tree"),w.mode="node"),w.Parser=function(a){function d(){D=y,G.push({current:C,i:y,j:z})}function e(){var a=G.pop();C=a.current,D=y=a.i,z=a.j}function f(){G.pop()}function g(){y>D&&(C=C.slice(y-D),D=y)}function h(a,b){var c=a.charCodeAt(0|b);return 32>=c&&(32===c||10===c||9===c)}function i(a){var b,c,d=typeof a;return"string"===d?v.charAt(y)!==a?null:(l(1),a):(g(),(b=a.exec(C))?(c=b[0].length,l(c),"string"==typeof b?b:1===b.length?b[0]:b):null)}function j(a){y>D&&(C=C.slice(y-D),D=y);var b=a.exec(C);return b?(l(b[0].length),"string"==typeof b?b:1===b.length?b[0]:b):null}function k(a){return v.charAt(y)!==a?null:(l(1),a)}function l(a){for(var b,c=y,d=z,e=y-D,f=y+C.length-e,g=y+=a,h=v;f>y&&(b=h.charCodeAt(y),!(b>32))&&(32===b||10===b||9===b||13===b);y++);return C=C.slice(a+y-g+e),D=y,!C.length&&z<B.length-1?(C=B[++z],l(0),!0):c!==y||d!==z}function m(a,b){var c="[object Function]"===Object.prototype.toString.call(a)?a.call(F):i(a);return c?c:void o(b||("string"==typeof a?"expected '"+a+"' got '"+v.charAt(y)+"'":"unexpected token"))}function n(a,b){return v.charAt(y)===a?(l(1),a):void o(b||"expected '"+a+"' got '"+v.charAt(y)+"'")}function o(a,b){var c=new Error(a);throw c.index=y,c.type=b||"Syntax",c}function p(a){return"string"==typeof a?v.charAt(y)===a:a.test(C)}function q(a){return v.charAt(y)===a}function r(a,b){return a.filename&&b.currentFileInfo.filename&&a.filename!==b.currentFileInfo.filename?E.imports.contents[a.filename]:v}function s(a,b){for(var c=a+1,d=null,e=-1;--c>=0&&"\n"!==b.charAt(c);)e++;return"number"==typeof a&&(d=(b.slice(0,a).match(/\n/g)||"").length),{line:d,column:e}}function t(a,b,d){var e=d.currentFileInfo.filename;return"browser"!==w.mode&&"rhino"!==w.mode&&(e=c("path").resolve(e)),{lineNumber:s(a,b).line+1,fileName:e}}function u(a,b){var c=r(a,b),d=s(a.index,c),e=d.line,f=d.column,g=a.call&&s(a.call,c).line,h=c.split("\n");this.type=a.type||"Syntax",this.message=a.message,this.filename=a.filename||b.currentFileInfo.filename,this.index=a.index,this.line="number"==typeof e?e+1:null,this.callLine=g+1,this.callExtract=h[g],this.stack=a.stack,this.column=f,this.extract=[h[e-1],h[e],h[e+1]]}var v,y,z,A,B,C,D,E,F,G=[],H=a&&a.filename;a instanceof x.parseEnv||(a=new x.parseEnv(a));var I=this.imports={paths:a.paths||[],queue:[],files:a.files,contents:a.contents,contentsIgnoredChars:a.contentsIgnoredChars,mime:a.mime,error:null,push:function(b,c,d,e){var f=this;this.queue.push(b);var g=function(a,c,d){f.queue.splice(f.queue.indexOf(b),1);var g=d===H;f.files[d]=c,a&&!f.error&&(f.error=a),e(a,c,g,d)};w.Parser.importer?w.Parser.importer(b,c,g,a):w.Parser.fileLoader(b,c,function(b,e,f,h){if(b)return void g(b);var i=new x.parseEnv(a);i.currentFileInfo=h,i.processImports=!1,i.contents[f]=e,(c.reference||d.reference)&&(h.reference=!0),d.inline?g(null,e,f):new w.Parser(i).parse(e,function(a,b){g(a,b,f)})},a)}},J=j;return u.prototype=new Error,u.prototype.constructor=u,this.env=a=a||{},this.optimization="optimization"in this.env?this.env.optimization:1,E={imports:I,parse:function(d,e,f){var g,h,i,j,k,l=null,m="";if(y=z=D=A=0,j=f&&f.globalVars?w.Parser.serializeVars(f.globalVars)+"\n":"",k=f&&f.modifyVars?"\n"+w.Parser.serializeVars(f.modifyVars):"",(j||f&&f.banner)&&(m=(f&&f.banner?f.banner:"")+j,E.imports.contentsIgnoredChars[a.currentFileInfo.filename]=m.length),d=d.replace(/\r\n/g,"\n"),v=d=m+d.replace(/^\uFEFF/,"")+k,E.imports.contents[a.currentFileInfo.filename]=d,B=function(b){function c(b,c){l=new u({index:c||i,type:"Parse",message:b,filename:a.currentFileInfo.filename},a)}function d(a){var c=i-s;512>c&&!a||!c||(r.push(b.slice(s,i+1)),s=i+1)}var e,f,g,h,i,j,k,m,n,o=b.length,p=0,q=0,r=[],s=0;for(i=0;o>i;i++)if(k=b.charCodeAt(i),!(k>=97&&122>=k||34>k))switch(k){case 40:q++,f=i;continue;case 41:if(--q<0)return c("missing opening `(`");continue;case 59:q||d();continue;case 123:p++,e=i;continue;case 125:if(--p<0)return c("missing opening `{`");p||q||d();continue;case 92:if(o-1>i){i++;continue}return c("unescaped `\\`");case 34:case 39:case 96:for(n=0,j=i,i+=1;o>i;i++)if(m=b.charCodeAt(i),!(m>96)){if(m==k){n=1;break}if(92==m){if(i==o-1)return c("unescaped `\\`");i++}}if(n)continue;return c("unmatched `"+String.fromCharCode(k)+"`",j);case 47:if(q||i==o-1)continue;if(m=b.charCodeAt(i+1),47==m)for(i+=2;o>i&&(m=b.charCodeAt(i),!(13>=m)||10!=m&&13!=m);i++);else if(42==m){for(g=j=i,i+=2;o-1>i&&(m=b.charCodeAt(i),125==m&&(h=i),42!=m||47!=b.charCodeAt(i+1));i++);if(i==o-1)return c("missing closing `*/`",j);i++}continue;case 42:if(o-1>i&&47==b.charCodeAt(i+1))return c("unmatched `/*`");continue}return 0!==p?g>e&&h>g?c("missing closing `}` or `*/`",e):c("missing closing `}`",e):0!==q?c("missing closing `)`",f):(d(!0),r)}(d),l)return e(new u(l,a));C=B[0];try{g=new x.Ruleset(null,this.parsers.primary()),g.root=!0,g.firstRoot=!0}catch(n){return e(new u(n,a))}if(g.toCSS=function(d){return function(e,f){e=e||{};var g,h,i=new x.evalEnv(e);"object"!=typeof f||Array.isArray(f)||(f=Object.keys(f).map(function(a){var b=f[a];return b instanceof x.Value||(b instanceof x.Expression||(b=new x.Expression([b])),b=new x.Value([b])),new x.Rule("@"+a,b,!1,null,0)}),i.frames=[new x.Ruleset(null,f)]);try{var j,k=[],l=[new x.joinSelectorVisitor,new x.processExtendsVisitor,new x.toCSSVisitor({compress:Boolean(e.compress)})],m=this;if(e.plugins)for(j=0;j<e.plugins.length;j++)e.plugins[j].isPreEvalVisitor?k.push(e.plugins[j]):e.plugins[j].isPreVisitor?l.splice(0,0,e.plugins[j]):l.push(e.plugins[j]);for(j=0;j<k.length;j++)k[j].run(m);for(g=d.call(m,i),j=0;j<l.length;j++)l[j].run(g);e.sourceMap&&(g=new x.sourceMapOutput({contentsIgnoredCharsMap:E.imports.contentsIgnoredChars,writeSourceMap:e.writeSourceMap,rootNode:g,contentsMap:E.imports.contents,sourceMapFilename:e.sourceMapFilename,sourceMapURL:e.sourceMapURL,outputFilename:e.sourceMapOutputFilename,sourceMapBasepath:e.sourceMapBasepath,sourceMapRootpath:e.sourceMapRootpath,outputSourceFiles:e.outputSourceFiles,sourceMapGenerator:e.sourceMapGenerator})),h=g.toCSS({compress:Boolean(e.compress),dumpLineNumbers:a.dumpLineNumbers,strictUnits:Boolean(e.strictUnits),numPrecision:8})}catch(n){throw new u(n,a)}if(e.cleancss&&"node"===w.mode){var o=c("clean-css"),p=e.cleancssOptions||{};return p.keepSpecialComments===b&&(p.keepSpecialComments="*"),p.processImport=!1,p.noRebase=!0,p.noAdvanced===b&&(p.noAdvanced=!0),new o(p).minify(h)}return e.compress?h.replace(/(^(\s)+)|((\s)+$)/g,""):h}}(g.eval),y<v.length-1){y=A;var o=s(y,v);i=v.split("\n"),h=o.line+1,l={type:"Parse",message:"Unrecognised input",index:y,filename:a.currentFileInfo.filename,line:h,column:o.column,extract:[i[h-2],i[h-1],i[h]]}}var p=function(b){return b=l||b||E.imports.error,b?(b instanceof u||(b=new u(b,a)),e(b)):e(null,g)};return a.processImports===!1?p():void new x.importVisitor(this.imports,p).run(g)},parsers:F={primary:function(){for(var a,b=this.mixin,c=J,d=[];C;){if(a=this.extendRule()||b.definition()||this.rule()||this.ruleset()||b.call()||this.comment()||this.rulesetCall()||this.directive())d.push(a);else if(!c(/^[\s\n]+/)&&!c(/^;+/))break;if(q("}"))break}return d},comment:function(){var b;if("/"===v.charAt(y))return"/"===v.charAt(y+1)?new x.Comment(j(/^\/\/.*/),!0,y,a.currentFileInfo):(b=j(/^\/\*(?:[^*]|\*+[^\/*])*\*+\/\n?/),b?new x.Comment(b,!1,y,a.currentFileInfo):void 0)},comments:function(){for(var a,b=[];;){if(a=this.comment(),!a)break;b.push(a)}return b},entities:{quoted:function(){var b,c,d=y,e=y;return"~"===v.charAt(d)&&(d++,c=!0),'"'===v.charAt(d)||"'"===v.charAt(d)?(c&&k("~"),b=j(/^"((?:[^"\\\r\n]|\\.)*)"|'((?:[^'\\\r\n]|\\.)*)'/),b?new x.Quoted(b[0],b[1]||b[2],c,e,a.currentFileInfo):void 0):void 0},keyword:function(){var a;if(a=j(/^%|^[_A-Za-z-][_A-Za-z0-9-]*/)){var b=x.Color.fromKeyword(a);return b?b:new x.Keyword(a)}},call:function(){var b,c,d,e,f=y;if(b=/^([\w-]+|%|progid:[\w\.]+)\(/.exec(C)){if(b=b[1],c=b.toLowerCase(),"url"===c)return null;if(y+=b.length,"alpha"===c&&(e=F.alpha(),"undefined"!=typeof e))return e;if(k("("),d=this.arguments(),k(")"))return b?new x.Call(b,d,f,a.currentFileInfo):void 0}},arguments:function(){for(var a,b=[];;){if(a=this.assignment()||F.expression(),!a)break;if(b.push(a),!k(","))break}return b},literal:function(){return this.dimension()||this.color()||this.quoted()||this.unicodeDescriptor()},assignment:function(){var a,b;return a=j(/^\w+(?=\s?=)/i),a&&k("=")?(b=F.entity(),b?new x.Assignment(a,b):void 0):void 0},url:function(){var b;if("u"===v.charAt(y)&&j(/^url\(/))return b=this.quoted()||this.variable()||j(/^(?:(?:\\[\(\)'"])|[^\(\)'"])+/)||"",n(")"),new x.URL(null!=b.value||b instanceof x.Variable?b:new x.Anonymous(b),a.currentFileInfo)},variable:function(){var b,c=y;return"@"===v.charAt(y)&&(b=j(/^@@?[\w-]+/))?new x.Variable(b,c,a.currentFileInfo):void 0},variableCurly:function(){var b,c=y;return"@"===v.charAt(y)&&(b=j(/^@\{([\w-]+)\}/))?new x.Variable("@"+b[1],c,a.currentFileInfo):void 0},color:function(){var a;if("#"===v.charAt(y)&&(a=j(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/))){var b=a.input.match(/^#([\w]+).*/);return b=b[1],b.match(/^[A-Fa-f0-9]+$/)||o("Invalid HEX color code"),new x.Color(a[1])}},dimension:function(){var a,b=v.charCodeAt(y);if(!(b>57||43>b||47===b||44==b))return a=j(/^([+-]?\d*\.?\d+)(%|[a-z]+)?/),a?new x.Dimension(a[1],a[2]):void 0},unicodeDescriptor:function(){var a;return a=j(/^U\+[0-9a-fA-F?]+(\-[0-9a-fA-F?]+)?/),a?new x.UnicodeDescriptor(a[0]):void 0},javascript:function(){var c,d,e=y;return"~"===v.charAt(e)&&(e++,d=!0),"`"===v.charAt(e)?(a.javascriptEnabled===b||a.javascriptEnabled||o("You are using JavaScript, which has been disabled."),d&&k("~"),c=j(/^`([^`]*)`/),c?new x.JavaScript(c[1],y,d):void 0):void 0}},variable:function(){var a;return"@"===v.charAt(y)&&(a=j(/^(@[\w-]+)\s*:/))?a[1]:void 0},rulesetCall:function(){var a;return"@"===v.charAt(y)&&(a=j(/^(@[\w-]+)\s*\(\s*\)\s*;/))?new x.RulesetCall(a[1]):void 0},extend:function(a){var b,c,d,e,f,g=y;if(j(a?/^&:extend\(/:/^:extend\(/)){do{for(d=null,b=null;!(d=j(/^(all)(?=\s*(\)|,))/))&&(c=this.element());)b?b.push(c):b=[c];d=d&&d[1],b||o("Missing target selector for :extend()."),f=new x.Extend(new x.Selector(b),d,g),e?e.push(f):e=[f]}while(k(","));return m(/^\)/),a&&m(/^;/),e}},extendRule:function(){return this.extend(!0)},mixin:{call:function(){var b,c,g,h,i,l,m=v.charAt(y),o=!1,p=y;if("."===m||"#"===m){for(d();;){if(b=y,h=j(/^[#.](?:[\w-]|\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/),!h)break;g=new x.Element(i,h,b,a.currentFileInfo),c?c.push(g):c=[g],i=k(">")}return c&&(k("(")&&(l=this.args(!0).args,n(")")),F.important()&&(o=!0),F.end())?(f(),new x.mixin.Call(c,l,p,a.currentFileInfo,o)):void e()}},args:function(a){var b,c,g,h,i,l,m=E.parsers,n=m.entities,p={args:null,variadic:!1},q=[],r=[],s=[];for(d();;){if(a)l=m.detachedRuleset()||m.expression();else{if(m.comments(),"."===v.charAt(y)&&j(/^\.{3}/)){p.variadic=!0,k(";")&&!b&&(b=!0),(b?r:s).push({variadic:!0});break}l=n.variable()||n.literal()||n.keyword()}if(!l)break;h=null,l.throwAwayComments&&l.throwAwayComments(),i=l;var t=null;if(a?l.value&&1==l.value.length&&(t=l.value[0]):t=l,t&&t instanceof x.Variable)if(k(":")){if(q.length>0&&(b&&o("Cannot mix ; and , as delimiter types"),c=!0),i=a&&m.detachedRuleset()||m.expression(),!i){if(!a)return e(),p.args=[],p;o("could not understand value for named argument")}h=g=t.name}else{if(!a&&j(/^\.{3}/)){p.variadic=!0,k(";")&&!b&&(b=!0),(b?r:s).push({name:l.name,variadic:!0});break}a||(g=h=t.name,i=null)}i&&q.push(i),s.push({name:h,value:i}),k(",")||(k(";")||b)&&(c&&o("Cannot mix ; and , as delimiter types"),b=!0,q.length>1&&(i=new x.Value(q)),r.push({name:g,value:i}),g=null,q=[],c=!1)}return f(),p.args=b?r:s,p},definition:function(){var a,b,c,g,h=[],i=!1;if(!("."!==v.charAt(y)&&"#"!==v.charAt(y)||p(/^[^{]*\}/)))if(d(),b=j(/^([#.](?:[\w-]|\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\s*\(/)){a=b[1];var l=this.args(!1);if(h=l.args,i=l.variadic,!k(")"))return A=y,void e();if(F.comments(),j(/^when/)&&(g=m(F.conditions,"expected condition")),c=F.block())return f(),new x.mixin.Definition(a,h,c,g,i);e()}else f()}},entity:function(){var a=this.entities;return a.literal()||a.variable()||a.url()||a.call()||a.keyword()||a.javascript()||this.comment()},end:function(){return k(";")||q("}")},alpha:function(){var a;if(j(/^\(opacity=/i))return a=j(/^\d+/)||this.entities.variable(),a?(n(")"),new x.Alpha(a)):void 0},element:function(){var b,c,g,h=y;return c=this.combinator(),b=j(/^(?:\d+\.\d+|\d+)%/)||j(/^(?:[.#]?|:*)(?:[\w-]|[^\x00-\x9f]|\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/)||k("*")||k("&")||this.attribute()||j(/^\([^()@]+\)/)||j(/^[\.#](?=@)/)||this.entities.variableCurly(),b||(d(),k("(")?(g=this.selector())&&k(")")?(b=new x.Paren(g),f()):e():f()),b?new x.Element(c,b,h,a.currentFileInfo):void 0},combinator:function(){var a=v.charAt(y);if("/"===a){d();var b=j(/^\/[a-z]+\//i);if(b)return f(),new x.Combinator(b);e()}if(">"===a||"+"===a||"~"===a||"|"===a||"^"===a){for(y++,"^"===a&&"^"===v.charAt(y)&&(a="^^",y++);h(v,y);)y++;return new x.Combinator(a)}return new x.Combinator(h(v,y-1)?" ":null)},lessSelector:function(){return this.selector(!0)},selector:function(b){for(var c,d,e,f,g,h,i,j=y,k=J;(b&&(g=this.extend())||b&&(h=k(/^when/))||(f=this.element()))&&(h?i=m(this.conditions,"expected condition"):i?o("CSS guard can only be used at the end of selector"):g?d?d.push(g):d=[g]:(d&&o("Extend can only be used at the end of selector"),e=v.charAt(y),c?c.push(f):c=[f],f=null),"{"!==e&&"}"!==e&&";"!==e&&","!==e&&")"!==e););return c?new x.Selector(c,d,i,j,a.currentFileInfo):void(d&&o("Extend must be used to extend a selector, it cannot be used on its own"))},attribute:function(){if(k("[")){var a,b,c,d=this.entities;return(a=d.variableCurly())||(a=m(/^(?:[_A-Za-z0-9-\*]*\|)?(?:[_A-Za-z0-9-]|\\.)+/)),c=j(/^[|~*$^]?=/),c&&(b=d.quoted()||j(/^[0-9]+%/)||j(/^[\w-]+/)||d.variableCurly()),n("]"),new x.Attribute(a,c,b)}},block:function(){var a;return k("{")&&(a=this.primary())&&k("}")?a:void 0},blockRuleset:function(){var a=this.block();return a&&(a=new x.Ruleset(null,a)),a},detachedRuleset:function(){var a=this.blockRuleset();return a?new x.DetachedRuleset(a):void 0},ruleset:function(){var b,c,g,h;for(d(),a.dumpLineNumbers&&(h=t(y,v,a));;){if(c=this.lessSelector(),!c)break;if(b?b.push(c):b=[c],this.comments(),c.condition&&b.length>1&&o("Guards are only currently allowed on a single selector."),!k(","))break;c.condition&&o("Guards are only currently allowed on a single selector."),this.comments()}if(b&&(g=this.block())){f();var i=new x.Ruleset(b,g,a.strictImports);return a.dumpLineNumbers&&(i.debugInfo=h),i}A=y,e()},rule:function(b){var c,g,h,i,j,k=y,l=v.charAt(k);if("."!==l&&"#"!==l&&"&"!==l)if(d(),c=this.variable()||this.ruleProperty()){if(j="string"==typeof c,j&&(g=this.detachedRuleset()),this.comments(),g||(g=b||!a.compress&&!j?this.anonymousValue()||this.value():this.value()||this.anonymousValue(),h=this.important(),i=!j&&c.pop().value),g&&this.end())return f(),new x.Rule(c,g,h,i,k,a.currentFileInfo);if(A=y,e(),g&&!b)return this.rule(!0)}else f()},anonymousValue:function(){var a;return a=/^([^@+\/'"*`(;{}-]*);/.exec(C),a?(y+=a[0].length-1,new x.Anonymous(a[1])):void 0},"import":function(){var b,c,d=y,e=j(/^@import?\s+/);if(e){var f=(e?this.importOptions():null)||{};if(b=this.entities.quoted()||this.entities.url())return c=this.mediaFeatures(),i(";")||(y=d,o("missing semi-colon or unrecognised media features on import")),c=c&&new x.Value(c),new x.Import(b,c,f,d,a.currentFileInfo);y=d,o("malformed import statement")}},importOptions:function(){var a,b,c,d={};if(!k("("))return null;do if(a=this.importOption()){switch(b=a,c=!0,b){case"css":b="less",c=!1;break;case"once":b="multiple",c=!1}if(d[b]=c,!k(","))break}while(a);return n(")"),d},importOption:function(){var a=j(/^(less|css|multiple|once|inline|reference)/);return a?a[1]:void 0},mediaFeature:function(){var b,c,d=this.entities,e=[];do if(b=d.keyword()||d.variable())e.push(b);else if(k("(")){if(c=this.property(),b=this.value(),!k(")"))return null;if(c&&b)e.push(new x.Paren(new x.Rule(c,b,null,null,y,a.currentFileInfo,!0)));else{if(!b)return null;e.push(new x.Paren(b))}}while(b);return e.length>0?new x.Expression(e):void 0},mediaFeatures:function(){var a,b=this.entities,c=[];do if(a=this.mediaFeature()){if(c.push(a),!k(","))break}else if(a=b.variable(),a&&(c.push(a),!k(",")))break;while(a);return c.length>0?c:null},media:function(){var b,c,d,e;return a.dumpLineNumbers&&(e=t(y,v,a)),j(/^@media/)&&(b=this.mediaFeatures(),c=this.block())?(d=new x.Media(c,b,y,a.currentFileInfo),a.dumpLineNumbers&&(d.debugInfo=e),d):void 0},directive:function(){var b,c,g,h,i,l,m,n=y,p=!0;if("@"===v.charAt(y)){if(c=this["import"]()||this.media())return c;if(d(),b=j(/^@[a-z-]+/)){switch(h=b,"-"==b.charAt(1)&&b.indexOf("-",2)>0&&(h="@"+b.slice(b.indexOf("-",2)+1)),h){case"@charset":i=!0,p=!1;break;case"@namespace":l=!0,p=!1;break;case"@keyframes":i=!0;break;case"@host":case"@page":case"@document":case"@supports":m=!0}return this.comments(),i?(c=this.entity(),c||o("expected "+b+" identifier")):l?(c=this.expression(),c||o("expected "+b+" expression")):m&&(c=(j(/^[^{;]+/)||"").trim(),c&&(c=new x.Anonymous(c))),this.comments(),p&&(g=this.blockRuleset()),g||!p&&c&&k(";")?(f(),new x.Directive(b,c,g,n,a.currentFileInfo,a.dumpLineNumbers?t(n,v,a):null)):void e()}}},value:function(){var a,b=[];do if(a=this.expression(),a&&(b.push(a),!k(",")))break;while(a);return b.length>0?new x.Value(b):void 0},important:function(){return"!"===v.charAt(y)?j(/^! *important/):void 0},sub:function(){var a,b;return k("(")&&(a=this.addition())?(b=new x.Expression([a]),n(")"),b.parens=!0,b):void 0},multiplication:function(){var a,b,c,g,i;if(a=this.operand()){for(i=h(v,y-1);;){if(p(/^\/[*\/]/))break;if(d(),c=k("/")||k("*"),!c){f();break}if(b=this.operand(),!b){e();break}f(),a.parensInOp=!0,b.parensInOp=!0,g=new x.Operation(c,[g||a,b],i),i=h(v,y-1)}return g||a}},addition:function(){var a,b,c,d,e;if(a=this.multiplication()){for(e=h(v,y-1);;){if(c=j(/^[-+]\s+/)||!e&&(k("+")||k("-")),!c)break;if(b=this.multiplication(),!b)break;a.parensInOp=!0,b.parensInOp=!0,d=new x.Operation(c,[d||a,b],e),e=h(v,y-1)}return d||a}},conditions:function(){var a,b,c,d=y;if(a=this.condition()){for(;;){if(!p(/^,\s*(not\s*)?\(/)||!k(","))break;if(b=this.condition(),!b)break;c=new x.Condition("or",c||a,b,d)}return c||a}},condition:function(){var a,b,c,d,e=this.entities,f=y,g=!1;return j(/^not/)&&(g=!0),n("("),a=this.addition()||e.keyword()||e.quoted(),a?(d=j(/^(?:>=|<=|=<|[<=>])/),d?(b=this.addition()||e.keyword()||e.quoted(),b?c=new x.Condition(d,a,b,f,g):o("expected expression")):c=new x.Condition("=",a,new x.Keyword("true"),f,g),n(")"),j(/^and/)?new x.Condition("and",c,this.condition()):c):void 0},operand:function(){var a,b=this.entities,c=v.charAt(y+1);"-"!==v.charAt(y)||"@"!==c&&"("!==c||(a=k("-"));var d=this.sub()||b.dimension()||b.color()||b.variable()||b.call();return a&&(d.parensInOp=!0,d=new x.Negative(d)),d},expression:function(){var a,b,c=[];do a=this.addition()||this.entity(),a&&(c.push(a),p(/^\/[\/*]/)||(b=k("/"),b&&c.push(new x.Anonymous(b))));while(a);return c.length>0?new x.Expression(c):void 0},property:function(){var a=j(/^(\*?-?[_a-zA-Z0-9-]+)\s*:/);return a?a[1]:void 0},ruleProperty:function(){function b(a){var b=a.exec(f);return b?(h.push(y+i),i+=b[0].length,f=f.slice(b[1].length),g.push(b[1])):void 0}function c(){var a=/^\s*\/\*(?:[^*]|\*+[^\/*])*\*+\//.exec(f);return a?(i+=a[0].length,f=f.slice(a[0].length),!0):!1}var d,e,f=C,g=[],h=[],i=0;for(b(/^(\*?)/);b(/^((?:[\w-]+)|(?:@\{[\w-]+\}))/););for(;c(););if(g.length>1&&b(/^\s*((?:\+_|\+)?)\s*:/)){for(l(i),""===g[0]&&(g.shift(),h.shift()),e=0;e<g.length;e++)d=g[e],g[e]="@"!==d.charAt(0)?new x.Keyword(d):new x.Variable("@"+d.slice(2,-1),h[e],a.currentFileInfo);return g}}}}},w.Parser.serializeVars=function(a){var b="";for(var c in a)if(Object.hasOwnProperty.call(a,c)){var d=a[c];b+=("@"===c[0]?"":"@")+c+": "+d+(";"===(""+d).slice(-1)?"":";")}return b},function(d){function e(a,b,c){if(!(c instanceof d.Dimension))throw{type:"Argument",message:"argument must be a number"};return null==b?b=c.unit:c=c.unify(),new d.Dimension(a(parseFloat(c.value)),b)}function f(a,b,c){var e,f,g,h,i=b.alpha,j=c.alpha,k=[];g=j+i*(1-j);for(var l=0;3>l;l++)e=b.rgb[l]/255,f=c.rgb[l]/255,h=a(e,f),g&&(h=(j*f+i*(e-j*(e+f-h)))/g),k[l]=255*h;return new d.Color(k,g)}function g(){var a,b=d.functions;for(a in l)l.hasOwnProperty(a)&&(b[a]=e.bind(null,Math[a],l[a]));for(a in m)m.hasOwnProperty(a)&&(b[a]=f.bind(null,m[a]));a=d.defaultFunc,b["default"]=a.eval.bind(a)}function h(a){return d.functions.hsla(a.h,a.s,a.l,a.a)}function i(a,b){return a instanceof d.Dimension&&a.unit.is("%")?parseFloat(a.value*b/100):j(a)}function j(a){if(a instanceof d.Dimension)return parseFloat(a.unit.is("%")?a.value/100:a.value);if("number"==typeof a)return a;throw{error:"RuntimeError",message:"color functions take numbers as parameters"}}function k(a){return Math.min(1,Math.max(0,a))}d.functions={rgb:function(a,b,c){return this.rgba(a,b,c,1)},rgba:function(a,b,c,e){var f=[a,b,c].map(function(a){return i(a,255)});return e=j(e),new d.Color(f,e)},hsl:function(a,b,c){return this.hsla(a,b,c,1)},hsla:function(a,b,c,d){function e(a){return a=0>a?a+1:a>1?a-1:a,1>6*a?g+(f-g)*a*6:1>2*a?f:2>3*a?g+(f-g)*(2/3-a)*6:g}a=j(a)%360/360,b=k(j(b)),c=k(j(c)),d=k(j(d));var f=.5>=c?c*(b+1):c+b-c*b,g=2*c-f;return this.rgba(255*e(a+1/3),255*e(a),255*e(a-1/3),d)},hsv:function(a,b,c){return this.hsva(a,b,c,1)},hsva:function(a,b,c,d){a=j(a)%360/360*360,b=j(b),c=j(c),d=j(d);var e,f;e=Math.floor(a/60%6),f=a/60-e;var g=[c,c*(1-b),c*(1-f*b),c*(1-(1-f)*b)],h=[[0,3,1],[2,0,1],[1,0,3],[1,2,0],[3,1,0],[0,1,2]];return this.rgba(255*g[h[e][0]],255*g[h[e][1]],255*g[h[e][2]],d)},hue:function(a){return new d.Dimension(a.toHSL().h)},saturation:function(a){return new d.Dimension(100*a.toHSL().s,"%")},lightness:function(a){return new d.Dimension(100*a.toHSL().l,"%")},hsvhue:function(a){return new d.Dimension(a.toHSV().h)},hsvsaturation:function(a){return new d.Dimension(100*a.toHSV().s,"%")},hsvvalue:function(a){return new d.Dimension(100*a.toHSV().v,"%")},red:function(a){return new d.Dimension(a.rgb[0])},green:function(a){return new d.Dimension(a.rgb[1])},blue:function(a){return new d.Dimension(a.rgb[2])},alpha:function(a){return new d.Dimension(a.toHSL().a)},luma:function(a){return new d.Dimension(a.luma()*a.alpha*100,"%")},luminance:function(a){var b=.2126*a.rgb[0]/255+.7152*a.rgb[1]/255+.0722*a.rgb[2]/255;return new d.Dimension(b*a.alpha*100,"%")},saturate:function(a,b){if(!a.rgb)return null;var c=a.toHSL();return c.s+=b.value/100,c.s=k(c.s),h(c)},desaturate:function(a,b){var c=a.toHSL();return c.s-=b.value/100,c.s=k(c.s),h(c)},lighten:function(a,b){var c=a.toHSL();return c.l+=b.value/100,c.l=k(c.l),h(c)},darken:function(a,b){var c=a.toHSL();return c.l-=b.value/100,c.l=k(c.l),h(c)},fadein:function(a,b){var c=a.toHSL();return c.a+=b.value/100,c.a=k(c.a),h(c)},fadeout:function(a,b){var c=a.toHSL();return c.a-=b.value/100,c.a=k(c.a),h(c)},fade:function(a,b){var c=a.toHSL();return c.a=b.value/100,c.a=k(c.a),h(c)},spin:function(a,b){var c=a.toHSL(),d=(c.h+b.value)%360;return c.h=0>d?360+d:d,h(c)},mix:function(a,b,c){c||(c=new d.Dimension(50));var e=c.value/100,f=2*e-1,g=a.toHSL().a-b.toHSL().a,h=((f*g==-1?f:(f+g)/(1+f*g))+1)/2,i=1-h,j=[a.rgb[0]*h+b.rgb[0]*i,a.rgb[1]*h+b.rgb[1]*i,a.rgb[2]*h+b.rgb[2]*i],k=a.alpha*e+b.alpha*(1-e);return new d.Color(j,k)},greyscale:function(a){return this.desaturate(a,new d.Dimension(100))},contrast:function(a,b,c,d){if(!a.rgb)return null;if("undefined"==typeof c&&(c=this.rgba(255,255,255,1)),"undefined"==typeof b&&(b=this.rgba(0,0,0,1)),b.luma()>c.luma()){var e=c;c=b,b=e}return d="undefined"==typeof d?.43:j(d),a.luma()<d?c:b},e:function(a){return new d.Anonymous(a instanceof d.JavaScript?a.evaluated:a.value)},escape:function(a){return new d.Anonymous(encodeURI(a.value).replace(/=/g,"%3D").replace(/:/g,"%3A").replace(/#/g,"%23").replace(/;/g,"%3B").replace(/\(/g,"%28").replace(/\)/g,"%29"))
},replace:function(a,b,c,e){var f=a.value;return f=f.replace(new RegExp(b.value,e?e.value:""),c.value),new d.Quoted(a.quote||"",f,a.escaped)},"%":function(a){for(var b=Array.prototype.slice.call(arguments,1),c=a.value,e=0;e<b.length;e++)c=c.replace(/%[sda]/i,function(a){var c=a.match(/s/i)?b[e].value:b[e].toCSS();return a.match(/[A-Z]$/)?encodeURIComponent(c):c});return c=c.replace(/%%/g,"%"),new d.Quoted(a.quote||"",c,a.escaped)},unit:function(a,b){if(!(a instanceof d.Dimension))throw{type:"Argument",message:"the first argument to unit must be a number"+(a instanceof d.Operation?". Have you forgotten parenthesis?":"")};return b=b?b instanceof d.Keyword?b.value:b.toCSS():"",new d.Dimension(a.value,b)},convert:function(a,b){return a.convertTo(b.value)},round:function(a,b){var c="undefined"==typeof b?0:b.value;return e(function(a){return a.toFixed(c)},null,a)},pi:function(){return new d.Dimension(Math.PI)},mod:function(a,b){return new d.Dimension(a.value%b.value,a.unit)},pow:function(a,b){if("number"==typeof a&&"number"==typeof b)a=new d.Dimension(a),b=new d.Dimension(b);else if(!(a instanceof d.Dimension&&b instanceof d.Dimension))throw{type:"Argument",message:"arguments must be numbers"};return new d.Dimension(Math.pow(a.value,b.value),a.unit)},_minmax:function(a,c){switch(c=Array.prototype.slice.call(c),c.length){case 0:throw{type:"Argument",message:"one or more arguments required"}}var e,f,g,h,i,j,k,l,m=[],n={};for(e=0;e<c.length;e++)if(g=c[e],g instanceof d.Dimension)if(h=""===g.unit.toString()&&l!==b?new d.Dimension(g.value,l).unify():g.unify(),j=""===h.unit.toString()&&k!==b?k:h.unit.toString(),k=""!==j&&k===b||""!==j&&""===m[0].unify().unit.toString()?j:k,l=""!==j&&l===b?g.unit.toString():l,f=n[""]!==b&&""!==j&&j===k?n[""]:n[j],f!==b)i=""===m[f].unit.toString()&&l!==b?new d.Dimension(m[f].value,l).unify():m[f].unify(),(a&&h.value<i.value||!a&&h.value>i.value)&&(m[f]=g);else{if(k!==b&&j!==k)throw{type:"Argument",message:"incompatible types"};n[j]=m.length,m.push(g)}else Array.isArray(c[e].value)&&Array.prototype.push.apply(c,Array.prototype.slice.call(c[e].value));return 1==m.length?m[0]:(c=m.map(function(a){return a.toCSS(this.env)}).join(this.env.compress?",":", "),new d.Anonymous((a?"min":"max")+"("+c+")"))},min:function(){return this._minmax(!0,arguments)},max:function(){return this._minmax(!1,arguments)},"get-unit":function(a){return new d.Anonymous(a.unit)},argb:function(a){return new d.Anonymous(a.toARGB())},percentage:function(a){return new d.Dimension(100*a.value,"%")},color:function(a){if(a instanceof d.Quoted){var b,c=a.value;if(b=d.Color.fromKeyword(c))return b;if(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/.test(c))return new d.Color(c.slice(1));throw{type:"Argument",message:"argument must be a color keyword or 3/6 digit hex e.g. #FFF"}}throw{type:"Argument",message:"argument must be a string"}},iscolor:function(a){return this._isa(a,d.Color)},isnumber:function(a){return this._isa(a,d.Dimension)},isstring:function(a){return this._isa(a,d.Quoted)},iskeyword:function(a){return this._isa(a,d.Keyword)},isurl:function(a){return this._isa(a,d.URL)},ispixel:function(a){return this.isunit(a,"px")},ispercentage:function(a){return this.isunit(a,"%")},isem:function(a){return this.isunit(a,"em")},isunit:function(a,b){return a instanceof d.Dimension&&a.unit.is(b.value||b)?d.True:d.False},_isa:function(a,b){return a instanceof b?d.True:d.False},tint:function(a,b){return this.mix(this.rgb(255,255,255),a,b)},shade:function(a,b){return this.mix(this.rgb(0,0,0),a,b)},extract:function(a,b){return b=b.value-1,Array.isArray(a.value)?a.value[b]:Array(a)[b]},length:function(a){var b=Array.isArray(a.value)?a.value.length:1;return new d.Dimension(b)},"data-uri":function(b,e){if("undefined"!=typeof a)return new d.URL(e||b,this.currentFileInfo).eval(this.env);var f=b.value,g=e&&e.value,h=c("./fs"),i=c("path"),j=!1;arguments.length<2&&(g=f);var k=g.indexOf("#"),l="";if(-1!==k&&(l=g.slice(k),g=g.slice(0,k)),this.env.isPathRelative(g)&&(g=this.currentFileInfo.relativeUrls?i.join(this.currentFileInfo.currentDirectory,g):i.join(this.currentFileInfo.entryPath,g)),arguments.length<2){var m;try{m=c("mime")}catch(n){m=d._mime}f=m.lookup(g);var o=m.charsets.lookup(f);j=["US-ASCII","UTF-8"].indexOf(o)<0,j&&(f+=";base64")}else j=/;base64$/.test(f);var p=h.readFileSync(g),q=32,r=parseInt(p.length/1024,10);if(r>=q&&this.env.ieCompat!==!1)return this.env.silent||console.warn("Skipped data-uri embedding of %s because its size (%dKB) exceeds IE8-safe %dKB!",g,r,q),new d.URL(e||b,this.currentFileInfo).eval(this.env);p=j?p.toString("base64"):encodeURIComponent(p);var s='"data:'+f+","+p+l+'"';return new d.URL(new d.Anonymous(s))},"svg-gradient":function(a){function e(){throw{type:"Argument",message:"svg-gradient expects direction, start_color [start_position], [color position,]..., end_color [end_position]"}}arguments.length<3&&e();var f,g,h,i,j,k,l,m=Array.prototype.slice.call(arguments,1),n="linear",o='x="0" y="0" width="1" height="1"',p=!0,q={compress:!1},r=a.toCSS(q);switch(r){case"to bottom":f='x1="0%" y1="0%" x2="0%" y2="100%"';break;case"to right":f='x1="0%" y1="0%" x2="100%" y2="0%"';break;case"to bottom right":f='x1="0%" y1="0%" x2="100%" y2="100%"';break;case"to top right":f='x1="0%" y1="100%" x2="100%" y2="0%"';break;case"ellipse":case"ellipse at center":n="radial",f='cx="50%" cy="50%" r="75%"',o='x="-50" y="-50" width="101" height="101"';break;default:throw{type:"Argument",message:"svg-gradient direction must be 'to bottom', 'to right', 'to bottom right', 'to top right' or 'ellipse at center'"}}for(g='<?xml version="1.0" ?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" viewBox="0 0 1 1" preserveAspectRatio="none"><'+n+'Gradient id="gradient" gradientUnits="userSpaceOnUse" '+f+">",h=0;h<m.length;h+=1)m[h].value?(i=m[h].value[0],j=m[h].value[1]):(i=m[h],j=b),i instanceof d.Color&&((0===h||h+1===m.length)&&j===b||j instanceof d.Dimension)||e(),k=j?j.toCSS(q):0===h?"0%":"100%",l=i.alpha,g+='<stop offset="'+k+'" stop-color="'+i.toRGB()+'"'+(1>l?' stop-opacity="'+l+'"':"")+"/>";if(g+="</"+n+"Gradient><rect "+o+' fill="url(#gradient)" /></svg>',p)try{g=c("./encoder").encodeBase64(g)}catch(s){p=!1}return g="'data:image/svg+xml"+(p?";base64":"")+","+g+"'",new d.URL(new d.Anonymous(g))}},d._mime={_types:{".htm":"text/html",".html":"text/html",".gif":"image/gif",".jpg":"image/jpeg",".jpeg":"image/jpeg",".png":"image/png"},lookup:function(a){var e=c("path").extname(a),f=d._mime._types[e];if(f===b)throw new Error('Optional dependency "mime" is required for '+e);return f},charsets:{lookup:function(a){return a&&/^text\//.test(a)?"UTF-8":""}}};var l={ceil:null,floor:null,sqrt:null,abs:null,tan:"",sin:"",cos:"",atan:"rad",asin:"rad",acos:"rad"},m={multiply:function(a,b){return a*b},screen:function(a,b){return a+b-a*b},overlay:function(a,b){return a*=2,1>=a?m.multiply(a,b):m.screen(a-1,b)},softlight:function(a,b){var c=1,d=a;return b>.5&&(d=1,c=a>.25?Math.sqrt(a):((16*a-12)*a+4)*a),a-(1-2*b)*d*(c-a)},hardlight:function(a,b){return m.overlay(b,a)},difference:function(a,b){return Math.abs(a-b)},exclusion:function(a,b){return a+b-2*a*b},average:function(a,b){return(a+b)/2},negation:function(a,b){return 1-Math.abs(a+b-1)}};d.defaultFunc={eval:function(){var a=this.value_,b=this.error_;if(b)throw b;return null!=a?a?d.True:d.False:void 0},value:function(a){this.value_=a},error:function(a){this.error_=a},reset:function(){this.value_=this.error_=null}},g(),d.fround=function(a,b){var c=a&&a.numPrecision;return null==c?b:Number((b+2e-16).toFixed(c))},d.functionCall=function(a,b){this.env=a,this.currentFileInfo=b},d.functionCall.prototype=d.functions}(c("./tree")),function(a){a.colors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370d8",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#d87093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"}}(c("./tree")),function(a){a.debugInfo=function(b,c,d){var e="";if(b.dumpLineNumbers&&!b.compress)switch(b.dumpLineNumbers){case"comments":e=a.debugInfo.asComment(c);break;case"mediaquery":e=a.debugInfo.asMediaQuery(c);break;case"all":e=a.debugInfo.asComment(c)+(d||"")+a.debugInfo.asMediaQuery(c)}return e},a.debugInfo.asComment=function(a){return"/* line "+a.debugInfo.lineNumber+", "+a.debugInfo.fileName+" */\n"},a.debugInfo.asMediaQuery=function(a){return"@media -sass-debug-info{filename{font-family:"+("file://"+a.debugInfo.fileName).replace(/([.:\/\\])/g,function(a){return"\\"==a&&(a="/"),"\\"+a})+"}line{font-family:\\00003"+a.debugInfo.lineNumber+"}}\n"},a.find=function(a,b){for(var c,d=0;d<a.length;d++)if(c=b.call(a,a[d]))return c;return null},a.jsify=function(a){return Array.isArray(a.value)&&a.value.length>1?"["+a.value.map(function(a){return a.toCSS()}).join(", ")+"]":a.toCSS()},a.toCSS=function(a){var b=[];return this.genCSS(a,{add:function(a){b.push(a)},isEmpty:function(){return 0===b.length}}),b.join("")},a.outputRuleset=function(a,b,c){var d,e=c.length;if(a.tabLevel=(0|a.tabLevel)+1,a.compress){for(b.add("{"),d=0;e>d;d++)c[d].genCSS(a,b);return b.add("}"),void a.tabLevel--}var f="\n"+Array(a.tabLevel).join("  "),g=f+"  ";if(e){for(b.add(" {"+g),c[0].genCSS(a,b),d=1;e>d;d++)b.add(g),c[d].genCSS(a,b);b.add(f+"}")}else b.add(" {"+f+"}");a.tabLevel--}}(c("./tree")),function(a){a.Alpha=function(a){this.value=a},a.Alpha.prototype={type:"Alpha",accept:function(a){this.value=a.visit(this.value)},eval:function(b){return this.value.eval?new a.Alpha(this.value.eval(b)):this},genCSS:function(a,b){b.add("alpha(opacity="),this.value.genCSS?this.value.genCSS(a,b):b.add(this.value),b.add(")")},toCSS:a.toCSS}}(c("../tree")),function(a){a.Anonymous=function(a,b,c,d,e){this.value=a,this.index=b,this.mapLines=d,this.currentFileInfo=c,this.rulesetLike="undefined"==typeof e?!1:e},a.Anonymous.prototype={type:"Anonymous",eval:function(){return new a.Anonymous(this.value,this.index,this.currentFileInfo,this.mapLines,this.rulesetLike)},compare:function(a){if(!a.toCSS)return-1;var b=this.toCSS(),c=a.toCSS();return b===c?0:c>b?-1:1},isRulesetLike:function(){return this.rulesetLike},genCSS:function(a,b){b.add(this.value,this.currentFileInfo,this.index,this.mapLines)},toCSS:a.toCSS}}(c("../tree")),function(a){a.Assignment=function(a,b){this.key=a,this.value=b},a.Assignment.prototype={type:"Assignment",accept:function(a){this.value=a.visit(this.value)},eval:function(b){return this.value.eval?new a.Assignment(this.key,this.value.eval(b)):this},genCSS:function(a,b){b.add(this.key+"="),this.value.genCSS?this.value.genCSS(a,b):b.add(this.value)},toCSS:a.toCSS}}(c("../tree")),function(a){a.Call=function(a,b,c,d){this.name=a,this.args=b,this.index=c,this.currentFileInfo=d},a.Call.prototype={type:"Call",accept:function(a){this.args&&(this.args=a.visitArray(this.args))},eval:function(b){var c,d,e=this.args.map(function(a){return a.eval(b)}),f=this.name.toLowerCase();if(f in a.functions)try{if(d=new a.functionCall(b,this.currentFileInfo),c=d[f].apply(d,e),null!=c)return c}catch(g){throw{type:g.type||"Runtime",message:"error evaluating function `"+this.name+"`"+(g.message?": "+g.message:""),index:this.index,filename:this.currentFileInfo.filename}}return new a.Call(this.name,e,this.index,this.currentFileInfo)},genCSS:function(a,b){b.add(this.name+"(",this.currentFileInfo,this.index);for(var c=0;c<this.args.length;c++)this.args[c].genCSS(a,b),c+1<this.args.length&&b.add(", ");b.add(")")},toCSS:a.toCSS}}(c("../tree")),function(a){function b(a){return"#"+a.map(function(a){return a=c(Math.round(a),255),(16>a?"0":"")+a.toString(16)}).join("")}function c(a,b){return Math.min(Math.max(a,0),b)}a.Color=function(a,b){this.rgb=Array.isArray(a)?a:6==a.length?a.match(/.{2}/g).map(function(a){return parseInt(a,16)}):a.split("").map(function(a){return parseInt(a+a,16)}),this.alpha="number"==typeof b?b:1};var d="transparent";a.Color.prototype={type:"Color",eval:function(){return this},luma:function(){var a=this.rgb[0]/255,b=this.rgb[1]/255,c=this.rgb[2]/255;return a=.03928>=a?a/12.92:Math.pow((a+.055)/1.055,2.4),b=.03928>=b?b/12.92:Math.pow((b+.055)/1.055,2.4),c=.03928>=c?c/12.92:Math.pow((c+.055)/1.055,2.4),.2126*a+.7152*b+.0722*c},genCSS:function(a,b){b.add(this.toCSS(a))},toCSS:function(b,e){var f=b&&b.compress&&!e,g=a.fround(b,this.alpha);if(1>g)return 0===g&&this.isTransparentKeyword?d:"rgba("+this.rgb.map(function(a){return c(Math.round(a),255)}).concat(c(g,1)).join(","+(f?"":" "))+")";var h=this.toRGB();if(f){var i=h.split("");i[1]===i[2]&&i[3]===i[4]&&i[5]===i[6]&&(h="#"+i[1]+i[3]+i[5])}return h},operate:function(b,c,d){for(var e=[],f=this.alpha*(1-d.alpha)+d.alpha,g=0;3>g;g++)e[g]=a.operate(b,c,this.rgb[g],d.rgb[g]);return new a.Color(e,f)},toRGB:function(){return b(this.rgb)},toHSL:function(){var a,b,c=this.rgb[0]/255,d=this.rgb[1]/255,e=this.rgb[2]/255,f=this.alpha,g=Math.max(c,d,e),h=Math.min(c,d,e),i=(g+h)/2,j=g-h;if(g===h)a=b=0;else{switch(b=i>.5?j/(2-g-h):j/(g+h),g){case c:a=(d-e)/j+(e>d?6:0);break;case d:a=(e-c)/j+2;break;case e:a=(c-d)/j+4}a/=6}return{h:360*a,s:b,l:i,a:f}},toHSV:function(){var a,b,c=this.rgb[0]/255,d=this.rgb[1]/255,e=this.rgb[2]/255,f=this.alpha,g=Math.max(c,d,e),h=Math.min(c,d,e),i=g,j=g-h;if(b=0===g?0:j/g,g===h)a=0;else{switch(g){case c:a=(d-e)/j+(e>d?6:0);break;case d:a=(e-c)/j+2;break;case e:a=(c-d)/j+4}a/=6}return{h:360*a,s:b,v:i,a:f}},toARGB:function(){return b([255*this.alpha].concat(this.rgb))},compare:function(a){return a.rgb&&a.rgb[0]===this.rgb[0]&&a.rgb[1]===this.rgb[1]&&a.rgb[2]===this.rgb[2]&&a.alpha===this.alpha?0:-1}},a.Color.fromKeyword=function(b){if(b=b.toLowerCase(),a.colors.hasOwnProperty(b))return new a.Color(a.colors[b].slice(1));if(b===d){var c=new a.Color([0,0,0],0);return c.isTransparentKeyword=!0,c}}}(c("../tree")),function(a){a.Comment=function(a,b,c,d){this.value=a,this.silent=!!b,this.currentFileInfo=d},a.Comment.prototype={type:"Comment",genCSS:function(b,c){this.debugInfo&&c.add(a.debugInfo(b,this),this.currentFileInfo,this.index),c.add(this.value.trim())},toCSS:a.toCSS,isSilent:function(a){var b=this.currentFileInfo&&this.currentFileInfo.reference&&!this.isReferenced,c=a.compress&&!this.value.match(/^\/\*!/);return this.silent||b||c},eval:function(){return this},markReferenced:function(){this.isReferenced=!0}}}(c("../tree")),function(a){a.Condition=function(a,b,c,d,e){this.op=a.trim(),this.lvalue=b,this.rvalue=c,this.index=d,this.negate=e},a.Condition.prototype={type:"Condition",accept:function(a){this.lvalue=a.visit(this.lvalue),this.rvalue=a.visit(this.rvalue)},eval:function(a){var b,c=this.lvalue.eval(a),d=this.rvalue.eval(a),e=this.index;return b=function(a){switch(a){case"and":return c&&d;case"or":return c||d;default:if(c.compare)b=c.compare(d);else{if(!d.compare)throw{type:"Type",message:"Unable to perform comparison",index:e};b=d.compare(c)}switch(b){case-1:return"<"===a||"=<"===a||"<="===a;case 0:return"="===a||">="===a||"=<"===a||"<="===a;case 1:return">"===a||">="===a}}}(this.op),this.negate?!b:b}}}(c("../tree")),function(a){a.DetachedRuleset=function(a,b){this.ruleset=a,this.frames=b},a.DetachedRuleset.prototype={type:"DetachedRuleset",accept:function(a){this.ruleset=a.visit(this.ruleset)},eval:function(b){var c=this.frames||b.frames.slice(0);return new a.DetachedRuleset(this.ruleset,c)},callEval:function(b){return this.ruleset.eval(this.frames?new a.evalEnv(b,this.frames.concat(b.frames)):b)}}}(c("../tree")),function(a){a.Dimension=function(c,d){this.value=parseFloat(c),this.unit=d&&d instanceof a.Unit?d:new a.Unit(d?[d]:b)},a.Dimension.prototype={type:"Dimension",accept:function(a){this.unit=a.visit(this.unit)},eval:function(){return this},toColor:function(){return new a.Color([this.value,this.value,this.value])},genCSS:function(b,c){if(b&&b.strictUnits&&!this.unit.isSingular())throw new Error("Multiple units in dimension. Correct the units or use the unit function. Bad unit: "+this.unit.toString());var d=a.fround(b,this.value),e=String(d);if(0!==d&&1e-6>d&&d>-1e-6&&(e=d.toFixed(20).replace(/0+$/,"")),b&&b.compress){if(0===d&&this.unit.isLength())return void c.add(e);d>0&&1>d&&(e=e.substr(1))}c.add(e),this.unit.genCSS(b,c)},toCSS:a.toCSS,operate:function(b,c,d){var e=a.operate(b,c,this.value,d.value),f=this.unit.clone();if("+"===c||"-"===c)if(0===f.numerator.length&&0===f.denominator.length)f.numerator=d.unit.numerator.slice(0),f.denominator=d.unit.denominator.slice(0);else if(0===d.unit.numerator.length&&0===f.denominator.length);else{if(d=d.convertTo(this.unit.usedUnits()),b.strictUnits&&d.unit.toString()!==f.toString())throw new Error("Incompatible units. Change the units or use the unit function. Bad units: '"+f.toString()+"' and '"+d.unit.toString()+"'.");e=a.operate(b,c,this.value,d.value)}else"*"===c?(f.numerator=f.numerator.concat(d.unit.numerator).sort(),f.denominator=f.denominator.concat(d.unit.denominator).sort(),f.cancel()):"/"===c&&(f.numerator=f.numerator.concat(d.unit.denominator).sort(),f.denominator=f.denominator.concat(d.unit.numerator).sort(),f.cancel());return new a.Dimension(e,f)},compare:function(b){if(b instanceof a.Dimension){var c,d,e,f;if(this.unit.isEmpty()||b.unit.isEmpty())c=this,d=b;else if(c=this.unify(),d=b.unify(),0!==c.unit.compare(d.unit))return-1;return e=c.value,f=d.value,f>e?-1:e>f?1:0}return-1},unify:function(){return this.convertTo({length:"px",duration:"s",angle:"rad"})},convertTo:function(b){var c,d,e,f,g,h=this.value,i=this.unit.clone(),j={};if("string"==typeof b){for(c in a.UnitConversions)a.UnitConversions[c].hasOwnProperty(b)&&(j={},j[c]=b);b=j}g=function(a,b){return e.hasOwnProperty(a)?(b?h/=e[a]/e[f]:h*=e[a]/e[f],f):a};for(d in b)b.hasOwnProperty(d)&&(f=b[d],e=a.UnitConversions[d],i.map(g));return i.cancel(),new a.Dimension(h,i)}},a.UnitConversions={length:{m:1,cm:.01,mm:.001,"in":.0254,px:.0254/96,pt:.0254/72,pc:.0254/72*12},duration:{s:1,ms:.001},angle:{rad:1/(2*Math.PI),deg:1/360,grad:.0025,turn:1}},a.Unit=function(a,b,c){this.numerator=a?a.slice(0).sort():[],this.denominator=b?b.slice(0).sort():[],this.backupUnit=c},a.Unit.prototype={type:"Unit",clone:function(){return new a.Unit(this.numerator.slice(0),this.denominator.slice(0),this.backupUnit)},genCSS:function(a,b){this.numerator.length>=1?b.add(this.numerator[0]):this.denominator.length>=1?b.add(this.denominator[0]):a&&a.strictUnits||!this.backupUnit||b.add(this.backupUnit)},toCSS:a.toCSS,toString:function(){var a,b=this.numerator.join("*");for(a=0;a<this.denominator.length;a++)b+="/"+this.denominator[a];return b},compare:function(a){return this.is(a.toString())?0:-1},is:function(a){return this.toString()===a},isLength:function(){return Boolean(this.toCSS().match(/px|em|%|in|cm|mm|pc|pt|ex/))},isEmpty:function(){return 0===this.numerator.length&&0===this.denominator.length},isSingular:function(){return this.numerator.length<=1&&0===this.denominator.length},map:function(a){var b;for(b=0;b<this.numerator.length;b++)this.numerator[b]=a(this.numerator[b],!1);for(b=0;b<this.denominator.length;b++)this.denominator[b]=a(this.denominator[b],!0)},usedUnits:function(){var b,c,d={};c=function(a){return b.hasOwnProperty(a)&&!d[e]&&(d[e]=a),a};for(var e in a.UnitConversions)a.UnitConversions.hasOwnProperty(e)&&(b=a.UnitConversions[e],this.map(c));return d},cancel:function(){var a,b,c,d={};for(b=0;b<this.numerator.length;b++)a=this.numerator[b],c||(c=a),d[a]=(d[a]||0)+1;for(b=0;b<this.denominator.length;b++)a=this.denominator[b],c||(c=a),d[a]=(d[a]||0)-1;this.numerator=[],this.denominator=[];for(a in d)if(d.hasOwnProperty(a)){var e=d[a];if(e>0)for(b=0;e>b;b++)this.numerator.push(a);else if(0>e)for(b=0;-e>b;b++)this.denominator.push(a)}0===this.numerator.length&&0===this.denominator.length&&c&&(this.backupUnit=c),this.numerator.sort(),this.denominator.sort()}}}(c("../tree")),function(a){a.Directive=function(a,b,c,d,e,f){this.name=a,this.value=b,c&&(this.rules=c,this.rules.allowImports=!0),this.index=d,this.currentFileInfo=e,this.debugInfo=f},a.Directive.prototype={type:"Directive",accept:function(a){var b=this.value,c=this.rules;c&&(c=a.visit(c)),b&&(b=a.visit(b))},isRulesetLike:function(){return!this.isCharset()},isCharset:function(){return"@charset"===this.name},genCSS:function(b,c){var d=this.value,e=this.rules;c.add(this.name,this.currentFileInfo,this.index),d&&(c.add(" "),d.genCSS(b,c)),e?a.outputRuleset(b,c,[e]):c.add(";")},toCSS:a.toCSS,eval:function(b){var c=this.value,d=this.rules;return c&&(c=c.eval(b)),d&&(d=d.eval(b),d.root=!0),new a.Directive(this.name,c,d,this.index,this.currentFileInfo,this.debugInfo)},variable:function(b){return this.rules?a.Ruleset.prototype.variable.call(this.rules,b):void 0},find:function(){return this.rules?a.Ruleset.prototype.find.apply(this.rules,arguments):void 0},rulesets:function(){return this.rules?a.Ruleset.prototype.rulesets.apply(this.rules):void 0},markReferenced:function(){var a,b;if(this.isReferenced=!0,this.rules)for(b=this.rules.rules,a=0;a<b.length;a++)b[a].markReferenced&&b[a].markReferenced()}}}(c("../tree")),function(a){a.Element=function(b,c,d,e){this.combinator=b instanceof a.Combinator?b:new a.Combinator(b),this.value="string"==typeof c?c.trim():c?c:"",this.index=d,this.currentFileInfo=e},a.Element.prototype={type:"Element",accept:function(a){var b=this.value;this.combinator=a.visit(this.combinator),"object"==typeof b&&(this.value=a.visit(b))},eval:function(b){return new a.Element(this.combinator,this.value.eval?this.value.eval(b):this.value,this.index,this.currentFileInfo)},genCSS:function(a,b){b.add(this.toCSS(a),this.currentFileInfo,this.index)},toCSS:function(a){var b=this.value.toCSS?this.value.toCSS(a):this.value;return""===b&&"&"===this.combinator.value.charAt(0)?"":this.combinator.toCSS(a||{})+b}},a.Attribute=function(a,b,c){this.key=a,this.op=b,this.value=c},a.Attribute.prototype={type:"Attribute",eval:function(b){return new a.Attribute(this.key.eval?this.key.eval(b):this.key,this.op,this.value&&this.value.eval?this.value.eval(b):this.value)},genCSS:function(a,b){b.add(this.toCSS(a))},toCSS:function(a){var b=this.key.toCSS?this.key.toCSS(a):this.key;return this.op&&(b+=this.op,b+=this.value.toCSS?this.value.toCSS(a):this.value),"["+b+"]"}},a.Combinator=function(a){this.value=" "===a?" ":a?a.trim():""},a.Combinator.prototype={type:"Combinator",_noSpaceCombinators:{"":!0," ":!0,"|":!0},genCSS:function(a,b){var c=a.compress||this._noSpaceCombinators[this.value]?"":" ";b.add(c+this.value+c)},toCSS:a.toCSS}}(c("../tree")),function(a){a.Expression=function(a){this.value=a},a.Expression.prototype={type:"Expression",accept:function(a){this.value&&(this.value=a.visitArray(this.value))},eval:function(b){var c,d=this.parens&&!this.parensInOp,e=!1;return d&&b.inParenthesis(),this.value.length>1?c=new a.Expression(this.value.map(function(a){return a.eval(b)})):1===this.value.length?(this.value[0].parens&&!this.value[0].parensInOp&&(e=!0),c=this.value[0].eval(b)):c=this,d&&b.outOfParenthesis(),this.parens&&this.parensInOp&&!b.isMathOn()&&!e&&(c=new a.Paren(c)),c},genCSS:function(a,b){for(var c=0;c<this.value.length;c++)this.value[c].genCSS(a,b),c+1<this.value.length&&b.add(" ")},toCSS:a.toCSS,throwAwayComments:function(){this.value=this.value.filter(function(b){return!(b instanceof a.Comment)})}}}(c("../tree")),function(a){a.Extend=function(b,c,d){switch(this.selector=b,this.option=c,this.index=d,this.object_id=a.Extend.next_id++,this.parent_ids=[this.object_id],c){case"all":this.allowBefore=!0,this.allowAfter=!0;break;default:this.allowBefore=!1,this.allowAfter=!1}},a.Extend.next_id=0,a.Extend.prototype={type:"Extend",accept:function(a){this.selector=a.visit(this.selector)},eval:function(b){return new a.Extend(this.selector.eval(b),this.option,this.index)},clone:function(){return new a.Extend(this.selector,this.option,this.index)},findSelfSelectors:function(a){var b,c,d=[];for(b=0;b<a.length;b++)c=a[b].elements,b>0&&c.length&&""===c[0].combinator.value&&(c[0].combinator.value=" "),d=d.concat(a[b].elements);this.selfSelectors=[{elements:d}]}}}(c("../tree")),function(a){a.Import=function(a,c,d,e,f){if(this.options=d,this.index=e,this.path=a,this.features=c,this.currentFileInfo=f,this.options.less!==b||this.options.inline)this.css=!this.options.less||this.options.inline;else{var g=this.getPath();g&&/css([\?;].*)?$/.test(g)&&(this.css=!0)}},a.Import.prototype={type:"Import",accept:function(a){this.features&&(this.features=a.visit(this.features)),this.path=a.visit(this.path),!this.options.inline&&this.root&&(this.root=a.visit(this.root))},genCSS:function(a,b){this.css&&(b.add("@import ",this.currentFileInfo,this.index),this.path.genCSS(a,b),this.features&&(b.add(" "),this.features.genCSS(a,b)),b.add(";"))},toCSS:a.toCSS,getPath:function(){if(this.path instanceof a.Quoted){var c=this.path.value;return this.css!==b||/(\.[a-z]*$)|([\?;].*)$/.test(c)?c:c+".less"}return this.path instanceof a.URL?this.path.value.value:null},evalForImport:function(b){return new a.Import(this.path.eval(b),this.features,this.options,this.index,this.currentFileInfo)},evalPath:function(b){var c=this.path.eval(b),d=this.currentFileInfo&&this.currentFileInfo.rootpath;if(!(c instanceof a.URL)){if(d){var e=c.value;e&&b.isPathRelative(e)&&(c.value=d+e)}c.value=b.normalizePath(c.value)}return c},eval:function(b){var c,d=this.features&&this.features.eval(b);if(this.skip&&("function"==typeof this.skip&&(this.skip=this.skip()),this.skip))return[];if(this.options.inline){var e=new a.Anonymous(this.root,0,{filename:this.importedFilename},!0,!0);return this.features?new a.Media([e],this.features.value):[e]}if(this.css){var f=new a.Import(this.evalPath(b),d,this.options,this.index);if(!f.css&&this.error)throw this.error;return f}return c=new a.Ruleset(null,this.root.rules.slice(0)),c.evalImports(b),this.features?new a.Media(c.rules,this.features.value):c.rules}}}(c("../tree")),function(a){a.JavaScript=function(a,b,c){this.escaped=c,this.expression=a,this.index=b},a.JavaScript.prototype={type:"JavaScript",eval:function(b){var c,d=this,e={},f=this.expression.replace(/@\{([\w-]+)\}/g,function(c,e){return a.jsify(new a.Variable("@"+e,d.index).eval(b))});try{f=new Function("return ("+f+")")}catch(g){throw{message:"JavaScript evaluation error: "+g.message+" from `"+f+"`",index:this.index}}var h=b.frames[0].variables();for(var i in h)h.hasOwnProperty(i)&&(e[i.slice(1)]={value:h[i].value,toJS:function(){return this.value.eval(b).toCSS()}});try{c=f.call(e)}catch(g){throw{message:"JavaScript evaluation error: '"+g.name+": "+g.message.replace(/["]/g,"'")+"'",index:this.index}}return"number"==typeof c?new a.Dimension(c):"string"==typeof c?new a.Quoted('"'+c+'"',c,this.escaped,this.index):new a.Anonymous(Array.isArray(c)?c.join(", "):c)}}}(c("../tree")),function(a){a.Keyword=function(a){this.value=a},a.Keyword.prototype={type:"Keyword",eval:function(){return this},genCSS:function(a,b){if("%"===this.value)throw{type:"Syntax",message:"Invalid % without number"};b.add(this.value)},toCSS:a.toCSS,compare:function(b){return b instanceof a.Keyword?b.value===this.value?0:1:-1}},a.True=new a.Keyword("true"),a.False=new a.Keyword("false")}(c("../tree")),function(a){a.Media=function(b,c,d,e){this.index=d,this.currentFileInfo=e;var f=this.emptySelectors();this.features=new a.Value(c),this.rules=[new a.Ruleset(f,b)],this.rules[0].allowImports=!0},a.Media.prototype={type:"Media",accept:function(a){this.features&&(this.features=a.visit(this.features)),this.rules&&(this.rules=a.visitArray(this.rules))},genCSS:function(b,c){c.add("@media ",this.currentFileInfo,this.index),this.features.genCSS(b,c),a.outputRuleset(b,c,this.rules)},toCSS:a.toCSS,eval:function(b){b.mediaBlocks||(b.mediaBlocks=[],b.mediaPath=[]);var c=new a.Media(null,[],this.index,this.currentFileInfo);this.debugInfo&&(this.rules[0].debugInfo=this.debugInfo,c.debugInfo=this.debugInfo);var d=!1;b.strictMath||(d=!0,b.strictMath=!0);try{c.features=this.features.eval(b)}finally{d&&(b.strictMath=!1)}return b.mediaPath.push(c),b.mediaBlocks.push(c),b.frames.unshift(this.rules[0]),c.rules=[this.rules[0].eval(b)],b.frames.shift(),b.mediaPath.pop(),0===b.mediaPath.length?c.evalTop(b):c.evalNested(b)},variable:function(b){return a.Ruleset.prototype.variable.call(this.rules[0],b)},find:function(){return a.Ruleset.prototype.find.apply(this.rules[0],arguments)},rulesets:function(){return a.Ruleset.prototype.rulesets.apply(this.rules[0])},emptySelectors:function(){var b=new a.Element("","&",this.index,this.currentFileInfo),c=[new a.Selector([b],null,null,this.index,this.currentFileInfo)];return c[0].mediaEmpty=!0,c},markReferenced:function(){var a,b=this.rules[0].rules;for(this.rules[0].markReferenced(),this.isReferenced=!0,a=0;a<b.length;a++)b[a].markReferenced&&b[a].markReferenced()},evalTop:function(b){var c=this;if(b.mediaBlocks.length>1){var d=this.emptySelectors();c=new a.Ruleset(d,b.mediaBlocks),c.multiMedia=!0}return delete b.mediaBlocks,delete b.mediaPath,c},evalNested:function(b){var c,d,e=b.mediaPath.concat([this]);for(c=0;c<e.length;c++)d=e[c].features instanceof a.Value?e[c].features.value:e[c].features,e[c]=Array.isArray(d)?d:[d];return this.features=new a.Value(this.permute(e).map(function(b){for(b=b.map(function(b){return b.toCSS?b:new a.Anonymous(b)}),c=b.length-1;c>0;c--)b.splice(c,0,new a.Anonymous("and"));return new a.Expression(b)})),new a.Ruleset([],[])},permute:function(a){if(0===a.length)return[];
if(1===a.length)return a[0];for(var b=[],c=this.permute(a.slice(1)),d=0;d<c.length;d++)for(var e=0;e<a[0].length;e++)b.push([a[0][e]].concat(c[d]));return b},bubbleSelectors:function(b){b&&(this.rules=[new a.Ruleset(b.slice(0),[this.rules[0]])])}}}(c("../tree")),function(a){a.mixin={},a.mixin.Call=function(b,c,d,e,f){this.selector=new a.Selector(b),this.arguments=c&&c.length?c:null,this.index=d,this.currentFileInfo=e,this.important=f},a.mixin.Call.prototype={type:"MixinCall",accept:function(a){this.selector&&(this.selector=a.visit(this.selector)),this.arguments&&(this.arguments=a.visitArray(this.arguments))},eval:function(b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p=[],q=!1,r=[],s=[],t=a.defaultFunc,u=0,v=1,w=2;for(e=this.arguments&&this.arguments.map(function(a){return{name:a.name,value:a.value.eval(b)}}),f=0;f<b.frames.length;f++)if((c=b.frames[f].find(this.selector)).length>0){for(j=!0,g=0;g<c.length;g++){for(d=c[g],i=!1,h=0;h<b.frames.length;h++)if(!(d instanceof a.mixin.Definition)&&d===(b.frames[h].originalRuleset||b.frames[h])){i=!0;break}if(!i&&d.matchArgs(e,b)){if(l={mixin:d,group:u},d.matchCondition){for(h=0;2>h;h++)t.value(h),s[h]=d.matchCondition(e,b);(s[0]||s[1])&&(s[0]!=s[1]&&(l.group=s[1]?v:w),r.push(l))}else r.push(l);q=!0}}for(t.reset(),n=[0,0,0],g=0;g<r.length;g++)n[r[g].group]++;if(n[u]>0)m=w;else if(m=v,n[v]+n[w]>1)throw{type:"Runtime",message:"Ambiguous use of `default()` found when matching for `"+this.format(e)+"`",index:this.index,filename:this.currentFileInfo.filename};for(g=0;g<r.length;g++)if(l=r[g].group,l===u||l===m)try{d=r[g].mixin,d instanceof a.mixin.Definition||(o=d.originalRuleset||d,d=new a.mixin.Definition("",[],d.rules,null,!1),d.originalRuleset=o),Array.prototype.push.apply(p,d.evalCall(b,e,this.important).rules)}catch(x){throw{message:x.message,index:this.index,filename:this.currentFileInfo.filename,stack:x.stack}}if(q){if(!this.currentFileInfo||!this.currentFileInfo.reference)for(f=0;f<p.length;f++)k=p[f],k.markReferenced&&k.markReferenced();return p}}throw j?{type:"Runtime",message:"No matching definition was found for `"+this.format(e)+"`",index:this.index,filename:this.currentFileInfo.filename}:{type:"Name",message:this.selector.toCSS().trim()+" is undefined",index:this.index,filename:this.currentFileInfo.filename}},format:function(a){return this.selector.toCSS().trim()+"("+(a?a.map(function(a){var b="";return a.name&&(b+=a.name+":"),b+=a.value.toCSS?a.value.toCSS():"???"}).join(", "):"")+")"}},a.mixin.Definition=function(b,c,d,e,f,g){this.name=b,this.selectors=[new a.Selector([new a.Element(null,b,this.index,this.currentFileInfo)])],this.params=c,this.condition=e,this.variadic=f,this.arity=c.length,this.rules=d,this._lookups={},this.required=c.reduce(function(a,b){return!b.name||b.name&&!b.value?a+1:a},0),this.parent=a.Ruleset.prototype,this.frames=g},a.mixin.Definition.prototype={type:"MixinDefinition",accept:function(a){this.params&&this.params.length&&(this.params=a.visitArray(this.params)),this.rules=a.visitArray(this.rules),this.condition&&(this.condition=a.visit(this.condition))},variable:function(a){return this.parent.variable.call(this,a)},variables:function(){return this.parent.variables.call(this)},find:function(){return this.parent.find.apply(this,arguments)},rulesets:function(){return this.parent.rulesets.apply(this)},evalParams:function(b,c,d,e){var f,g,h,i,j,k,l,m,n=new a.Ruleset(null,null),o=this.params.slice(0),p=0;if(c=new a.evalEnv(c,[n].concat(c.frames)),d)for(d=d.slice(0),p=d.length,h=0;p>h;h++)if(g=d[h],k=g&&g.name){for(l=!1,i=0;i<o.length;i++)if(!e[i]&&k===o[i].name){e[i]=g.value.eval(b),n.prependRule(new a.Rule(k,g.value.eval(b))),l=!0;break}if(l){d.splice(h,1),h--;continue}throw{type:"Runtime",message:"Named argument for "+this.name+" "+d[h].name+" not found"}}for(m=0,h=0;h<o.length;h++)if(!e[h]){if(g=d&&d[m],k=o[h].name)if(o[h].variadic){for(f=[],i=m;p>i;i++)f.push(d[i].value.eval(b));n.prependRule(new a.Rule(k,new a.Expression(f).eval(b)))}else{if(j=g&&g.value)j=j.eval(b);else{if(!o[h].value)throw{type:"Runtime",message:"wrong number of arguments for "+this.name+" ("+p+" for "+this.arity+")"};j=o[h].value.eval(c),n.resetCache()}n.prependRule(new a.Rule(k,j)),e[h]=j}if(o[h].variadic&&d)for(i=m;p>i;i++)e[i]=d[i].value.eval(b);m++}return n},eval:function(b){return new a.mixin.Definition(this.name,this.params,this.rules,this.condition,this.variadic,this.frames||b.frames.slice(0))},evalCall:function(b,c,d){var e,f,g=[],h=this.frames?this.frames.concat(b.frames):b.frames,i=this.evalParams(b,new a.evalEnv(b,h),c,g);return i.prependRule(new a.Rule("@arguments",new a.Expression(g).eval(b))),e=this.rules.slice(0),f=new a.Ruleset(null,e),f.originalRuleset=this,f=f.eval(new a.evalEnv(b,[this,i].concat(h))),d&&(f=this.parent.makeImportant.apply(f)),f},matchCondition:function(b,c){return this.condition&&!this.condition.eval(new a.evalEnv(c,[this.evalParams(c,new a.evalEnv(c,this.frames?this.frames.concat(c.frames):c.frames),b,[])].concat(this.frames).concat(c.frames)))?!1:!0},matchArgs:function(a,b){var c,d=a&&a.length||0;if(this.variadic){if(d<this.required-1)return!1}else{if(d<this.required)return!1;if(d>this.params.length)return!1}c=Math.min(d,this.arity);for(var e=0;c>e;e++)if(!this.params[e].name&&!this.params[e].variadic&&a[e].value.eval(b).toCSS()!=this.params[e].value.eval(b).toCSS())return!1;return!0}}}(c("../tree")),function(a){a.Negative=function(a){this.value=a},a.Negative.prototype={type:"Negative",accept:function(a){this.value=a.visit(this.value)},genCSS:function(a,b){b.add("-"),this.value.genCSS(a,b)},toCSS:a.toCSS,eval:function(b){return b.isMathOn()?new a.Operation("*",[new a.Dimension(-1),this.value]).eval(b):new a.Negative(this.value.eval(b))}}}(c("../tree")),function(a){a.Operation=function(a,b,c){this.op=a.trim(),this.operands=b,this.isSpaced=c},a.Operation.prototype={type:"Operation",accept:function(a){this.operands=a.visit(this.operands)},eval:function(b){var c=this.operands[0].eval(b),d=this.operands[1].eval(b);if(b.isMathOn()){if(c instanceof a.Dimension&&d instanceof a.Color&&(c=c.toColor()),d instanceof a.Dimension&&c instanceof a.Color&&(d=d.toColor()),!c.operate)throw{type:"Operation",message:"Operation on an invalid type"};return c.operate(b,this.op,d)}return new a.Operation(this.op,[c,d],this.isSpaced)},genCSS:function(a,b){this.operands[0].genCSS(a,b),this.isSpaced&&b.add(" "),b.add(this.op),this.isSpaced&&b.add(" "),this.operands[1].genCSS(a,b)},toCSS:a.toCSS},a.operate=function(a,b,c,d){switch(b){case"+":return c+d;case"-":return c-d;case"*":return c*d;case"/":return c/d}}}(c("../tree")),function(a){a.Paren=function(a){this.value=a},a.Paren.prototype={type:"Paren",accept:function(a){this.value=a.visit(this.value)},genCSS:function(a,b){b.add("("),this.value.genCSS(a,b),b.add(")")},toCSS:a.toCSS,eval:function(b){return new a.Paren(this.value.eval(b))}}}(c("../tree")),function(a){a.Quoted=function(a,b,c,d,e){this.escaped=c,this.value=b||"",this.quote=a.charAt(0),this.index=d,this.currentFileInfo=e},a.Quoted.prototype={type:"Quoted",genCSS:function(a,b){this.escaped||b.add(this.quote,this.currentFileInfo,this.index),b.add(this.value),this.escaped||b.add(this.quote)},toCSS:a.toCSS,eval:function(b){var c=this,d=this.value.replace(/`([^`]+)`/g,function(d,e){return new a.JavaScript(e,c.index,!0).eval(b).value}).replace(/@\{([\w-]+)\}/g,function(d,e){var f=new a.Variable("@"+e,c.index,c.currentFileInfo).eval(b,!0);return f instanceof a.Quoted?f.value:f.toCSS()});return new a.Quoted(this.quote+d+this.quote,d,this.escaped,this.index,this.currentFileInfo)},compare:function(a){if(!a.toCSS)return-1;var b,c;return"Quoted"!==a.type||this.escaped||a.escaped?(b=this.toCSS(),c=a.toCSS()):(b=a.value,c=this.value),b===c?0:c>b?-1:1}}}(c("../tree")),function(a){function c(a,b){var c,d="",e=b.length,f={add:function(a){d+=a}};for(c=0;e>c;c++)b[c].eval(a).genCSS(a,f);return d}a.Rule=function(c,d,e,f,g,h,i,j){this.name=c,this.value=d instanceof a.Value||d instanceof a.Ruleset?d:new a.Value([d]),this.important=e?" "+e.trim():"",this.merge=f,this.index=g,this.currentFileInfo=h,this.inline=i||!1,this.variable=j!==b?j:c.charAt&&"@"===c.charAt(0)},a.Rule.prototype={type:"Rule",accept:function(a){this.value=a.visit(this.value)},genCSS:function(a,b){b.add(this.name+(a.compress?":":": "),this.currentFileInfo,this.index);try{this.value.genCSS(a,b)}catch(c){throw c.index=this.index,c.filename=this.currentFileInfo.filename,c}b.add(this.important+(this.inline||a.lastRule&&a.compress?"":";"),this.currentFileInfo,this.index)},toCSS:a.toCSS,eval:function(b){var d,e=!1,f=this.name,g=this.variable;"string"!=typeof f&&(f=1===f.length&&f[0]instanceof a.Keyword?f[0].value:c(b,f),g=!1),"font"!==f||b.strictMath||(e=!0,b.strictMath=!0);try{if(d=this.value.eval(b),!this.variable&&"DetachedRuleset"===d.type)throw{message:"Rulesets cannot be evaluated on a property.",index:this.index,filename:this.currentFileInfo.filename};return new a.Rule(f,d,this.important,this.merge,this.index,this.currentFileInfo,this.inline,g)}catch(h){throw"number"!=typeof h.index&&(h.index=this.index,h.filename=this.currentFileInfo.filename),h}finally{e&&(b.strictMath=!1)}},makeImportant:function(){return new a.Rule(this.name,this.value,"!important",this.merge,this.index,this.currentFileInfo,this.inline)}}}(c("../tree")),function(a){a.RulesetCall=function(a){this.variable=a},a.RulesetCall.prototype={type:"RulesetCall",accept:function(){},eval:function(b){var c=new a.Variable(this.variable).eval(b);return c.callEval(b)}}}(c("../tree")),function(a){a.Ruleset=function(a,b,c){this.selectors=a,this.rules=b,this._lookups={},this.strictImports=c},a.Ruleset.prototype={type:"Ruleset",accept:function(a){this.paths?a.visitArray(this.paths,!0):this.selectors&&(this.selectors=a.visitArray(this.selectors)),this.rules&&this.rules.length&&(this.rules=a.visitArray(this.rules))},eval:function(b){var c,d,e,f,g=this.selectors,h=a.defaultFunc,i=!1;if(g&&(d=g.length)){for(c=[],h.error({type:"Syntax",message:"it is currently only allowed in parametric mixin guards,"}),f=0;d>f;f++)e=g[f].eval(b),c.push(e),e.evaldCondition&&(i=!0);h.reset()}else i=!0;var j,k,l=this.rules?this.rules.slice(0):null,m=new a.Ruleset(c,l,this.strictImports);m.originalRuleset=this,m.root=this.root,m.firstRoot=this.firstRoot,m.allowImports=this.allowImports,this.debugInfo&&(m.debugInfo=this.debugInfo),i||(l.length=0);var n=b.frames;n.unshift(m);var o=b.selectors;o||(b.selectors=o=[]),o.unshift(this.selectors),(m.root||m.allowImports||!m.strictImports)&&m.evalImports(b);var p=m.rules,q=p?p.length:0;for(f=0;q>f;f++)(p[f]instanceof a.mixin.Definition||p[f]instanceof a.DetachedRuleset)&&(p[f]=p[f].eval(b));var r=b.mediaBlocks&&b.mediaBlocks.length||0;for(f=0;q>f;f++)p[f]instanceof a.mixin.Call?(l=p[f].eval(b).filter(function(b){return b instanceof a.Rule&&b.variable?!m.variable(b.name):!0}),p.splice.apply(p,[f,1].concat(l)),q+=l.length-1,f+=l.length-1,m.resetCache()):p[f]instanceof a.RulesetCall&&(l=p[f].eval(b).rules.filter(function(b){return b instanceof a.Rule&&b.variable?!1:!0}),p.splice.apply(p,[f,1].concat(l)),q+=l.length-1,f+=l.length-1,m.resetCache());for(f=0;f<p.length;f++)j=p[f],j instanceof a.mixin.Definition||j instanceof a.DetachedRuleset||(p[f]=j=j.eval?j.eval(b):j);for(f=0;f<p.length;f++)if(j=p[f],j instanceof a.Ruleset&&j.selectors&&1===j.selectors.length&&j.selectors[0].isJustParentSelector()){p.splice(f--,1);for(var s=0;s<j.rules.length;s++)k=j.rules[s],k instanceof a.Rule&&k.variable||p.splice(++f,0,k)}if(n.shift(),o.shift(),b.mediaBlocks)for(f=r;f<b.mediaBlocks.length;f++)b.mediaBlocks[f].bubbleSelectors(c);return m},evalImports:function(b){var c,d,e=this.rules;if(e)for(c=0;c<e.length;c++)e[c]instanceof a.Import&&(d=e[c].eval(b),d&&d.length?(e.splice.apply(e,[c,1].concat(d)),c+=d.length-1):e.splice(c,1,d),this.resetCache())},makeImportant:function(){return new a.Ruleset(this.selectors,this.rules.map(function(a){return a.makeImportant?a.makeImportant():a}),this.strictImports)},matchArgs:function(a){return!a||0===a.length},matchCondition:function(b,c){var d=this.selectors[this.selectors.length-1];return d.evaldCondition?d.condition&&!d.condition.eval(new a.evalEnv(c,c.frames))?!1:!0:!1},resetCache:function(){this._rulesets=null,this._variables=null,this._lookups={}},variables:function(){return this._variables||(this._variables=this.rules?this.rules.reduce(function(b,c){return c instanceof a.Rule&&c.variable===!0&&(b[c.name]=c),b},{}):{}),this._variables},variable:function(a){return this.variables()[a]},rulesets:function(){if(!this.rules)return null;var b,c,d=a.Ruleset,e=a.mixin.Definition,f=[],g=this.rules,h=g.length;for(b=0;h>b;b++)c=g[b],(c instanceof d||c instanceof e)&&f.push(c);return f},prependRule:function(a){var b=this.rules;b?b.unshift(a):this.rules=[a]},find:function(b,c){c=c||this;var d,e=[],f=b.toCSS();return f in this._lookups?this._lookups[f]:(this.rulesets().forEach(function(f){if(f!==c)for(var g=0;g<f.selectors.length;g++)if(d=b.match(f.selectors[g])){b.elements.length>d?Array.prototype.push.apply(e,f.find(new a.Selector(b.elements.slice(d)),c)):e.push(f);break}}),this._lookups[f]=e,e)},genCSS:function(b,c){function d(b,c){return b.rules?!0:b instanceof a.Media||c&&b instanceof a.Comment?!0:b instanceof a.Directive||b instanceof a.Anonymous?b.isRulesetLike():!1}var e,f,g,h,i,j,k=[],l=[],m=[];b.tabLevel=b.tabLevel||0,this.root||b.tabLevel++;var n,o=b.compress?"":Array(b.tabLevel+1).join("  "),p=b.compress?"":Array(b.tabLevel).join("  ");for(e=0;e<this.rules.length;e++)i=this.rules[e],d(i,this.root)?m.push(i):i.isCharset&&i.isCharset()?k.push(i):l.push(i);if(l=k.concat(l),!this.root){h=a.debugInfo(b,this,p),h&&(c.add(h),c.add(p));var q,r=this.paths,s=r.length;for(n=b.compress?",":",\n"+p,e=0;s>e;e++)if(j=r[e],q=j.length)for(e>0&&c.add(n),b.firstSelector=!0,j[0].genCSS(b,c),b.firstSelector=!1,f=1;q>f;f++)j[f].genCSS(b,c);c.add((b.compress?"{":" {\n")+o)}for(e=0;e<l.length;e++)i=l[e],e+1!==l.length||this.root&&0!==m.length&&!this.firstRoot||(b.lastRule=!0),i.genCSS?i.genCSS(b,c):i.value&&c.add(i.value.toString()),b.lastRule?b.lastRule=!1:c.add(b.compress?"":"\n"+o);if(this.root||(c.add(b.compress?"}":"\n"+p+"}"),b.tabLevel--),n=(b.compress?"":"\n")+(this.root?o:p),g=m.length)for(l.length&&n&&c.add(n),m[0].genCSS(b,c),e=1;g>e;e++)n&&c.add(n),m[e].genCSS(b,c);c.isEmpty()||b.compress||!this.firstRoot||c.add("\n")},toCSS:a.toCSS,markReferenced:function(){if(this.selectors)for(var a=0;a<this.selectors.length;a++)this.selectors[a].markReferenced()},joinSelectors:function(a,b,c){for(var d=0;d<c.length;d++)this.joinSelector(a,b,c[d])},joinSelector:function(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;for(e=0;e<d.elements.length;e++)j=d.elements[e],"&"===j.value&&(h=!0);if(h){for(r=[],i=[[]],e=0;e<d.elements.length;e++)if(j=d.elements[e],"&"!==j.value)r.push(j);else{for(s=[],r.length>0&&this.mergeElementsOnToSelectors(r,i),f=0;f<i.length;f++)if(k=i[f],0===c.length)k.length>0&&(k[0].elements=k[0].elements.slice(0),k[0].elements.push(new a.Element(j.combinator,"",j.index,j.currentFileInfo))),s.push(k);else for(g=0;g<c.length;g++)l=c[g],m=[],n=[],p=!0,k.length>0?(m=k.slice(0),q=m.pop(),o=d.createDerived(q.elements.slice(0)),p=!1):o=d.createDerived([]),l.length>1&&(n=n.concat(l.slice(1))),l.length>0&&(p=!1,o.elements.push(new a.Element(j.combinator,l[0].elements[0].value,j.index,j.currentFileInfo)),o.elements=o.elements.concat(l[0].elements.slice(1))),p||m.push(o),m=m.concat(n),s.push(m);i=s,r=[]}for(r.length>0&&this.mergeElementsOnToSelectors(r,i),e=0;e<i.length;e++)i[e].length>0&&b.push(i[e])}else if(c.length>0)for(e=0;e<c.length;e++)b.push(c[e].concat(d));else b.push([d])},mergeElementsOnToSelectors:function(b,c){var d,e;if(0===c.length)return void c.push([new a.Selector(b)]);for(d=0;d<c.length;d++)e=c[d],e.length>0?e[e.length-1]=e[e.length-1].createDerived(e[e.length-1].elements.concat(b)):e.push(new a.Selector(b))}}}(c("../tree")),function(a){a.Selector=function(a,b,c,d,e,f){this.elements=a,this.extendList=b,this.condition=c,this.currentFileInfo=e||{},this.isReferenced=f,c||(this.evaldCondition=!0)},a.Selector.prototype={type:"Selector",accept:function(a){this.elements&&(this.elements=a.visitArray(this.elements)),this.extendList&&(this.extendList=a.visitArray(this.extendList)),this.condition&&(this.condition=a.visit(this.condition))},createDerived:function(b,c,d){d=null!=d?d:this.evaldCondition;var e=new a.Selector(b,c||this.extendList,null,this.index,this.currentFileInfo,this.isReferenced);return e.evaldCondition=d,e.mediaEmpty=this.mediaEmpty,e},match:function(a){var b,c,d=this.elements,e=d.length;if(a.CacheElements(),b=a._elements.length,0===b||b>e)return 0;for(c=0;b>c;c++)if(d[c].value!==a._elements[c])return 0;return b},CacheElements:function(){var a,b,c,d="";if(!this._elements){for(a=this.elements.length,c=0;a>c;c++)if(b=this.elements[c],d+=b.combinator.value,b.value.value){if("string"!=typeof b.value.value){d="";break}d+=b.value.value}else d+=b.value;this._elements=d.match(/[,&#\*\.\w-]([\w-]|(\\.))*/g),this._elements?"&"===this._elements[0]&&this._elements.shift():this._elements=[]}},isJustParentSelector:function(){return!this.mediaEmpty&&1===this.elements.length&&"&"===this.elements[0].value&&(" "===this.elements[0].combinator.value||""===this.elements[0].combinator.value)},eval:function(a){var b=this.condition&&this.condition.eval(a),c=this.elements,d=this.extendList;return c=c&&c.map(function(b){return b.eval(a)}),d=d&&d.map(function(b){return b.eval(a)}),this.createDerived(c,d,b)},genCSS:function(a,b){var c,d;if(a&&a.firstSelector||""!==this.elements[0].combinator.value||b.add(" ",this.currentFileInfo,this.index),!this._css)for(c=0;c<this.elements.length;c++)d=this.elements[c],d.genCSS(a,b)},toCSS:a.toCSS,markReferenced:function(){this.isReferenced=!0},getIsReferenced:function(){return!this.currentFileInfo.reference||this.isReferenced},getIsOutput:function(){return this.evaldCondition}}}(c("../tree")),function(a){a.UnicodeDescriptor=function(a){this.value=a},a.UnicodeDescriptor.prototype={type:"UnicodeDescriptor",genCSS:function(a,b){b.add(this.value)},toCSS:a.toCSS,eval:function(){return this}}}(c("../tree")),function(a){a.URL=function(a,b,c){this.value=a,this.currentFileInfo=b,this.isEvald=c},a.URL.prototype={type:"Url",accept:function(a){this.value=a.visit(this.value)},genCSS:function(a,b){b.add("url("),this.value.genCSS(a,b),b.add(")")},toCSS:a.toCSS,eval:function(b){var c,d=this.value.eval(b);if(!this.isEvald&&(c=this.currentFileInfo&&this.currentFileInfo.rootpath,c&&"string"==typeof d.value&&b.isPathRelative(d.value)&&(d.quote||(c=c.replace(/[\(\)'"\s]/g,function(a){return"\\"+a})),d.value=c+d.value),d.value=b.normalizePath(d.value),b.urlArgs&&!d.value.match(/^\s*data:/))){var e=-1===d.value.indexOf("?")?"?":"&",f=e+b.urlArgs;-1!==d.value.indexOf("#")?d.value=d.value.replace("#",f+"#"):d.value+=f}return new a.URL(d,this.currentFileInfo,!0)}}}(c("../tree")),function(a){a.Value=function(a){this.value=a},a.Value.prototype={type:"Value",accept:function(a){this.value&&(this.value=a.visitArray(this.value))},eval:function(b){return 1===this.value.length?this.value[0].eval(b):new a.Value(this.value.map(function(a){return a.eval(b)}))},genCSS:function(a,b){var c;for(c=0;c<this.value.length;c++)this.value[c].genCSS(a,b),c+1<this.value.length&&b.add(a&&a.compress?",":", ")},toCSS:a.toCSS}}(c("../tree")),function(a){a.Variable=function(a,b,c){this.name=a,this.index=b,this.currentFileInfo=c||{}},a.Variable.prototype={type:"Variable",eval:function(b){var c,d=this.name;if(0===d.indexOf("@@")&&(d="@"+new a.Variable(d.slice(1)).eval(b).value),this.evaluating)throw{type:"Name",message:"Recursive variable definition for "+d,filename:this.currentFileInfo.file,index:this.index};if(this.evaluating=!0,c=a.find(b.frames,function(a){var c=a.variable(d);return c?c.value.eval(b):void 0}))return this.evaluating=!1,c;throw{type:"Name",message:"variable "+d+" is undefined",filename:this.currentFileInfo.filename,index:this.index}}}}(c("../tree")),function(a){var b=["paths","optimization","files","contents","contentsIgnoredChars","relativeUrls","rootpath","strictImports","insecure","dumpLineNumbers","compress","processImports","syncImport","javascriptEnabled","mime","useFileCache","currentFileInfo"];a.parseEnv=function(a){if(d(a,this,b),this.contents||(this.contents={}),this.contentsIgnoredChars||(this.contentsIgnoredChars={}),this.files||(this.files={}),"string"==typeof this.paths&&(this.paths=[this.paths]),!this.currentFileInfo){var c=a&&a.filename||"input",e=c.replace(/[^\/\\]*$/,"");a&&(a.filename=null),this.currentFileInfo={filename:c,relativeUrls:this.relativeUrls,rootpath:a&&a.rootpath||"",currentDirectory:e,entryPath:e,rootFilename:c}}};var c=["silent","verbose","compress","yuicompress","ieCompat","strictMath","strictUnits","cleancss","sourceMap","importMultiple","urlArgs"];a.evalEnv=function(a,b){d(a,this,c),this.frames=b||[]},a.evalEnv.prototype.inParenthesis=function(){this.parensStack||(this.parensStack=[]),this.parensStack.push(!0)},a.evalEnv.prototype.outOfParenthesis=function(){this.parensStack.pop()},a.evalEnv.prototype.isMathOn=function(){return this.strictMath?this.parensStack&&this.parensStack.length:!0},a.evalEnv.prototype.isPathRelative=function(a){return!/^(?:[a-z-]+:|\/)/.test(a)},a.evalEnv.prototype.normalizePath=function(a){var b,c=a.split("/").reverse();for(a=[];0!==c.length;)switch(b=c.pop()){case".":break;case"..":0===a.length||".."===a[a.length-1]?a.push(b):a.pop();break;default:a.push(b)}return a.join("/")};var d=function(a,b,c){if(a)for(var d=0;d<c.length;d++)a.hasOwnProperty(c[d])&&(b[c[d]]=a[c[d]])}}(c("./tree")),function(a){function b(a){return a}function c(a,b){var d,e;for(d in a)if(a.hasOwnProperty(d))switch(e=a[d],typeof e){case"function":e.prototype&&e.prototype.type&&(e.prototype.typeIndex=b++);break;case"object":b=c(e,b)}return b}var d={visitDeeper:!0},e=!1;a.visitor=function(b){this._implementation=b,this._visitFnCache=[],e||(c(a,1),e=!0)},a.visitor.prototype={visit:function(a){if(!a)return a;var c=a.typeIndex;if(!c)return a;var e,f=this._visitFnCache,g=this._implementation,h=c<<1,i=1|h,j=f[h],k=f[i],l=d;if(l.visitDeeper=!0,j||(e="visit"+a.type,j=g[e]||b,k=g[e+"Out"]||b,f[h]=j,f[i]=k),j!==b){var m=j.call(g,a,l);g.isReplacing&&(a=m)}return l.visitDeeper&&a&&a.accept&&a.accept(this),k!=b&&k.call(g,a),a},visitArray:function(a,b){if(!a)return a;var c,d=a.length;if(b||!this._implementation.isReplacing){for(c=0;d>c;c++)this.visit(a[c]);return a}var e=[];for(c=0;d>c;c++){var f=this.visit(a[c]);f.splice?f.length&&this.flatten(f,e):e.push(f)}return e},flatten:function(a,b){b||(b=[]);var c,d,e,f,g,h;for(d=0,c=a.length;c>d;d++)if(e=a[d],e.splice)for(g=0,f=e.length;f>g;g++)h=e[g],h.splice?h.length&&this.flatten(h,b):b.push(h);else b.push(e);return b}}}(c("./tree")),function(a){a.importVisitor=function(b,c,d,e,f){if(this._visitor=new a.visitor(this),this._importer=b,this._finish=c,this.env=d||new a.evalEnv,this.importCount=0,this.onceFileDetectionMap=e||{},this.recursionDetector={},f)for(var g in f)f.hasOwnProperty(g)&&(this.recursionDetector[g]=!0)},a.importVisitor.prototype={isReplacing:!0,run:function(a){var b;try{this._visitor.visit(a)}catch(c){b=c}this.isFinished=!0,0===this.importCount&&this._finish(b)},visitImport:function(b,c){var d,e=this,f=b.options.inline;if(!b.css||f){try{d=b.evalForImport(this.env)}catch(g){g.filename||(g.index=b.index,g.filename=b.currentFileInfo.filename),b.css=!0,b.error=g}if(d&&(!d.css||f)){b=d,this.importCount++;var h=new a.evalEnv(this.env,this.env.frames.slice(0));b.options.multiple&&(h.importMultiple=!0),this._importer.push(b.getPath(),b.currentFileInfo,b.options,function(c,d,g,i){c&&!c.filename&&(c.index=b.index,c.filename=b.currentFileInfo.filename);var j=g||i in e.recursionDetector;h.importMultiple||(b.skip=j?!0:function(){return i in e.onceFileDetectionMap?!0:(e.onceFileDetectionMap[i]=!0,!1)});var k=function(a){e.importCount--,0===e.importCount&&e.isFinished&&e._finish(a)};return!d||(b.root=d,b.importedFilename=i,f||!h.importMultiple&&j)?void k():(e.recursionDetector[i]=!0,void new a.importVisitor(e._importer,k,h,e.onceFileDetectionMap,e.recursionDetector).run(d))})}}return c.visitDeeper=!1,b},visitRule:function(a,b){return b.visitDeeper=!1,a},visitDirective:function(a){return this.env.frames.unshift(a),a},visitDirectiveOut:function(){this.env.frames.shift()},visitMixinDefinition:function(a){return this.env.frames.unshift(a),a},visitMixinDefinitionOut:function(){this.env.frames.shift()},visitRuleset:function(a){return this.env.frames.unshift(a),a},visitRulesetOut:function(){this.env.frames.shift()},visitMedia:function(a){return this.env.frames.unshift(a.rules[0]),a},visitMediaOut:function(){this.env.frames.shift()}}}(c("./tree")),function(a){a.joinSelectorVisitor=function(){this.contexts=[[]],this._visitor=new a.visitor(this)},a.joinSelectorVisitor.prototype={run:function(a){return this._visitor.visit(a)},visitRule:function(a,b){b.visitDeeper=!1},visitMixinDefinition:function(a,b){b.visitDeeper=!1},visitRuleset:function(a){var b,c=this.contexts[this.contexts.length-1],d=[];this.contexts.push(d),a.root||(b=a.selectors,b&&(b=b.filter(function(a){return a.getIsOutput()}),a.selectors=b.length?b:b=null,b&&a.joinSelectors(d,c,b)),b||(a.rules=null),a.paths=d)},visitRulesetOut:function(){this.contexts.length=this.contexts.length-1},visitMedia:function(a){var b=this.contexts[this.contexts.length-1];a.rules[0].root=0===b.length||b[0].multiMedia}}}(c("./tree")),function(a){a.toCSSVisitor=function(b){this._visitor=new a.visitor(this),this._env=b},a.toCSSVisitor.prototype={isReplacing:!0,run:function(a){return this._visitor.visit(a)},visitRule:function(a){return a.variable?[]:a},visitMixinDefinition:function(a){return a.frames=[],[]},visitExtend:function(){return[]},visitComment:function(a){return a.isSilent(this._env)?[]:a},visitMedia:function(a,b){return a.accept(this._visitor),b.visitDeeper=!1,a.rules.length?a:[]},visitDirective:function(b){if(b.currentFileInfo.reference&&!b.isReferenced)return[];if("@charset"===b.name){if(this.charset){if(b.debugInfo){var c=new a.Comment("/* "+b.toCSS(this._env).replace(/\n/g,"")+" */\n");return c.debugInfo=b.debugInfo,this._visitor.visit(c)}return[]}this.charset=!0}return b.rules&&b.rules.rules&&this._mergeRules(b.rules.rules),b},checkPropertiesInRoot:function(b){for(var c,d=0;d<b.length;d++)if(c=b[d],c instanceof a.Rule&&!c.variable)throw{message:"properties must be inside selector blocks, they cannot be in the root.",index:c.index,filename:c.currentFileInfo?c.currentFileInfo.filename:null}},visitRuleset:function(b,c){var d,e=[];if(b.firstRoot&&this.checkPropertiesInRoot(b.rules),b.root)b.accept(this._visitor),c.visitDeeper=!1,(b.firstRoot||b.rules&&b.rules.length>0)&&e.splice(0,0,b);else{b.paths&&(b.paths=b.paths.filter(function(b){var c;for(" "===b[0].elements[0].combinator.value&&(b[0].elements[0].combinator=new a.Combinator("")),c=0;c<b.length;c++)if(b[c].getIsReferenced()&&b[c].getIsOutput())return!0;return!1}));for(var f=b.rules,g=f?f.length:0,h=0;g>h;)d=f[h],d&&d.rules?(e.push(this._visitor.visit(d)),f.splice(h,1),g--):h++;g>0?b.accept(this._visitor):b.rules=null,c.visitDeeper=!1,f=b.rules,f&&(this._mergeRules(f),f=b.rules),f&&(this._removeDuplicateRules(f),f=b.rules),f&&f.length>0&&b.paths.length>0&&e.splice(0,0,b)}return 1===e.length?e[0]:e},_removeDuplicateRules:function(b){if(b){var c,d,e,f={};for(e=b.length-1;e>=0;e--)if(d=b[e],d instanceof a.Rule)if(f[d.name]){c=f[d.name],c instanceof a.Rule&&(c=f[d.name]=[f[d.name].toCSS(this._env)]);var g=d.toCSS(this._env);-1!==c.indexOf(g)?b.splice(e,1):c.push(g)}else f[d.name]=d}},_mergeRules:function(b){if(b){for(var c,d,e,f={},g=0;g<b.length;g++)d=b[g],d instanceof a.Rule&&d.merge&&(e=[d.name,d.important?"!":""].join(","),f[e]?b.splice(g--,1):f[e]=[],f[e].push(d));Object.keys(f).map(function(b){function e(b){return new a.Expression(b.map(function(a){return a.value}))}function g(b){return new a.Value(b.map(function(a){return a}))}if(c=f[b],c.length>1){d=c[0];var h=[],i=[];c.map(function(a){"+"===a.merge&&(i.length>0&&h.push(e(i)),i=[]),i.push(a)}),h.push(e(i)),d.value=g(h)}})}}}}(c("./tree")),function(a){a.extendFinderVisitor=function(){this._visitor=new a.visitor(this),this.contexts=[],this.allExtendsStack=[[]]},a.extendFinderVisitor.prototype={run:function(a){return a=this._visitor.visit(a),a.allExtends=this.allExtendsStack[0],a},visitRule:function(a,b){b.visitDeeper=!1},visitMixinDefinition:function(a,b){b.visitDeeper=!1},visitRuleset:function(b){if(!b.root){var c,d,e,f,g=[],h=b.rules,i=h?h.length:0;for(c=0;i>c;c++)b.rules[c]instanceof a.Extend&&(g.push(h[c]),b.extendOnEveryPath=!0);var j=b.paths;for(c=0;c<j.length;c++){var k=j[c],l=k[k.length-1],m=l.extendList;for(f=m?m.slice(0).concat(g):g,f&&(f=f.map(function(a){return a.clone()})),d=0;d<f.length;d++)this.foundExtends=!0,e=f[d],e.findSelfSelectors(k),e.ruleset=b,0===d&&(e.firstExtendOnThisSelectorPath=!0),this.allExtendsStack[this.allExtendsStack.length-1].push(e)}this.contexts.push(b.selectors)}},visitRulesetOut:function(a){a.root||(this.contexts.length=this.contexts.length-1)},visitMedia:function(a){a.allExtends=[],this.allExtendsStack.push(a.allExtends)},visitMediaOut:function(){this.allExtendsStack.length=this.allExtendsStack.length-1},visitDirective:function(a){a.allExtends=[],this.allExtendsStack.push(a.allExtends)},visitDirectiveOut:function(){this.allExtendsStack.length=this.allExtendsStack.length-1}},a.processExtendsVisitor=function(){this._visitor=new a.visitor(this)},a.processExtendsVisitor.prototype={run:function(b){var c=new a.extendFinderVisitor;return c.run(b),c.foundExtends?(b.allExtends=b.allExtends.concat(this.doExtendChaining(b.allExtends,b.allExtends)),this.allExtendsStack=[b.allExtends],this._visitor.visit(b)):b},doExtendChaining:function(b,c,d){var e,f,g,h,i,j,k,l,m=[],n=this;for(d=d||0,e=0;e<b.length;e++)for(f=0;f<c.length;f++)j=b[e],k=c[f],j.parent_ids.indexOf(k.object_id)>=0||(i=[k.selfSelectors[0]],g=n.findMatch(j,i),g.length&&j.selfSelectors.forEach(function(b){h=n.extendSelector(g,i,b),l=new a.Extend(k.selector,k.option,0),l.selfSelectors=h,h[h.length-1].extendList=[l],m.push(l),l.ruleset=k.ruleset,l.parent_ids=l.parent_ids.concat(k.parent_ids,j.parent_ids),k.firstExtendOnThisSelectorPath&&(l.firstExtendOnThisSelectorPath=!0,k.ruleset.paths.push(h))}));if(m.length){if(this.extendChainCount++,d>100){var o="{unable to calculate}",p="{unable to calculate}";try{o=m[0].selfSelectors[0].toCSS(),p=m[0].selector.toCSS()}catch(q){}throw{message:"extend circular reference detected. One of the circular extends is currently:"+o+":extend("+p+")"}}return m.concat(n.doExtendChaining(m,c,d+1))}return m},visitRule:function(a,b){b.visitDeeper=!1},visitMixinDefinition:function(a,b){b.visitDeeper=!1},visitSelector:function(a,b){b.visitDeeper=!1},visitRuleset:function(a){if(!a.root){var b,c,d,e,f=this.allExtendsStack[this.allExtendsStack.length-1],g=[],h=this;for(d=0;d<f.length;d++)for(c=0;c<a.paths.length;c++)if(e=a.paths[c],!a.extendOnEveryPath){var i=e[e.length-1].extendList;i&&i.length||(b=this.findMatch(f[d],e),b.length&&f[d].selfSelectors.forEach(function(a){g.push(h.extendSelector(b,e,a))}))}a.paths=a.paths.concat(g)}},findMatch:function(a,b){var c,d,e,f,g,h,i,j=this,k=a.selector.elements,l=[],m=[];for(c=0;c<b.length;c++)for(d=b[c],e=0;e<d.elements.length;e++)for(f=d.elements[e],(a.allowBefore||0===c&&0===e)&&l.push({pathIndex:c,index:e,matched:0,initialCombinator:f.combinator}),h=0;h<l.length;h++)i=l[h],g=f.combinator.value,""===g&&0===e&&(g=" "),!j.isElementValuesEqual(k[i.matched].value,f.value)||i.matched>0&&k[i.matched].combinator.value!==g?i=null:i.matched++,i&&(i.finished=i.matched===k.length,i.finished&&!a.allowAfter&&(e+1<d.elements.length||c+1<b.length)&&(i=null)),i?i.finished&&(i.length=k.length,i.endPathIndex=c,i.endPathElementIndex=e+1,l.length=0,m.push(i)):(l.splice(h,1),h--);return m},isElementValuesEqual:function(b,c){if("string"==typeof b||"string"==typeof c)return b===c;if(b instanceof a.Attribute)return b.op!==c.op||b.key!==c.key?!1:b.value&&c.value?(b=b.value.value||b.value,c=c.value.value||c.value,b===c):b.value||c.value?!1:!0;
if(b=b.value,c=c.value,b instanceof a.Selector){if(!(c instanceof a.Selector)||b.elements.length!==c.elements.length)return!1;for(var d=0;d<b.elements.length;d++){if(b.elements[d].combinator.value!==c.elements[d].combinator.value&&(0!==d||(b.elements[d].combinator.value||" ")!==(c.elements[d].combinator.value||" ")))return!1;if(!this.isElementValuesEqual(b.elements[d].value,c.elements[d].value))return!1}return!0}return!1},extendSelector:function(b,c,d){var e,f,g,h,i,j=0,k=0,l=[];for(e=0;e<b.length;e++)h=b[e],f=c[h.pathIndex],g=new a.Element(h.initialCombinator,d.elements[0].value,d.elements[0].index,d.elements[0].currentFileInfo),h.pathIndex>j&&k>0&&(l[l.length-1].elements=l[l.length-1].elements.concat(c[j].elements.slice(k)),k=0,j++),i=f.elements.slice(k,h.index).concat([g]).concat(d.elements.slice(1)),j===h.pathIndex&&e>0?l[l.length-1].elements=l[l.length-1].elements.concat(i):(l=l.concat(c.slice(j,h.pathIndex)),l.push(new a.Selector(i))),j=h.endPathIndex,k=h.endPathElementIndex,k>=c[j].elements.length&&(k=0,j++);return j<c.length&&k>0&&(l[l.length-1].elements=l[l.length-1].elements.concat(c[j].elements.slice(k)),j++),l=l.concat(c.slice(j,c.length))},visitRulesetOut:function(){},visitMedia:function(a){var b=a.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length-1]);b=b.concat(this.doExtendChaining(b,a.allExtends)),this.allExtendsStack.push(b)},visitMediaOut:function(){this.allExtendsStack.length=this.allExtendsStack.length-1},visitDirective:function(a){var b=a.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length-1]);b=b.concat(this.doExtendChaining(b,a.allExtends)),this.allExtendsStack.push(b)},visitDirectiveOut:function(){this.allExtendsStack.length=this.allExtendsStack.length-1}}}(c("./tree")),function(a){a.sourceMapOutput=function(a){this._css=[],this._rootNode=a.rootNode,this._writeSourceMap=a.writeSourceMap,this._contentsMap=a.contentsMap,this._contentsIgnoredCharsMap=a.contentsIgnoredCharsMap,this._sourceMapFilename=a.sourceMapFilename,this._outputFilename=a.outputFilename,this._sourceMapURL=a.sourceMapURL,a.sourceMapBasepath&&(this._sourceMapBasepath=a.sourceMapBasepath.replace(/\\/g,"/")),this._sourceMapRootpath=a.sourceMapRootpath,this._outputSourceFiles=a.outputSourceFiles,this._sourceMapGeneratorConstructor=a.sourceMapGenerator||c("source-map").SourceMapGenerator,this._sourceMapRootpath&&"/"!==this._sourceMapRootpath.charAt(this._sourceMapRootpath.length-1)&&(this._sourceMapRootpath+="/"),this._lineNumber=0,this._column=0},a.sourceMapOutput.prototype.normalizeFilename=function(a){return a=a.replace(/\\/g,"/"),this._sourceMapBasepath&&0===a.indexOf(this._sourceMapBasepath)&&(a=a.substring(this._sourceMapBasepath.length),("\\"===a.charAt(0)||"/"===a.charAt(0))&&(a=a.substring(1))),(this._sourceMapRootpath||"")+a},a.sourceMapOutput.prototype.add=function(a,b,c,d){if(a){var e,f,g,h,i;if(b){var j=this._contentsMap[b.filename];this._contentsIgnoredCharsMap[b.filename]&&(c-=this._contentsIgnoredCharsMap[b.filename],0>c&&(c=0),j=j.slice(this._contentsIgnoredCharsMap[b.filename])),j=j.substring(0,c),f=j.split("\n"),h=f[f.length-1]}if(e=a.split("\n"),g=e[e.length-1],b)if(d)for(i=0;i<e.length;i++)this._sourceMapGenerator.addMapping({generated:{line:this._lineNumber+i+1,column:0===i?this._column:0},original:{line:f.length+i,column:0===i?h.length:0},source:this.normalizeFilename(b.filename)});else this._sourceMapGenerator.addMapping({generated:{line:this._lineNumber+1,column:this._column},original:{line:f.length,column:h.length},source:this.normalizeFilename(b.filename)});1===e.length?this._column+=g.length:(this._lineNumber+=e.length-1,this._column=g.length),this._css.push(a)}},a.sourceMapOutput.prototype.isEmpty=function(){return 0===this._css.length},a.sourceMapOutput.prototype.toCSS=function(a){if(this._sourceMapGenerator=new this._sourceMapGeneratorConstructor({file:this._outputFilename,sourceRoot:null}),this._outputSourceFiles)for(var b in this._contentsMap)if(this._contentsMap.hasOwnProperty(b)){var d=this._contentsMap[b];this._contentsIgnoredCharsMap[b]&&(d=d.slice(this._contentsIgnoredCharsMap[b])),this._sourceMapGenerator.setSourceContent(this.normalizeFilename(b),d)}if(this._rootNode.genCSS(a,this),this._css.length>0){var e,f=JSON.stringify(this._sourceMapGenerator.toJSON());this._sourceMapURL?e=this._sourceMapURL:this._sourceMapFilename&&(e=this.normalizeFilename(this._sourceMapFilename)),this._writeSourceMap?this._writeSourceMap(f):e="data:application/json;base64,"+c("./encoder.js").encodeBase64(f),e&&this._css.push("/*# sourceMappingURL="+e+" */")}return this._css.join("")}}(c("./tree"));var y=/^(file|chrome(-extension)?|resource|qrc|app):/.test(location.protocol);w.env=w.env||("127.0.0.1"==location.hostname||"0.0.0.0"==location.hostname||"localhost"==location.hostname||location.port&&location.port.length>0||y?"development":"production");var z={debug:3,info:2,errors:1,none:0};if(w.logLevel="undefined"!=typeof w.logLevel?w.logLevel:"development"===w.env?z.debug:z.errors,w.async=w.async||!1,w.fileAsync=w.fileAsync||!1,w.poll=w.poll||(y?1e3:1500),w.functions)for(var A in w.functions)w.functions.hasOwnProperty(A)&&(w.tree.functions[A]=w.functions[A]);var B=/!dumpLineNumbers:(comments|mediaquery|all)/.exec(location.hash);B&&(w.dumpLineNumbers=B[1]);var C=/^text\/(x-)?less$/,D=null,E={};if(w.watch=function(){return w.watchMode||(w.env="development",v()),this.watchMode=!0,!0},w.unwatch=function(){return clearInterval(w.watchTimer),this.watchMode=!1,!1},/!watch/.test(location.hash)&&w.watch(),"development"!=w.env)try{D="undefined"==typeof a.localStorage?null:a.localStorage}catch(F){}var G=document.getElementsByTagName("link");w.sheets=[];for(var H=0;H<G.length;H++)("stylesheet/less"===G[H].rel||G[H].rel.match(/stylesheet/)&&G[H].type.match(C))&&w.sheets.push(G[H]);w.modifyVars=function(a){w.refresh(!1,a)},w.refresh=function(a,b){var c,e;c=e=new Date,u(function(a,b,f,i,k){if(a)return j(a,i.href);if(k.local)d("loading "+i.href+" from cache.",z.info);else{d("parsed "+i.href+" successfully.",z.debug);var l=b.toCSS(w);l=h(l),g(l,i,k.lastModified)}d("css for "+i.href+" generated in "+(new Date-e)+"ms",z.info),0===k.remaining&&d("less has finished. css generated in "+(new Date-c)+"ms",z.info),e=new Date},a,b),n(b)},w.refreshStyles=n,w.Parser.fileLoader=s,w.refresh("development"===w.env),"function"==typeof define&&define.amd&&define(function(){return w})}(window);;
/*!
 * Bootstrap v3.3.5 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under the MIT license
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){"use strict";var b=a.fn.jquery.split(" ")[0].split(".");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")}(jQuery),+function(a){"use strict";function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one("bsTransitionEnd",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var c=a(this),e=c.data("bs.alert");e||c.data("bs.alert",e=new d(this)),"string"==typeof b&&e[b].call(c)})}var c='[data-dismiss="alert"]',d=function(b){a(b).on("click",c,this.close)};d.VERSION="3.3.5",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger("closed.bs.alert").remove()}var e=a(this),f=e.attr("data-target");f||(f=e.attr("href"),f=f&&f.replace(/.*(?=#[^\s]*$)/,""));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(".alert")),g.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(g.removeClass("in"),a.support.transition&&g.hasClass("fade")?g.one("bsTransitionEnd",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on("click.bs.alert.data-api",c,d.prototype.close)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof b&&b;e||d.data("bs.button",e=new c(this,f)),"toggle"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION="3.3.5",c.DEFAULTS={loadingText:"loading..."},c.prototype.setState=function(b){var c="disabled",d=this.$element,e=d.is("input")?"val":"html",f=d.data();b+="Text",null==f.resetText&&d.data("resetText",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),"loadingText"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle="buttons"]');if(b.length){var c=this.$element.find("input");"radio"==c.prop("type")?(c.prop("checked")&&(a=!1),b.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==c.prop("type")&&(c.prop("checked")!==this.$element.hasClass("active")&&(a=!1),this.$element.toggleClass("active")),c.prop("checked",this.$element.hasClass("active")),a&&c.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(c){var d=a(c.target);d.hasClass("btn")||(d=d.closest(".btn")),b.call(d,"toggle"),a(c.target).is('input[type="radio"]')||a(c.target).is('input[type="checkbox"]')||c.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(b){a(b.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},c.DEFAULTS,d.data(),"object"==typeof b&&b),g="string"==typeof b?b:f.slide;e||d.data("bs.carousel",e=new c(this,f)),"number"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",a.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",a.proxy(this.pause,this)).on("mouseleave.bs.carousel",a.proxy(this.cycle,this))};c.VERSION="3.3.5",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(".item"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d="prev"==a&&0===c||"next"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e="prev"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(".item.active"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?"next":"prev",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide("next")},c.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},c.prototype.slide=function(b,d){var e=this.$element.find(".item.active"),f=d||this.getItemForDirection(b,e),g=this.interval,h="next"==b?"left":"right",i=this;if(f.hasClass("active"))return this.sliding=!1;var j=f[0],k=a.Event("slide.bs.carousel",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass("active")}var m=a.Event("slid.bs.carousel",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass("slide")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one("bsTransitionEnd",function(){f.removeClass([b,h].join(" ")).addClass("active"),e.removeClass(["active",h].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass("active"),f.addClass("active"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr("data-target")||(d=e.attr("href"))&&d.replace(/.*(?=#[^\s]+$)/,""));if(f.hasClass("carousel")){var g=a.extend({},f.data(),e.data()),h=e.attr("data-slide-to");h&&(g.interval=!1),b.call(f,g),h&&f.data("bs.carousel").to(h),c.preventDefault()}};a(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){"use strict";function b(b){var c,d=b.attr("data-target")||(c=b.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,"");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data("bs.collapse"),f=a.extend({},d.DEFAULTS,c.data(),"object"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data("bs.collapse",e=new d(this,f)),"string"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle="collapse"][href="#'+b.id+'"],[data-toggle="collapse"][data-target="#'+b.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION="3.3.5",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var b,e=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(e&&e.length&&(b=e.data("bs.collapse"),b&&b.transitioning))){var f=a.Event("show.bs.collapse");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,"hide"),b||e.data("bs.collapse",null));var g=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var h=function(){this.$element.removeClass("collapsing").addClass("collapse in")[g](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return h.call(this);var i=a.camelCase(["scroll",g].join("-"));this.$element.one("bsTransitionEnd",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return a.support.transition?void this.$element[c](0).one("bsTransitionEnd",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass("in");a.attr("aria-expanded",c),b.toggleClass("collapsed",!c).attr("aria-expanded",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(d){var e=a(this);e.attr("data-target")||d.preventDefault();var f=b(e),g=f.data("bs.collapse"),h=g?"toggle":e.data();c.call(f,h)})}(jQuery),+function(a){"use strict";function b(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\s]*$)/,""));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass("open")&&(c&&"click"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event("hide.bs.dropdown",f)),c.isDefaultPrevented()||(d.attr("aria-expanded","false"),e.removeClass("open").trigger("hidden.bs.dropdown",f))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data("bs.dropdown");d||c.data("bs.dropdown",d=new g(this)),"string"==typeof b&&d[b].call(c)})}var e=".dropdown-backdrop",f='[data-toggle="dropdown"]',g=function(b){a(b).on("click.bs.dropdown",this.toggle)};g.VERSION="3.3.5",g.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=b(e),g=f.hasClass("open");if(c(),!g){"ontouchstart"in document.documentElement&&!f.closest(".navbar-nav").length&&a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click",c);var h={relatedTarget:this};if(f.trigger(d=a.Event("show.bs.dropdown",h)),d.isDefaultPrevented())return;e.trigger("focus").attr("aria-expanded","true"),f.toggleClass("open").trigger("shown.bs.dropdown",h)}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(".disabled, :disabled")){var e=b(d),g=e.hasClass("open");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger("focus"),d.trigger("click");var h=" li:not(.disabled):visible a",i=e.find(".dropdown-menu"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger("focus")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on("click.bs.dropdown.data-api",c).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",f,g.prototype.toggle).on("keydown.bs.dropdown.data-api",f,g.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",g.prototype.keydown)}(jQuery),+function(a){"use strict";function b(b,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},c.DEFAULTS,e.data(),"object"==typeof b&&b);f||e.data("bs.modal",f=new c(this,g)),"string"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,a.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};c.VERSION="3.3.5",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){d.$element.one("mouseup.dismiss.bs.modal",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass("fade");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass("in"),d.enforceFocus();var f=a.Event("shown.bs.modal",{relatedTarget:b});e?d.$dialog.one("bsTransitionEnd",function(){d.$element.trigger("focus").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger("focus").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),a.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger("focus")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},c.prototype.resize=function(){this.isShown?a(window).on("resize.bs.modal",a.proxy(this.handleUpdate,this)):a(window).off("resize.bs.modal")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass("modal-open"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger("hidden.bs.modal")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement("div")).addClass("modal-backdrop "+e).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;f?this.$backdrop.one("bsTransitionEnd",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:""})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement("div");a.className="modal-scrollbar-measure",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(c){var d=a(this),e=d.attr("href"),f=a(d.attr("data-target")||e&&e.replace(/.*(?=#[^\s]+$)/,"")),g=f.data("bs.modal")?"toggle":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is("a")&&c.preventDefault(),f.one("show.bs.modal",function(a){a.isDefaultPrevented()||f.one("hidden.bs.modal",function(){d.is(":visible")&&d.trigger("focus")})}),b.call(f,g,this)})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data("bs.tooltip",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",a,b)};c.VERSION="3.3.5",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focusin",i="hover"==g?"mouseleave":"focusout";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&"number"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&&(c.inState["focusin"==b.type?"focus":"hover"]=!0),c.tip().hasClass("in")||"in"==c.hoverState?void(c.hoverState="in"):(clearTimeout(c.timeout),c.hoverState="in",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){"in"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&&(c.inState["focusout"==b.type?"focus":"hover"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState="out",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){"out"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr("id",g),this.$element.attr("aria-describedby",g),this.options.animation&&f.addClass("fade");var h="function"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\s?auto?\s?/i,j=i.test(h);j&&(h=h.replace(i,"")||"top"),f.detach().css({top:0,left:0,display:"block"}).addClass(h).data("bs."+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h="bottom"==h&&k.bottom+m>o.bottom?"top":"top"==h&&k.top-m<o.top?"bottom":"right"==h&&k.right+l>o.width?"left":"left"==h&&k.left-l<o.left?"right":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger("shown.bs."+e.type),e.hoverState=null,"out"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass("fade")?f.one("bsTransitionEnd",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css("margin-top"),10),h=parseInt(d.css("margin-left"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass("in");var i=d[0].offsetWidth,j=d[0].offsetHeight;"top"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?"offsetWidth":"offsetHeight";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?"left":"top",50*(1-a/b)+"%").css(c?"top":"left","")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},c.prototype.hide=function(b){function d(){"in"!=e.hoverState&&f.detach(),e.$element.removeAttr("aria-describedby").trigger("hidden.bs."+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event("hide.bs."+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass("in"),a.support.transition&&f.hasClass("fade")?f.one("bsTransitionEnd",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&&a.attr("data-original-title",a.attr("title")||"").attr("title","")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d="BODY"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data("bs."+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass("in")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off("."+a.type).removeData("bs."+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data("bs.popover",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");c.VERSION="3.3.5",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof c?"html":"append":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){"use strict";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&&c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&&e[c]()})}b.VERSION="3.3.5",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c="offset",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c="position",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data("target")||b.attr("href"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(":visible")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");d.parent(".dropdown-menu").length&&(d=d.closest("li.dropdown").addClass("active")),
d.trigger("activate.bs.scrollspy")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on("load.bs.scrollspy.data-api",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new c(this)),"string"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION="3.3.5",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){var e=c.find(".active:last a"),f=a.Event("hide.bs.tab",{relatedTarget:b[0]}),g=a.Event("show.bs.tab",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest("li"),c),this.activate(h,h.parent(),function(){e.trigger({type:"hidden.bs.tab",relatedTarget:b[0]}),b.trigger({type:"shown.bs.tab",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),h?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu").length&&b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),e&&e()}var g=d.find("> .active"),h=e&&a.support.transition&&(g.length&&g.hasClass("fade")||!!d.find("> .fade").length);g.length&&h?g.one("bsTransitionEnd",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass("in")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),"show")};a(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',e).on("click.bs.tab.data-api",'[data-toggle="pill"]',e)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof b&&b;e||d.data("bs.affix",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION="3.3.5",c.RESET="affix affix-top affix-bottom",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&"top"==this.affixed)return c>e?"top":!1;if("bottom"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:"bottom":a-d>=e+g?!1:"bottom";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?"top":null!=d&&i+j>=a-d?"bottom":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass("affix");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(":visible")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());"object"!=typeof d&&(f=e=d),"function"==typeof e&&(e=d.top(this.$element)),"function"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css("top","");var i="affix"+(h?"-"+h:""),j=a.Event(i+".bs.affix");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin="bottom"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix","affixed")+".bs.affix")}"bottom"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);;
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2006, 2014 Klaus Hartl
 * Released under the MIT license
 */
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD (Register as an anonymous module)
		define(['jquery'], factory);
	} else if (typeof exports === 'object') {
		// Node/CommonJS
		module.exports = factory(require('jquery'));
	} else {
		// Browser globals
		factory(jQuery);
	}
}(function ($) {

	var pluses = /\+/g;

	function encode(s) {
		return config.raw ? s : encodeURIComponent(s);
	}

	function decode(s) {
		return config.raw ? s : decodeURIComponent(s);
	}

	function stringifyCookieValue(value) {
		return encode(config.json ? JSON.stringify(value) : String(value));
	}

	function parseCookieValue(s) {
		if (s.indexOf('"') === 0) {
			// This is a quoted cookie as according to RFC2068, unescape...
			s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
		}

		try {
			// Replace server-side written pluses with spaces.
			// If we can't decode the cookie, ignore it, it's unusable.
			// If we can't parse the cookie, ignore it, it's unusable.
			s = decodeURIComponent(s.replace(pluses, ' '));
			return config.json ? JSON.parse(s) : s;
		} catch(e) {}
	}

	function read(s, converter) {
		var value = config.raw ? s : parseCookieValue(s);
		return $.isFunction(converter) ? converter(value) : value;
	}

	var config = $.cookie = function (key, value, options) {

		// Write

		if (arguments.length > 1 && !$.isFunction(value)) {
			options = $.extend({}, config.defaults, options);

			if (typeof options.expires === 'number') {
				var days = options.expires, t = options.expires = new Date();
				t.setMilliseconds(t.getMilliseconds() + days * 864e+5);
			}

			return (document.cookie = [
				encode(key), '=', stringifyCookieValue(value),
				options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
				options.path    ? '; path=' + options.path : '',
				options.domain  ? '; domain=' + options.domain : '',
				options.secure  ? '; secure' : ''
			].join(''));
		}

		// Read

		var result = key ? undefined : {},
			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all. Also prevents odd result when
			// calling $.cookie().
			cookies = document.cookie ? document.cookie.split('; ') : [],
			i = 0,
			l = cookies.length;

		for (; i < l; i++) {
			var parts = cookies[i].split('='),
				name = decode(parts.shift()),
				cookie = parts.join('=');

			if (key === name) {
				// If second argument (value) is a function it's a converter...
				result = read(cookie, value);
				break;
			}

			// Prevent storing a cookie that we couldn't decode.
			if (!key && (cookie = read(cookie)) !== undefined) {
				result[name] = cookie;
			}
		}

		return result;
	};

	config.defaults = {};

	$.removeCookie = function (key, options) {
		// Must not alter options, thus extending a fresh object...
		$.cookie(key, '', $.extend({}, options, { expires: -1 }));
		return !$.cookie(key);
	};

}));
;
var MsSc = MsSc || {};
MsSc.AccordionX = MsSc.AccordionX || {};
var $ = jQuery;

MsSc.AccordionX.initAccordionX = function ($accordionXElem) {

    if ($accordionXElem === undefined)
        return;

    var updateToggle = function () {

        var hash = window.location.hash;

        // The hash can contain characters that completely freak out the "find" method.
        // We need to do this in a try catch to deal with this situation to be sure
        // we don't throw an exception here that thwarts all downstream processing of
        // JavaScript.
        try {
            var elem = $accordionXElem.find(hash);

            if (elem.hasClass('panel panel-default')) {
                var panelCollapse = elem.find('.panel-collapse');
                panelCollapse.collapse('toggle');
            }
        }
        catch (e) {
            // Just swallow this exception and move on. If we get here we are likely dealing with a complicated
            // hash that ADAL sets up during silent authentication (in a hidden IFRAME).
        }
    };

    $(window).on('hashchange', updateToggle);

    updateToggle();
};

$(document).ready(function () {
    var $accdnXElem = $('.accordion-x');

    if ($accdnXElem.length > 0) {
        MsSc.AccordionX.initAccordionX($accdnXElem);
    }
});
;
$(document).ready(function () {
    $(".alert-super-container").each(function () {
        var itemId = $(this).data("itemid");
        if ($.cookie("MS_Dismissed_Alerts_" + itemId) != "true") {
            $(this).show();
        }
    });

    $(".close").click(function () {
        var superContainer = $(this).closest(".alert-super-container");
        superContainer.hide(1000);
        var itemId = superContainer.data("itemid");
        var reactivateAfter = superContainer.data("reactivateafter");
        $.cookie("MS_Dismissed_Alerts_" + itemId, "true", { path: '/', expires: reactivateAfter });
    });
});;
/*!
    Colorbox v1.4.29 - 2013-09-10
    jQuery lightbox and modal window plugin
    (c) 2013 Jack Moore - http://www.jacklmoore.com/colorbox
    license: http://www.opensource.org/licenses/mit-license.php
*/
(function ($, document, window) {
    var
        // Default settings object.
        // See http://jacklmoore.com/colorbox for details.
        defaults = {
            transition: "elastic",
            speed: 300,
            fadeOut: 300,
            width: false,
            initialWidth: "600",
            innerWidth: false,
            maxWidth: false,
            height: false,
            initialHeight: "450",
            innerHeight: false,
            maxHeight: false,
            scalePhotos: true,
            scrolling: true,
            inline: false,
            html: false,
            iframe: false,
            fastIframe: true,
            photo: false,
            href: false,
            title: false,
            rel: false,
            opacity: 0.9,
            preloading: true,
            className: false,

            // alternate image paths for high-res displays
            retinaImage: false,
            retinaUrl: false,
            retinaSuffix: '@2x.$1',

            // internationalization
            current: "image {current} of {total}",
            previous: "previous",
            next: "next",
            close: "close",
            xhrError: "This content failed to load.",
            imgError: "This image failed to load.",

            open: false,
            returnFocus: true,
            trapFocus: true,
            reposition: true,
            loop: true,
            slideshow: false,
            slideshowAuto: true,
            slideshowSpeed: 2500,
            slideshowStart: "start slideshow",
            slideshowStop: "stop slideshow",
            photoRegex: /\.(gif|png|jp(e|g|eg)|bmp|ico|webp)((#|\?).*)?$/i,

            onOpen: false,
            onLoad: false,
            onComplete: false,
            onCleanup: false,
            onClosed: false,

            overlayClose: true,
            escKey: true,
            arrowKey: true,
            top: false,
            bottom: false,
            left: false,
            right: false,
            fixed: false,
            data: undefined,
            closeButton: true
        },

        // Abstracting the HTML and event identifiers for easy rebranding
        colorbox = 'colorbox',
        prefix = 'cbox',
        boxElement = prefix + 'Element',

        // Events
        event_open = prefix + '_open',
        event_load = prefix + '_load',
        event_complete = prefix + '_complete',
        event_cleanup = prefix + '_cleanup',
        event_closed = prefix + '_closed',
        event_purge = prefix + '_purge',

        // Cached jQuery Object Variables
        $overlay,
        $box,
        $wrap,
        $content,
        $topBorder,
        $leftBorder,
        $rightBorder,
        $bottomBorder,
        $related,
        $window,
        $loaded,
        $loadingBay,
        $loadingOverlay,
        $title,
        $current,
        $slideshow,
        $next,
        $prev,
        $close,
        $groupControls,
        $events = $('<a/>'),

        // Variables for cached values or use across multiple functions
        settings,
        interfaceHeight,
        interfaceWidth,
        loadedHeight,
        loadedWidth,
        element,
        index,
        photo,
        open,
        active,
        closing,
        loadingTimer,
        publicMethod,
        div = "div",
        className,
        requests = 0,
        previousCSS = {},
        init;

    // ****************
    // HELPER FUNCTIONS
    // ****************

    // Convenience function for creating new jQuery objects
    function $tag(tag, id, css) {
        var element = document.createElement(tag);

        if (id) {
            element.id = prefix + id;
        }

        if (css) {
            element.style.cssText = css;
        }

        return $(element);
    }

    // Get the window height using innerHeight when available to avoid an issue with iOS
    // http://bugs.jquery.com/ticket/6724
    function winheight() {
        return window.innerHeight ? window.innerHeight : $(window).height();
    }

    // Determine the next and previous members in a group.
    function getIndex(increment) {
        var
            max = $related.length,
            newIndex = (index + increment) % max;

        return (newIndex < 0) ? max + newIndex : newIndex;
    }

    // Convert '%' and 'px' values to integers
    function setSize(size, dimension) {
        return Math.round((/%/.test(size) ? ((dimension === 'x' ? $window.width() : winheight()) / 100) : 1) * parseInt(size, 10));
    }

    // Checks an href to see if it is a photo.
    // There is a force photo option (photo: true) for hrefs that cannot be matched by the regex.
    function isImage(settings, url) {
        return settings.photo || settings.photoRegex.test(url);
    }

    function retinaUrl(settings, url) {
        return settings.retinaUrl && window.devicePixelRatio > 1 ? url.replace(settings.photoRegex, settings.retinaSuffix) : url;
    }

    function trapFocus(e) {
        if ('contains' in $box[0] && !$box[0].contains(e.target)) {
            e.stopPropagation();
            $box.focus();
        }
    }

    // Assigns function results to their respective properties
    function makeSettings() {
        var i,
            data = $.data(element, colorbox);

        if (data == null) {
            settings = $.extend({}, defaults);
            if (console && console.log) {
                console.log('Error: cboxElement missing settings object');
            }
        } else {
            settings = $.extend({}, data);
        }

        for (i in settings) {
            if ($.isFunction(settings[i]) && i.slice(0, 2) !== 'on') { // checks to make sure the function isn't one of the callbacks, they will be handled at the appropriate time.
                settings[i] = settings[i].call(element);
            }
        }

        settings.rel = settings.rel || element.rel || $(element).data('rel') || 'nofollow';
        settings.href = settings.href || $(element).attr('href');
        settings.title = settings.title || element.title;

        if (typeof settings.href === "string") {
            settings.href = $.trim(settings.href);
        }
    }

    function trigger(event, callback) {
        // for external use
        $(document).trigger(event);

        // for internal use
        $events.trigger(event);

        if ($.isFunction(callback)) {
            callback.call(element);
        }
    }


    var slideshow = (function () {
        var active,
            className = prefix + "Slideshow_",
            click = "click." + prefix,
            timeOut;

        function clear() {
            clearTimeout(timeOut);
        }

        function set() {
            if (settings.loop || $related[index + 1]) {
                clear();
                timeOut = setTimeout(publicMethod.next, settings.slideshowSpeed);
            }
        }

        function start() {
            $slideshow
                .html(settings.slideshowStop)
                .unbind(click)
                .one(click, stop);

            $events
                .bind(event_complete, set)
                .bind(event_load, clear);

            $box.removeClass(className + "off").addClass(className + "on");
        }

        function stop() {
            clear();

            $events
                .unbind(event_complete, set)
                .unbind(event_load, clear);

            $slideshow
                .html(settings.slideshowStart)
                .unbind(click)
                .one(click, function () {
                    publicMethod.next();
                    start();
                });

            $box.removeClass(className + "on").addClass(className + "off");
        }

        function reset() {
            active = false;
            $slideshow.hide();
            clear();
            $events
                .unbind(event_complete, set)
                .unbind(event_load, clear);
            $box.removeClass(className + "off " + className + "on");
        }

        return function () {
            if (active) {
                if (!settings.slideshow) {
                    $events.unbind(event_cleanup, reset);
                    reset();
                }
            } else {
                if (settings.slideshow && $related[1]) {
                    active = true;
                    $events.one(event_cleanup, reset);
                    if (settings.slideshowAuto) {
                        start();
                    } else {
                        stop();
                    }
                    $slideshow.show();
                }
            }
        };

    }());


    function launch(target) {
        if (!closing) {

            element = target;

            makeSettings();

            $related = $(element);

            index = 0;

            if (settings.rel !== 'nofollow') {
                $related = $('.' + boxElement).filter(function () {
                    var data = $.data(this, colorbox),
                        relRelated;

                    if (data) {
                        relRelated = $(this).data('rel') || data.rel || this.rel;
                    }

                    return (relRelated === settings.rel);
                });
                index = $related.index(element);

                // Check direct calls to Colorbox.
                if (index === -1) {
                    $related = $related.add(element);
                    index = $related.length - 1;
                }
            }

            $overlay.css({
                opacity: parseFloat(settings.opacity),
                cursor: settings.overlayClose ? "pointer" : "auto",
                visibility: 'visible'
            }).show();


            if (className) {
                $box.add($overlay).removeClass(className);
            }
            if (settings.className) {
                $box.add($overlay).addClass(settings.className);
            }
            className = settings.className;

            if (settings.closeButton) {
                $close.html("<span class='icon icon-leading icon-close' aria-label='Close'></span>").appendTo($content);
            } else {
                $close.appendTo('<div/>');
            }

            if (!open) {
                open = active = true; // Prevents the page-change action from queuing up if the visitor holds down the left or right keys.

                // Show colorbox so the sizes can be calculated in older versions of jQuery
                $box.css({ visibility: 'hidden', display: 'block' });

                $loaded = $tag(div, 'LoadedContent', 'width:0; height:0; overflow:hidden');
                $content.css({ width: '', height: '' }).append($loaded);

                // Cache values needed for size calculations
                interfaceHeight = $topBorder.height() + $bottomBorder.height() + $content.outerHeight(true) - $content.height();
                interfaceWidth = $leftBorder.width() + $rightBorder.width() + $content.outerWidth(true) - $content.width();
                loadedHeight = $loaded.outerHeight(true);
                loadedWidth = $loaded.outerWidth(true);

                // Opens inital empty Colorbox prior to content being loaded.
                settings.w = setSize(settings.initialWidth, 'x');
                settings.h = setSize(settings.initialHeight, 'y');
                $loaded.css({ width: '', height: settings.h });
                publicMethod.position();

                trigger(event_open, settings.onOpen);

                $groupControls.add($title).hide();

                $box.focus();

                if (settings.trapFocus) {
                    // Confine focus to the modal
                    // Uses event capturing that is not supported in IE8-
                    if (document.addEventListener) {

                        document.addEventListener('focus', trapFocus, true);

                        $events.one(event_closed, function () {
                            document.removeEventListener('focus', trapFocus, true);
                        });
                    }
                }

                // Return focus on closing
                if (settings.returnFocus) {
                    $events.one(event_closed, function () {
                        $(element).focus();
                    });
                }
            }
            load();
        }
    }

    // Colorbox's markup needs to be added to the DOM prior to being called
    // so that the browser will go ahead and load the CSS background images.
    function appendHTML() {
        if (!$box && document.body) {
            init = false;
            $window = $(window);
            $box = $tag(div).attr({
                id: colorbox,
                'class': $.support.opacity === false ? prefix + 'IE' : '', // class for optional IE8 & lower targeted CSS.
                role: 'dialog',
                tabindex: '-1'
            }).hide();
            $overlay = $tag(div, "Overlay").hide();
            $loadingOverlay = $([$tag(div, "LoadingOverlay")[0], $tag(div, "LoadingGraphic")[0]]);
            $wrap = $tag(div, "Wrapper");
            $content = $tag(div, "Content").append(
                $title = $tag(div, "Title"),
                $current = $tag(div, "Current"),
                $prev = $('<button type="button"/>').attr({ id: prefix + 'Previous' }),
                $next = $('<button type="button"/>').attr({ id: prefix + 'Next' }),
                $slideshow = $tag('button', "Slideshow"),
                $loadingOverlay
            );

            $close = $('<button type="button"/>').attr({ id: prefix + 'Close' });
            $wrap.append( // The 3x3 Grid that makes up Colorbox
                $tag(div).append(
                    $tag(div, "TopLeft"),
                    $topBorder = $tag(div, "TopCenter"),
                    $tag(div, "TopRight")
                ),
                $tag(div, false, 'clear:left').append(
                    $leftBorder = $tag(div, "MiddleLeft"),
                    $content,
                    $rightBorder = $tag(div, "MiddleRight")
                ),
                $tag(div, false, 'clear:left').append(
                    $tag(div, "BottomLeft"),
                    $bottomBorder = $tag(div, "BottomCenter"),
                    $tag(div, "BottomRight")
                )
            ).find('div div').css({ 'float': 'left' });

            $loadingBay = $tag(div, false, 'position:absolute; width:9999px; visibility:hidden; display:none');

            $groupControls = $next.add($prev).add($current).add($slideshow);

            $(document.body).append($overlay, $box.append($wrap, $loadingBay));
        }
    }

    // Add Colorbox's event bindings
    function addBindings() {
        function clickHandler(e) {
            // ignore non-left-mouse-clicks and clicks modified with ctrl / command, shift, or alt.
            // See: http://jacklmoore.com/notes/click-events/
            if (!(e.which > 1 || e.shiftKey || e.altKey || e.metaKey || e.ctrlKey)) {
                e.preventDefault();
                launch(this);
            }
        }

        if ($box) {
            if (!init) {
                init = true;

                // Anonymous functions here keep the public method from being cached, thereby allowing them to be redefined on the fly.
                $next.click(function () {
                    publicMethod.next();
                });
                $prev.click(function () {
                    publicMethod.prev();
                });
                $close.click(function () {
                    publicMethod.close();
                });
                $overlay.click(function () {
                    if (settings.overlayClose) {
                        publicMethod.close();
                    }
                });

                // Key Bindings
                $(document).bind('keydown.' + prefix, function (e) {
                    var key = e.keyCode;
                    if (open && settings.escKey && key === 27) {
                        e.preventDefault();
                        publicMethod.close();
                    }
                    if (open && settings.arrowKey && $related[1] && !e.altKey) {
                        if (key === 37) {
                            e.preventDefault();
                            $prev.click();
                        } else if (key === 39) {
                            e.preventDefault();
                            $next.click();
                        }
                    }
                });

                if ($.isFunction($.fn.on)) {
                    // For jQuery 1.7+
                    $(document).on('click.' + prefix, '.' + boxElement, clickHandler);
                } else {
                    // For jQuery 1.3.x -> 1.6.x
                    // This code is never reached in jQuery 1.9, so do not contact me about 'live' being removed.
                    // This is not here for jQuery 1.9, it's here for legacy users.
                    $('.' + boxElement).live('click.' + prefix, clickHandler);
                }
            }
            return true;
        }
        return false;
    }

    // Don't do anything if Colorbox already exists.
    if ($.colorbox) {
        return;
    }

    // Append the HTML when the DOM loads
    $(appendHTML);


    // ****************
    // PUBLIC FUNCTIONS
    // Usage format: $.colorbox.close();
    // Usage from within an iframe: parent.jQuery.colorbox.close();
    // ****************

    publicMethod = $.fn[colorbox] = $[colorbox] = function (options, callback) {
        var $this = this;

        options = options || {};

        appendHTML();

        if (addBindings()) {
            if ($.isFunction($this)) { // assume a call to $.colorbox
                $this = $('<a/>');
                options.open = true;
            } else if (!$this[0]) { // colorbox being applied to empty collection
                return $this;
            }

            if (callback) {
                options.onComplete = callback;
            }

            $this.each(function () {
                $.data(this, colorbox, $.extend({}, $.data(this, colorbox) || defaults, options));
            }).addClass(boxElement);

            if (($.isFunction(options.open) && options.open.call($this)) || options.open) {
                launch($this[0]);
            }
        }

        return $this;
    };

    publicMethod.position = function (speed, loadedCallback) {
        var
            css,
            top = 0,
            left = 0,
            offset = $box.offset(),
            scrollTop,
            scrollLeft;

        $window.unbind('resize.' + prefix);

        // remove the modal so that it doesn't influence the document width/height
        $box.css({ top: -9e4, left: -9e4 });

        scrollTop = $window.scrollTop();
        scrollLeft = $window.scrollLeft();

        if (settings.fixed) {
            offset.top -= scrollTop;
            offset.left -= scrollLeft;
            $box.css({ position: 'fixed' });
        } else {
            top = scrollTop;
            left = scrollLeft;
            $box.css({ position: 'absolute' });
        }

        // keeps the top and left positions within the browser's viewport.
        if (settings.right !== false) {
            left += Math.max($window.width() - settings.w - loadedWidth - interfaceWidth - setSize(settings.right, 'x'), 0);
        } else if (settings.left !== false) {
            left += setSize(settings.left, 'x');
        } else {
            left += Math.round(Math.max($window.width() - settings.w - loadedWidth - interfaceWidth, 0) / 2);
        }

        if (settings.bottom !== false) {
            top += Math.max(winheight() - settings.h - loadedHeight - interfaceHeight - setSize(settings.bottom, 'y'), 0);
        } else if (settings.top !== false) {
            top += setSize(settings.top, 'y');
        } else {
            top += Math.round(Math.max(winheight() - settings.h - loadedHeight - interfaceHeight, 0) / 2);
        }

        $box.css({ top: offset.top, left: offset.left, visibility: 'visible' });

        // this gives the wrapper plenty of breathing room so it's floated contents can move around smoothly,
        // but it has to be shrank down around the size of div#colorbox when it's done.  If not,
        // it can invoke an obscure IE bug when using iframes.
        $wrap[0].style.width = $wrap[0].style.height = "9999px";

        function modalDimensions() {
            $topBorder[0].style.width = $bottomBorder[0].style.width = $content[0].style.width = (parseInt($box[0].style.width, 10) - interfaceWidth) + 'px';
            $content[0].style.height = $leftBorder[0].style.height = $rightBorder[0].style.height = (parseInt($box[0].style.height, 10) - interfaceHeight) + 'px';
        }

        css = { width: settings.w + loadedWidth + interfaceWidth, height: settings.h + loadedHeight + interfaceHeight, top: top, left: left };

        // setting the speed to 0 if the content hasn't changed size or position
        if (speed) {
            var tempSpeed = 0;
            $.each(css, function (i) {
                if (css[i] !== previousCSS[i]) {
                    tempSpeed = speed;
                    return;
                }
            });
            speed = tempSpeed;
        }

        previousCSS = css;

        if (!speed) {
            $box.css(css);
        }

        $box.dequeue().animate(css, {
            duration: speed || 0,
            complete: function () {
                modalDimensions();

                active = false;

                // shrink the wrapper down to exactly the size of colorbox to avoid a bug in IE's iframe implementation.
                $wrap[0].style.width = (settings.w + loadedWidth + interfaceWidth) + "px";
                $wrap[0].style.height = (settings.h + loadedHeight + interfaceHeight) + "px";

                if (settings.reposition) {
                    setTimeout(function () {  // small delay before binding onresize due to an IE8 bug.
                        $window.bind('resize.' + prefix, publicMethod.position);
                    }, 1);
                }

                if (loadedCallback) {
                    loadedCallback();
                }
            },
            step: modalDimensions
        });
    };

    publicMethod.resize = function (options) {
        var scrolltop;

        if (open) {
            options = options || {};

            if (options.width) {
                settings.w = setSize(options.width, 'x') - loadedWidth - interfaceWidth;
            }

            if (options.innerWidth) {
                settings.w = setSize(options.innerWidth, 'x');
            }

            $loaded.css({ width: settings.w });

            if (options.height) {
                settings.h = setSize(options.height, 'y') - loadedHeight - interfaceHeight;
            }

            if (options.innerHeight) {
                settings.h = setSize(options.innerHeight, 'y');
            }

            if (!options.innerHeight && !options.height) {
                scrolltop = $loaded.scrollTop();
                $loaded.css({ height: "auto" });
                settings.h = $loaded.height();
            }

            $loaded.css({ height: settings.h });

            if (scrolltop) {
                $loaded.scrollTop(scrolltop);
            }

            publicMethod.position(settings.transition === "none" ? 0 : settings.speed);
        }
    };

    publicMethod.prep = function (object) {
        if (!open) {
            return;
        }

        var callback, speed = settings.transition === "none" ? 0 : settings.speed;

        $loaded.empty().remove(); // Using empty first may prevent some IE7 issues.

        $loaded = $tag(div, 'LoadedContent').append(object);

        function getWidth() {
            settings.w = settings.w || $loaded.width();
            settings.w = settings.mw && settings.mw < settings.w ? settings.mw : settings.w;
            return settings.w;
        }
        function getHeight() {
            settings.h = settings.h || $loaded.height();
            settings.h = settings.mh && settings.mh < settings.h ? settings.mh : settings.h;
            return settings.h;
        }

        $loaded.hide()
            .appendTo($loadingBay.show())// content has to be appended to the DOM for accurate size calculations.
            .css({ width: getWidth(), overflow: settings.scrolling ? 'auto' : 'hidden' })
            .css({ height: getHeight() })// sets the height independently from the width in case the new width influences the value of height.
            .prependTo($content);

        $loadingBay.hide();

        // floating the IMG removes the bottom line-height and fixed a problem where IE miscalculates the width of the parent element as 100% of the document width.

        $(photo).css({ 'float': 'none' });

        callback = function () {
            var total = $related.length,
                iframe,
                frameBorder = 'frameBorder',
                allowTransparency = 'allowTransparency',
                complete;

            if (!open) {
                return;
            }

            function removeFilter() { // Needed for IE7 & IE8 in versions of jQuery prior to 1.7.2
                if ($.support.opacity === false) {
                    $box[0].style.removeAttribute('filter');
                }
            }

            complete = function () {
                clearTimeout(loadingTimer);
                $loadingOverlay.hide();
                trigger(event_complete, settings.onComplete);
            };


            $title.html(settings.title).add($loaded).show();

            if (total > 1) { // handle grouping
                if (typeof settings.current === "string") {
                    $current.html(settings.current.replace('{current}', index + 1).replace('{total}', total)).show();
                }

                $next[(settings.loop || index < total - 1) ? "show" : "hide"]().html(settings.next);
                $prev[(settings.loop || index) ? "show" : "hide"]().html(settings.previous);

                slideshow();

                // Preloads images within a rel group
                if (settings.preloading) {
                    $.each([getIndex(-1), getIndex(1)], function () {
                        var src,
                            img,
                            i = $related[this],
                            data = $.data(i, colorbox);

                        if (data && data.href) {
                            src = data.href;
                            if ($.isFunction(src)) {
                                src = src.call(i);
                            }
                        } else {
                            src = $(i).attr('href');
                        }

                        if (src && isImage(data, src)) {
                            src = retinaUrl(data, src);
                            img = document.createElement('img');
                            img.src = src;
                        }
                    });
                }
            } else {
                $groupControls.hide();
            }

            if (settings.iframe) {
                iframe = $tag('iframe')[0];

                if (frameBorder in iframe) {
                    iframe[frameBorder] = 0;
                }

                if (allowTransparency in iframe) {
                    iframe[allowTransparency] = "true";
                }

                if (!settings.scrolling) {
                    iframe.scrolling = "no";
                }

                $(iframe)
                    .attr({
                        src: settings.href,
                        name: (new Date()).getTime(), // give the iframe a unique name to prevent caching
                        'class': prefix + 'Iframe',
                        allowFullScreen: true, // allow HTML5 video to go fullscreen
                        webkitAllowFullScreen: true,
                        mozallowfullscreen: true
                    })
                    .one('load', complete)
                    .appendTo($loaded);

                $events.one(event_purge, function () {
                    iframe.src = "//about:blank";
                });

                if (settings.fastIframe) {
                    $(iframe).trigger('load');
                }
            } else {
                complete();
            }

            if (settings.transition === 'fade') {
                $box.fadeTo(speed, 1, removeFilter);
            } else {
                removeFilter();
            }
        };

        if (settings.transition === 'fade') {
            $box.fadeTo(speed, 0, function () {
                publicMethod.position(0, callback);
            });
        } else {
            publicMethod.position(speed, callback);
        }
    };

    function load() {
        $(".mejs__play>button").click(function () {
            setCustomTooltips();
        });
        $('body').css('overflow', 'hidden');
        var href, setResize, prep = publicMethod.prep, $inline, request = ++requests;

        active = true;

        photo = false;

        element = $related[index];

        makeSettings();

        trigger(event_purge);

        trigger(event_load, settings.onLoad);

        settings.h = settings.height ?
            setSize(settings.height, 'y') - loadedHeight - interfaceHeight :
            settings.innerHeight && setSize(settings.innerHeight, 'y');

        settings.w = settings.width ?
            setSize(settings.width, 'x') - loadedWidth - interfaceWidth :
            settings.innerWidth && setSize(settings.innerWidth, 'x');

        // Sets the minimum dimensions for use in image scaling
        settings.mw = settings.w;
        settings.mh = settings.h;

        // Re-evaluate the minimum width and height based on maxWidth and maxHeight values.
        // If the width or height exceed the maxWidth or maxHeight, use the maximum values instead.
        if (settings.maxWidth) {
            settings.mw = setSize(settings.maxWidth, 'x') - loadedWidth - interfaceWidth;
            settings.mw = settings.w && settings.w < settings.mw ? settings.w : settings.mw;
        }
        if (settings.maxHeight) {
            settings.mh = setSize(settings.maxHeight, 'y') - loadedHeight - interfaceHeight;
            settings.mh = settings.h && settings.h < settings.mh ? settings.h : settings.mh;
        }

        href = settings.href;

        loadingTimer = setTimeout(function () {
            $loadingOverlay.show();
        }, 100);

        if (settings.inline) {
            // Inserts an empty placeholder where inline content is being pulled from.
            // An event is bound to put inline content back when Colorbox closes or loads new content.
            $inline = $tag(div).hide().insertBefore($(href)[0]);

            $events.one(event_purge, function () {
                $inline.replaceWith($loaded.children());
            });

            prep($(href));
        } else if (settings.iframe) {
            // IFrame element won't be added to the DOM until it is ready to be displayed,
            // to avoid problems with DOM-ready JS that might be trying to run in that iframe.
            prep(" ");
        } else if (settings.html) {
            prep(settings.html);
        } else if (isImage(settings, href)) {

            href = retinaUrl(settings, href);

            photo = document.createElement('img');

            $(photo)
                .addClass(prefix + 'Photo')
                .bind('error', function () {
                    settings.title = false;
                    prep($tag(div, 'Error').html(settings.imgError));
                })
                .one('load', function () {
                    var percent;

                    if (request !== requests) {
                        return;
                    }

                    photo.alt = $(element).attr('alt') || $(element).attr('data-alt') || '';

                    if (settings.retinaImage && window.devicePixelRatio > 1) {
                        photo.height = photo.height / window.devicePixelRatio;
                        photo.width = photo.width / window.devicePixelRatio;
                    }

                    if (settings.scalePhotos) {
                        setResize = function () {
                            photo.height -= photo.height * percent;
                            photo.width -= photo.width * percent;
                        };
                        if (settings.mw && photo.width > settings.mw) {
                            percent = (photo.width - settings.mw) / photo.width;
                            setResize();
                        }
                        if (settings.mh && photo.height > settings.mh) {
                            percent = (photo.height - settings.mh) / photo.height;
                            setResize();
                        }
                    }

                    if (settings.h) {
                        photo.style.marginTop = Math.max(settings.mh - photo.height, 0) / 2 + 'px';
                    }

                    if ($related[1] && (settings.loop || $related[index + 1])) {
                        photo.style.cursor = 'pointer';
                        photo.onclick = function () {
                            publicMethod.next();
                        };
                    }

                    photo.style.width = photo.width + 'px';
                    photo.style.height = photo.height + 'px';

                    setTimeout(function () { // A pause because Chrome will sometimes report a 0 by 0 size otherwise.
                        prep(photo);
                    }, 1);
                });

            setTimeout(function () { // A pause because Opera 10.6+ will sometimes not run the onload function otherwise.
                photo.src = href;
            }, 1);
        } else if (href) {
            $loadingBay.load(href, settings.data, function (data, status) {
                if (request === requests) {
                    prep(status === 'error' ? $tag(div, 'Error').html(settings.xhrError) : $(this).contents());
                }
            });
        }
    }

    // Navigates to the next page/image in a set.
    publicMethod.next = function () {
        if (!active && $related[1] && (settings.loop || $related[index + 1])) {
            index = getIndex(1);
            launch($related[index]);
        }
    };

    publicMethod.prev = function () {
        if (!active && $related[1] && (settings.loop || index)) {
            index = getIndex(-1);
            launch($related[index]);
        }
    };

    // Note: to use this within an iframe use the following format: parent.jQuery.colorbox.close();
    publicMethod.close = function () {
        $('body').css('overflow', '');
        var playControl = $(".mejs__button.mejs__playpause-button.mejs__play button");
        //var escapeBackBtn  = $(".mejs__button.mejs__volume-button button");
        var qSelectorByClasses = 'div.mejs__qualities-selector';
        var qHiddenSelectorByClasses = 'div.mejs__qualities-selector.hidden';
        var qSelector = $(qHiddenSelectorByClasses);

        if (!qSelector.length > 0) {
            var qSelector2 = $(qSelectorByClasses);
            if (qSelector2.length > 0) {
                $(qSelectorByClasses).addClass("hidden");
                //var currentControl  = $("div.mejs__button.mejs__qualities-button" + " button");
                playControl.focus();
                return;
            }
        }

        var subSelectorByClasses = 'div.mejs__captions-selector';
        var subHiddenSelectorByClasses = 'div.mejs__captions-selector.mejs__offscreen';
        var sSelector = $(subHiddenSelectorByClasses);
        if (!sSelector.length > 0) {
            var sSelector2 = $(subSelectorByClasses);
            if (sSelector2.length > 0) {
                $(subSelectorByClasses).addClass("mejs__offscreen");
                //var currentControl  = $(".mejs__button.mejs__captions-button button");
                playControl.focus();
                return;
            }
        }

        var slideSelector = "a.mejs__volume-slider";
        var volumeSliderControl = $(slideSelector);
        if (volumeSliderControl.length > 0) {
            var isSlideHidden = volumeSliderControl[0].style.display == "none";
            if (!isSlideHidden) {
                $(slideSelector)[0].style.display = "none";
                $(".mejs__button.mejs__volume-button.mejs__mute button")
                playControl.focus();
                return;
            }
        }


        if (open && !closing) {

            closing = true;

            open = false;

            trigger(event_cleanup, settings.onCleanup);

            $window.unbind('.' + prefix);

            $overlay.fadeTo(settings.fadeOut || 0, 0);

            $box.stop().fadeTo(settings.fadeOut || 0, 0, function () {

                $box.add($overlay).css({ 'opacity': 1, cursor: 'auto' }).hide();

                trigger(event_purge);

                $loaded.empty().remove(); // Using empty first may prevent some IE7 issues.

                setTimeout(function () {
                    closing = false;
                    trigger(event_closed, settings.onClosed);
                }, 1);
            });
        }
    };

    // Removes changes Colorbox made to the document, but does not remove the plugin.
    publicMethod.remove = function () {
        if (!$box) { return; }

        $box.stop();
        $.colorbox.close();
        $box.stop().remove();
        $overlay.remove();
        closing = false;
        $box = null;
        $('.' + boxElement)
            .removeData(colorbox)
            .removeClass(boxElement);

        $(document).unbind('click.' + prefix);
    };

    // A method for fetching the current element Colorbox is referencing.
    // returns a jQuery object.
    publicMethod.element = function () {
        return $(element);
    };

    $(".mejs__playpause-button>button").click(function () {

        setCustomTooltips();

    });
     
    publicMethod.settings = defaults;

}(jQuery, document, window));
;
/*!
 * MediaElement.js
 * http://www.mediaelementjs.com/
 *
 * Wrapper that mimics native HTML5 MediaElement (audio and video)
 * using a variety of technologies (pure JavaScript, Flash, iframe)
 *
 * Copyright 2010-2017, John Dyer (http://j.hn/)
 * License: MIT
 *
 */(function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == "function" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error("Cannot find module '" + o + "'"); throw f.code = "MODULE_NOT_FOUND", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function (e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == "function" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({
    1: [function (_dereq_, module, exports) {

    }, {}], 2: [function (_dereq_, module, exports) {
        (function (global) {
            var topLevel = typeof global !== 'undefined' ? global :
                typeof window !== 'undefined' ? window : {}
            var minDoc = _dereq_(1);

            var doccy;

            if (typeof document !== 'undefined') {
                doccy = document;
            } else {
                doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

                if (!doccy) {
                    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
                }
            }

            module.exports = doccy;

        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, { "1": 1 }], 3: [function (_dereq_, module, exports) {
        (function (global) {
            var win;

            if (typeof window !== "undefined") {
                win = window;
            } else if (typeof global !== "undefined") {
                win = global;
            } else if (typeof self !== "undefined") {
                win = self;
            } else {
                win = {};
            }

            module.exports = win;

        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {}], 4: [function (_dereq_, module, exports) {
        (function (root) {

            // Store setTimeout reference so promise-polyfill will be unaffected by
            // other code modifying setTimeout (like sinon.useFakeTimers())
            var setTimeoutFunc = setTimeout;

            function noop() { }

            // Polyfill for Function.prototype.bind
            function bind(fn, thisArg) {
                return function () {
                    fn.apply(thisArg, arguments);
                };
            }

            function Promise(fn) {
                if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');
                if (typeof fn !== 'function') throw new TypeError('not a function');
                this._state = 0;
                this._handled = false;
                this._value = undefined;
                this._deferreds = [];

                doResolve(fn, this);
            }

            function handle(self, deferred) {
                while (self._state === 3) {
                    self = self._value;
                }
                if (self._state === 0) {
                    self._deferreds.push(deferred);
                    return;
                }
                self._handled = true;
                Promise._immediateFn(function () {
                    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
                    if (cb === null) {
                        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
                        return;
                    }
                    var ret;
                    try {
                        ret = cb(self._value);
                    } catch (e) {
                        reject(deferred.promise, e);
                        return;
                    }
                    resolve(deferred.promise, ret);
                });
            }

            function resolve(self, newValue) {
                try {
                    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
                    if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
                    if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
                        var then = newValue.then;
                        if (newValue instanceof Promise) {
                            self._state = 3;
                            self._value = newValue;
                            finale(self);
                            return;
                        } else if (typeof then === 'function') {
                            doResolve(bind(then, newValue), self);
                            return;
                        }
                    }
                    self._state = 1;
                    self._value = newValue;
                    finale(self);
                } catch (e) {
                    reject(self, e);
                }
            }

            function reject(self, newValue) {
                self._state = 2;
                self._value = newValue;
                finale(self);
            }

            function finale(self) {
                if (self._state === 2 && self._deferreds.length === 0) {
                    Promise._immediateFn(function () {
                        if (!self._handled) {
                            Promise._unhandledRejectionFn(self._value);
                        }
                    });
                }

                for (var i = 0, len = self._deferreds.length; i < len; i++) {
                    handle(self, self._deferreds[i]);
                }
                self._deferreds = null;
            }

            function Handler(onFulfilled, onRejected, promise) {
                this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
                this.onRejected = typeof onRejected === 'function' ? onRejected : null;
                this.promise = promise;
            }

            /**
             * Take a potentially misbehaving resolver function and make sure
             * onFulfilled and onRejected are only called once.
             *
             * Makes no guarantees about asynchrony.
             */
            function doResolve(fn, self) {
                var done = false;
                try {
                    fn(function (value) {
                        if (done) return;
                        done = true;
                        resolve(self, value);
                    }, function (reason) {
                        if (done) return;
                        done = true;
                        reject(self, reason);
                    });
                } catch (ex) {
                    if (done) return;
                    done = true;
                    reject(self, ex);
                }
            }

            Promise.prototype['catch'] = function (onRejected) {
                return this.then(null, onRejected);
            };

            Promise.prototype.then = function (onFulfilled, onRejected) {
                var prom = new (this.constructor)(noop);

                handle(this, new Handler(onFulfilled, onRejected, prom));
                return prom;
            };

            Promise.all = function (arr) {
                var args = Array.prototype.slice.call(arr);

                return new Promise(function (resolve, reject) {
                    if (args.length === 0) return resolve([]);
                    var remaining = args.length;

                    function res(i, val) {
                        try {
                            if (val && (typeof val === 'object' || typeof val === 'function')) {
                                var then = val.then;
                                if (typeof then === 'function') {
                                    then.call(val, function (val) {
                                        res(i, val);
                                    }, reject);
                                    return;
                                }
                            }
                            args[i] = val;
                            if (--remaining === 0) {
                                resolve(args);
                            }
                        } catch (ex) {
                            reject(ex);
                        }
                    }

                    for (var i = 0; i < args.length; i++) {
                        res(i, args[i]);
                    }
                });
            };

            Promise.resolve = function (value) {
                if (value && typeof value === 'object' && value.constructor === Promise) {
                    return value;
                }

                return new Promise(function (resolve) {
                    resolve(value);
                });
            };

            Promise.reject = function (value) {
                return new Promise(function (resolve, reject) {
                    reject(value);
                });
            };

            Promise.race = function (values) {
                return new Promise(function (resolve, reject) {
                    for (var i = 0, len = values.length; i < len; i++) {
                        values[i].then(resolve, reject);
                    }
                });
            };

            // Use polyfill for setImmediate for performance gains
            Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||
                function (fn) {
                    setTimeoutFunc(fn, 0);
                };

            Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
                if (typeof console !== 'undefined' && console) {
                    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
                }
            };

            /**
             * Set the immediate function to execute callbacks
             * @param fn {function} Function to execute
             * @deprecated
             */
            Promise._setImmediateFn = function _setImmediateFn(fn) {
                Promise._immediateFn = fn;
            };

            /**
             * Change the function to execute on unhandled rejection
             * @param {function} fn Function to execute on unhandled rejection
             * @deprecated
             */
            Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
                Promise._unhandledRejectionFn = fn;
            };

            if (typeof module !== 'undefined' && module.exports) {
                module.exports = Promise;
            } else if (!root.Promise) {
                root.Promise = Promise;
            }

        })(this);

    }, {}], 5: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _en = _dereq_(15);

        var _general = _dereq_(27);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var i18n = { lang: 'en', en: _en.EN };

        i18n.language = function () {
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            if (args !== null && args !== undefined && args.length) {

                if (typeof args[0] !== 'string') {
                    throw new TypeError('Language code must be a string value');
                }

                if (!/^[a-z]{2,3}((\-|_)[a-z]{2})?$/i.test(args[0])) {
                    throw new TypeError('Language code must have format 2-3 letters and. optionally, hyphen, underscore followed by 2 more letters');
                }

                i18n.lang = args[0];

                if (i18n[args[0]] === undefined) {
                    args[1] = args[1] !== null && args[1] !== undefined && _typeof(args[1]) === 'object' ? args[1] : {};
                    i18n[args[0]] = !(0, _general.isObjectEmpty)(args[1]) ? args[1] : _en.EN;
                } else if (args[1] !== null && args[1] !== undefined && _typeof(args[1]) === 'object') {
                    i18n[args[0]] = args[1];
                }
            }

            return i18n.lang;
        };

        i18n.t = function (message) {
            var pluralParam = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;


            if (typeof message === 'string' && message.length) {

                var str = void 0,
                    pluralForm = void 0;

                var language = i18n.language();

                var _plural = function _plural(input, number, form) {

                    if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) !== 'object' || typeof number !== 'number' || typeof form !== 'number') {
                        return input;
                    }

                    var _pluralForms = function () {
                        return [function () {
                            return arguments.length <= 1 ? undefined : arguments[1];
                        }, function () {
                            return (arguments.length <= 0 ? undefined : arguments[0]) === 1 ? arguments.length <= 1 ? undefined : arguments[1] : arguments.length <= 2 ? undefined : arguments[2];
                        }, function () {
                            return (arguments.length <= 0 ? undefined : arguments[0]) === 0 || (arguments.length <= 0 ? undefined : arguments[0]) === 1 ? arguments.length <= 1 ? undefined : arguments[1] : arguments.length <= 2 ? undefined : arguments[2];
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 === 1 && (arguments.length <= 0 ? undefined : arguments[0]) % 100 !== 11) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) !== 0) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1 || (arguments.length <= 0 ? undefined : arguments[0]) === 11) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 2 || (arguments.length <= 0 ? undefined : arguments[0]) === 12) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) > 2 && (arguments.length <= 0 ? undefined : arguments[0]) < 20) {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            } else {
                                return arguments.length <= 4 ? undefined : arguments[4];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 0 || (arguments.length <= 0 ? undefined : arguments[0]) % 100 > 0 && (arguments.length <= 0 ? undefined : arguments[0]) % 100 < 20) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 === 1 && (arguments.length <= 0 ? undefined : arguments[0]) % 100 !== 11) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 >= 2 && ((arguments.length <= 0 ? undefined : arguments[0]) % 100 < 10 || (arguments.length <= 0 ? undefined : arguments[0]) % 100 >= 20)) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return [3];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 === 1 && (arguments.length <= 0 ? undefined : arguments[0]) % 100 !== 11) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 >= 2 && (arguments.length <= 0 ? undefined : arguments[0]) % 10 <= 4 && ((arguments.length <= 0 ? undefined : arguments[0]) % 100 < 10 || (arguments.length <= 0 ? undefined : arguments[0]) % 100 >= 20)) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) >= 2 && (arguments.length <= 0 ? undefined : arguments[0]) <= 4) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 >= 2 && (arguments.length <= 0 ? undefined : arguments[0]) % 10 <= 4 && ((arguments.length <= 0 ? undefined : arguments[0]) % 100 < 10 || (arguments.length <= 0 ? undefined : arguments[0]) % 100 >= 20)) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) % 100 === 1) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 100 === 2) {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 100 === 3 || (arguments.length <= 0 ? undefined : arguments[0]) % 100 === 4) {
                                return arguments.length <= 4 ? undefined : arguments[4];
                            } else {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 2) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) > 2 && (arguments.length <= 0 ? undefined : arguments[0]) < 7) {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) > 6 && (arguments.length <= 0 ? undefined : arguments[0]) < 11) {
                                return arguments.length <= 4 ? undefined : arguments[4];
                            } else {
                                return arguments.length <= 5 ? undefined : arguments[5];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 0) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 2) {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 100 >= 3 && (arguments.length <= 0 ? undefined : arguments[0]) % 100 <= 10) {
                                return arguments.length <= 4 ? undefined : arguments[4];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 100 >= 11) {
                                return arguments.length <= 5 ? undefined : arguments[5];
                            } else {
                                return arguments.length <= 6 ? undefined : arguments[6];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 0 || (arguments.length <= 0 ? undefined : arguments[0]) % 100 > 1 && (arguments.length <= 0 ? undefined : arguments[0]) % 100 < 11) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 100 > 10 && (arguments.length <= 0 ? undefined : arguments[0]) % 100 < 20) {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            } else {
                                return arguments.length <= 4 ? undefined : arguments[4];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 === 2) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }, function () {
                            return (arguments.length <= 0 ? undefined : arguments[0]) !== 11 && (arguments.length <= 0 ? undefined : arguments[0]) % 10 === 1 ? arguments.length <= 1 ? undefined : arguments[1] : arguments.length <= 2 ? undefined : arguments[2];
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) % 10 >= 2 && (arguments.length <= 0 ? undefined : arguments[0]) % 10 <= 4 && ((arguments.length <= 0 ? undefined : arguments[0]) % 100 < 10 || (arguments.length <= 0 ? undefined : arguments[0]) % 100 >= 20)) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 2) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) !== 8 && (arguments.length <= 0 ? undefined : arguments[0]) !== 11) {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            } else {
                                return arguments.length <= 4 ? undefined : arguments[4];
                            }
                        }, function () {
                            return (arguments.length <= 0 ? undefined : arguments[0]) === 0 ? arguments.length <= 1 ? undefined : arguments[1] : arguments.length <= 2 ? undefined : arguments[2];
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 2) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 3) {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            } else {
                                return arguments.length <= 4 ? undefined : arguments[4];
                            }
                        }, function () {
                            if ((arguments.length <= 0 ? undefined : arguments[0]) === 0) {
                                return arguments.length <= 1 ? undefined : arguments[1];
                            } else if ((arguments.length <= 0 ? undefined : arguments[0]) === 1) {
                                return arguments.length <= 2 ? undefined : arguments[2];
                            } else {
                                return arguments.length <= 3 ? undefined : arguments[3];
                            }
                        }];
                    }();

                    return _pluralForms[form].apply(null, [number].concat(input));
                };

                if (i18n[language] !== undefined) {
                    str = i18n[language][message];
                    if (pluralParam !== null && typeof pluralParam === 'number') {
                        pluralForm = i18n[language]['mejs.plural-form'];
                        str = _plural.apply(null, [str, pluralParam, pluralForm]);
                    }
                }

                if (!str && i18n.en) {
                    str = i18n.en[message];
                    if (pluralParam !== null && typeof pluralParam === 'number') {
                        pluralForm = i18n.en['mejs.plural-form'];
                        str = _plural.apply(null, [str, pluralParam, pluralForm]);
                    }
                }

                str = str || message;

                if (pluralParam !== null && typeof pluralParam === 'number') {
                    str = str.replace('%1', pluralParam);
                }

                return (0, _general.escapeHTML)(str);
            }

            return message;
        };

        _mejs2.default.i18n = i18n;

        if (typeof mejsL10n !== 'undefined') {
            _mejs2.default.i18n.language(mejsL10n.language, mejsL10n.strings);
        }

        exports.default = i18n;

    }, { "15": 15, "27": 27, "7": 7 }], 6: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _general = _dereq_(27);

        var _media2 = _dereq_(28);

        var _renderer = _dereq_(8);

        var _constants = _dereq_(25);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var MediaElement = function MediaElement(idOrNode, options, sources) {
            var _this = this;

            _classCallCheck(this, MediaElement);

            var t = this;

            sources = Array.isArray(sources) ? sources : null;

            t.defaults = {
                renderers: [],

                fakeNodeName: 'mediaelementwrapper',

                pluginPath: 'build/',

                shimScriptAccess: 'sameDomain'
            };

            options = Object.assign(t.defaults, options);

            t.mediaElement = _document2.default.createElement(options.fakeNodeName);

            var id = idOrNode,
                error = false;

            if (typeof idOrNode === 'string') {
                t.mediaElement.originalNode = _document2.default.getElementById(idOrNode);
            } else {
                t.mediaElement.originalNode = idOrNode;
                id = idOrNode.id;
            }

            if (t.mediaElement.originalNode === undefined || t.mediaElement.originalNode === null) {
                return null;
            }

            t.mediaElement.options = options;
            id = id || 'mejs_' + Math.random().toString().slice(2);

            t.mediaElement.originalNode.setAttribute('id', id + '_from_mejs');

            var tagName = t.mediaElement.originalNode.tagName.toLowerCase();
            if (['video', 'audio'].indexOf(tagName) > -1 && !t.mediaElement.originalNode.getAttribute('preload')) {
                t.mediaElement.originalNode.setAttribute('preload', 'none');
            }

            t.mediaElement.originalNode.parentNode.insertBefore(t.mediaElement, t.mediaElement.originalNode);

            t.mediaElement.appendChild(t.mediaElement.originalNode);

            var processURL = function processURL(url, type) {
                if (_window2.default.location.protocol === 'https:' && url.indexOf('http:') === 0 && _constants.IS_IOS && _mejs2.default.html5media.mediaTypes.indexOf(type) > -1) {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (this.readyState === 4 && this.status === 200) {
                            var _url = _window2.default.URL || _window2.default.webkitURL,
                                blobUrl = _url.createObjectURL(this.response);
                            t.mediaElement.originalNode.setAttribute('src', blobUrl);
                            return blobUrl;
                        }
                        return url;
                    };
                    xhr.open('GET', url);
                    xhr.responseType = 'blob';
                    xhr.send();
                }

                return url;
            };

            var mediaFiles = void 0;

            if (sources !== null) {
                mediaFiles = sources;
            } else if (t.mediaElement.originalNode !== null) {

                mediaFiles = [];

                switch (t.mediaElement.originalNode.nodeName.toLowerCase()) {
                    case 'iframe':
                        mediaFiles.push({
                            type: '',
                            src: t.mediaElement.originalNode.getAttribute('src')
                        });
                        break;
                    case 'audio':
                    case 'video':
                        var _sources = t.mediaElement.originalNode.children.length,
                            nodeSource = t.mediaElement.originalNode.getAttribute('src');

                        if (nodeSource) {
                            var node = t.mediaElement.originalNode,
                                type = (0, _media2.formatType)(nodeSource, node.getAttribute('type'));
                            mediaFiles.push({
                                type: type,
                                src: processURL(nodeSource, type)
                            });
                        }

                        for (var i = 0; i < _sources; i++) {
                            var n = t.mediaElement.originalNode.children[i];
                            if (n.tagName.toLowerCase() === 'source') {
                                var src = n.getAttribute('src'),
                                    _type = (0, _media2.formatType)(src, n.getAttribute('type'));
                                mediaFiles.push({ type: _type, src: processURL(src, _type) });
                            }
                        }
                        break;
                }
            }

            t.mediaElement.id = id;
            t.mediaElement.renderers = {};
            t.mediaElement.events = {};
            t.mediaElement.promises = [];
            t.mediaElement.renderer = null;
            t.mediaElement.rendererName = null;

            t.mediaElement.changeRenderer = function (rendererName, mediaFiles) {

                var t = _this,
                    media = Object.keys(mediaFiles[0]).length > 2 ? mediaFiles[0] : mediaFiles[0].src;

                if (t.mediaElement.renderer !== undefined && t.mediaElement.renderer !== null && t.mediaElement.renderer.name === rendererName) {
                    t.mediaElement.renderer.pause();
                    if (t.mediaElement.renderer.stop) {
                        t.mediaElement.renderer.stop();
                    }
                    t.mediaElement.renderer.show();
                    t.mediaElement.renderer.setSrc(media);
                    return true;
                }

                if (t.mediaElement.renderer !== undefined && t.mediaElement.renderer !== null) {
                    t.mediaElement.renderer.pause();
                    if (t.mediaElement.renderer.stop) {
                        t.mediaElement.renderer.stop();
                    }
                    t.mediaElement.renderer.hide();
                }

                var newRenderer = t.mediaElement.renderers[rendererName],
                    newRendererType = null;

                if (newRenderer !== undefined && newRenderer !== null) {
                    newRenderer.show();
                    newRenderer.setSrc(media);
                    t.mediaElement.renderer = newRenderer;
                    t.mediaElement.rendererName = rendererName;
                    return true;
                }

                var rendererArray = t.mediaElement.options.renderers.length ? t.mediaElement.options.renderers : _renderer.renderer.order;

                for (var _i = 0, total = rendererArray.length; _i < total; _i++) {
                    var index = rendererArray[_i];

                    if (index === rendererName) {
                        var rendererList = _renderer.renderer.renderers;
                        newRendererType = rendererList[index];

                        var renderOptions = Object.assign(newRendererType.options, t.mediaElement.options);
                        newRenderer = newRendererType.create(t.mediaElement, renderOptions, mediaFiles);
                        newRenderer.name = rendererName;

                        t.mediaElement.renderers[newRendererType.name] = newRenderer;
                        t.mediaElement.renderer = newRenderer;
                        t.mediaElement.rendererName = rendererName;
                        newRenderer.show();
                        return true;
                    }
                }

                return false;
            };

            t.mediaElement.setSize = function (width, height) {
                if (t.mediaElement.renderer !== undefined && t.mediaElement.renderer !== null) {
                    t.mediaElement.renderer.setSize(width, height);
                }
            };

            t.mediaElement.generateError = function (message, urlList) {
                message = message || '';
                urlList = Array.isArray(urlList) ? urlList : [];
                var event = (0, _general.createEvent)('error', t.mediaElement);
                event.message = message;
                event.urls = urlList;
                t.mediaElement.dispatchEvent(event);
                error = true;
            };

            var props = _mejs2.default.html5media.properties,
                methods = _mejs2.default.html5media.methods,
                addProperty = function addProperty(obj, name, onGet, onSet) {
                    var oldValue = obj[name];
                    var getFn = function getFn() {
                        return onGet.apply(obj, [oldValue]);
                    },
                        setFn = function setFn(newValue) {
                            oldValue = onSet.apply(obj, [newValue]);
                            return oldValue;
                        };

                    Object.defineProperty(obj, name, {
                        get: getFn,
                        set: setFn
                    });
                },
                assignGettersSetters = function assignGettersSetters(propName) {
                    if (propName !== 'src') {

                        var capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1),
                            getFn = function getFn() {
                                return t.mediaElement.renderer !== undefined && t.mediaElement.renderer !== null && typeof t.mediaElement.renderer['get' + capName] === 'function' ? t.mediaElement.renderer['get' + capName]() : null;
                            },
                            setFn = function setFn(value) {
                                if (t.mediaElement.renderer !== undefined && t.mediaElement.renderer !== null && typeof t.mediaElement.renderer['set' + capName] === 'function') {
                                    t.mediaElement.renderer['set' + capName](value);
                                }
                            };

                        addProperty(t.mediaElement, propName, getFn, setFn);
                        t.mediaElement['get' + capName] = getFn;
                        t.mediaElement['set' + capName] = setFn;
                    }
                },
                getSrc = function getSrc() {
                    return t.mediaElement.renderer !== undefined && t.mediaElement.renderer !== null ? t.mediaElement.renderer.getSrc() : null;
                },
                setSrc = function setSrc(value) {
                    var mediaFiles = [];

                    if (typeof value === 'string') {
                        mediaFiles.push({
                            src: value,
                            type: value ? (0, _media2.getTypeFromFile)(value) : ''
                        });
                    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.src !== undefined) {
                        var _src = (0, _media2.absolutizeUrl)(value.src),
                            _type2 = value.type,
                            media = Object.assign(value, {
                                src: _src,
                                type: (_type2 === '' || _type2 === null || _type2 === undefined) && _src ? (0, _media2.getTypeFromFile)(_src) : _type2
                            });
                        mediaFiles.push(media);
                    } else if (Array.isArray(value)) {
                        for (var _i2 = 0, total = value.length; _i2 < total; _i2++) {

                            var _src2 = (0, _media2.absolutizeUrl)(value[_i2].src),
                                _type3 = value[_i2].type,
                                _media = Object.assign(value[_i2], {
                                    src: _src2,
                                    type: (_type3 === '' || _type3 === null || _type3 === undefined) && _src2 ? (0, _media2.getTypeFromFile)(_src2) : _type3
                                });

                            mediaFiles.push(_media);
                        }
                    }

                    var renderInfo = _renderer.renderer.select(mediaFiles, t.mediaElement.options.renderers.length ? t.mediaElement.options.renderers : []),
                        event = void 0;

                    if (!t.mediaElement.paused) {
                        t.mediaElement.pause();
                        event = (0, _general.createEvent)('pause', t.mediaElement);
                        t.mediaElement.dispatchEvent(event);
                    }
                    t.mediaElement.originalNode.src = mediaFiles[0].src || '';

                    if (renderInfo === null && mediaFiles[0].src) {
                        t.mediaElement.generateError('No renderer found', mediaFiles);
                        return;
                    }

                    return mediaFiles[0].src ? t.mediaElement.changeRenderer(renderInfo.rendererName, mediaFiles) : null;
                },
                triggerAction = function triggerAction(methodName, args) {
                    try {
                        if (methodName === 'play' && t.mediaElement.rendererName === 'native_dash') {
                            var response = t.mediaElement.renderer[methodName](args);
                            if (response && typeof response.then === 'function') {
                                response.catch(function () {
                                    if (t.mediaElement.paused) {
                                        setTimeout(function () {
                                            var tmpResponse = t.mediaElement.renderer.play();
                                            if (tmpResponse !== undefined) {
                                                tmpResponse.catch(function () {
                                                    if (!t.mediaElement.renderer.paused) {
                                                        t.mediaElement.renderer.pause();
                                                    }
                                                });
                                            }
                                        }, 150);
                                    }
                                });
                            }
                        } else {
                            t.mediaElement.renderer[methodName](args);
                        }
                    } catch (e) {
                        t.mediaElement.generateError(e, mediaFiles);
                    }
                },
                assignMethods = function assignMethods(methodName) {
                    t.mediaElement[methodName] = function () {
                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                            args[_key] = arguments[_key];
                        }

                        if (t.mediaElement.renderer !== undefined && t.mediaElement.renderer !== null && typeof t.mediaElement.renderer[methodName] === 'function') {
                            if (t.mediaElement.promises.length) {
                                Promise.all(t.mediaElement.promises).then(function () {
                                    triggerAction(methodName, args);
                                }).catch(function (e) {
                                    t.mediaElement.generateError(e, mediaFiles);
                                });
                            } else {
                                triggerAction(methodName, args);
                            }
                        }
                        return null;
                    };
                };

            addProperty(t.mediaElement, 'src', getSrc, setSrc);
            t.mediaElement.getSrc = getSrc;
            t.mediaElement.setSrc = setSrc;

            for (var _i3 = 0, total = props.length; _i3 < total; _i3++) {
                assignGettersSetters(props[_i3]);
            }

            for (var _i4 = 0, _total = methods.length; _i4 < _total; _i4++) {
                assignMethods(methods[_i4]);
            }

            t.mediaElement.addEventListener = function (eventName, callback) {
                t.mediaElement.events[eventName] = t.mediaElement.events[eventName] || [];

                t.mediaElement.events[eventName].push(callback);
            };
            t.mediaElement.removeEventListener = function (eventName, callback) {
                if (!eventName) {
                    t.mediaElement.events = {};
                    return true;
                }

                var callbacks = t.mediaElement.events[eventName];

                if (!callbacks) {
                    return true;
                }

                if (!callback) {
                    t.mediaElement.events[eventName] = [];
                    return true;
                }

                for (var _i5 = 0; _i5 < callbacks.length; _i5++) {
                    if (callbacks[_i5] === callback) {
                        t.mediaElement.events[eventName].splice(_i5, 1);
                        return true;
                    }
                }
                return false;
            };

            t.mediaElement.dispatchEvent = function (event) {
                var callbacks = t.mediaElement.events[event.type];
                if (callbacks) {
                    for (var _i6 = 0; _i6 < callbacks.length; _i6++) {
                        callbacks[_i6].apply(null, [event]);
                    }
                }
            };

            t.mediaElement.destroy = function () {
                var mediaElement = t.mediaElement.originalNode.cloneNode(true);
                var wrapper = t.mediaElement.parentElement;
                mediaElement.removeAttribute('id');
                mediaElement.remove();
                t.mediaElement.remove();
                wrapper.append(mediaElement);
            };

            if (mediaFiles.length) {
                t.mediaElement.src = mediaFiles;
            }

            if (t.mediaElement.promises.length) {
                Promise.all(t.mediaElement.promises).then(function () {
                    if (t.mediaElement.options.success) {
                        t.mediaElement.options.success(t.mediaElement, t.mediaElement.originalNode);
                    }
                }).catch(function () {
                    if (error && t.mediaElement.options.error) {
                        t.mediaElement.options.error(t.mediaElement, t.mediaElement.originalNode);
                    }
                });
            } else {
                if (t.mediaElement.options.success) {
                    t.mediaElement.options.success(t.mediaElement, t.mediaElement.originalNode);
                }

                if (error && t.mediaElement.options.error) {
                    t.mediaElement.options.error(t.mediaElement, t.mediaElement.originalNode);
                }
            }

            return t.mediaElement;
        };

        _window2.default.MediaElement = MediaElement;
        _mejs2.default.MediaElement = MediaElement;

        exports.default = MediaElement;

    }, { "2": 2, "25": 25, "27": 27, "28": 28, "3": 3, "7": 7, "8": 8 }], 7: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var mejs = {};

        mejs.version = '4.2.9';

        mejs.html5media = {
            properties: ['volume', 'src', 'currentTime', 'muted', 'duration', 'paused', 'ended', 'buffered', 'error', 'networkState', 'readyState', 'seeking', 'seekable', 'currentSrc', 'preload', 'bufferedBytes', 'bufferedTime', 'initialTime', 'startOffsetTime', 'defaultPlaybackRate', 'playbackRate', 'played', 'autoplay', 'loop', 'controls'],
            readOnlyProperties: ['duration', 'paused', 'ended', 'buffered', 'error', 'networkState', 'readyState', 'seeking', 'seekable'],

            methods: ['load', 'play', 'pause', 'canPlayType'],

            events: ['loadstart', 'durationchange', 'loadedmetadata', 'loadeddata', 'progress', 'canplay', 'canplaythrough', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'play', 'playing', 'pause', 'waiting', 'seeking', 'seeked', 'timeupdate', 'ended', 'ratechange', 'volumechange'],

            mediaTypes: ['audio/mp3', 'audio/ogg', 'audio/oga', 'audio/wav', 'audio/x-wav', 'audio/wave', 'audio/x-pn-wav', 'audio/mpeg', 'audio/mp4', 'video/mp4', 'video/webm', 'video/ogg', 'video/ogv']
        };

        _window2.default.mejs = mejs;

        exports.default = mejs;

    }, { "3": 3 }], 8: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.renderer = undefined;

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var Renderer = function () {
            function Renderer() {
                _classCallCheck(this, Renderer);

                this.renderers = {};
                this.order = [];
            }

            _createClass(Renderer, [{
                key: 'add',
                value: function add(renderer) {
                    if (renderer.name === undefined) {
                        throw new TypeError('renderer must contain at least `name` property');
                    }

                    this.renderers[renderer.name] = renderer;
                    this.order.push(renderer.name);
                }
            }, {
                key: 'select',
                value: function select(mediaFiles) {
                    var renderers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

                    var renderersLength = renderers.length;

                    renderers = renderers.length ? renderers : this.order;

                    if (!renderersLength) {
                        var rendererIndicator = [/^(html5|native)/i, /^flash/i, /iframe$/i],
                            rendererRanking = function rendererRanking(renderer) {
                                for (var i = 0, total = rendererIndicator.length; i < total; i++) {
                                    if (rendererIndicator[i].test(renderer)) {
                                        return i;
                                    }
                                }
                                return rendererIndicator.length;
                            };

                        renderers.sort(function (a, b) {
                            return rendererRanking(a) - rendererRanking(b);
                        });
                    }

                    for (var i = 0, total = renderers.length; i < total; i++) {
                        var key = renderers[i],
                            _renderer = this.renderers[key];

                        if (_renderer !== null && _renderer !== undefined) {
                            for (var j = 0, jl = mediaFiles.length; j < jl; j++) {
                                if (typeof _renderer.canPlayType === 'function' && typeof mediaFiles[j].type === 'string' && _renderer.canPlayType(mediaFiles[j].type)) {
                                    return {
                                        rendererName: _renderer.name,
                                        src: mediaFiles[j].src
                                    };
                                }
                            }
                        }
                    }

                    return null;
                }
            }, {
                key: 'order',
                set: function set(order) {
                    if (!Array.isArray(order)) {
                        throw new TypeError('order must be an array of strings.');
                    }

                    this._order = order;
                },
                get: function get() {
                    return this._order;
                }
            }, {
                key: 'renderers',
                set: function set(renderers) {
                    if (renderers !== null && (typeof renderers === 'undefined' ? 'undefined' : _typeof(renderers)) !== 'object') {
                        throw new TypeError('renderers must be an array of objects.');
                    }

                    this._renderers = renderers;
                },
                get: function get() {
                    return this._renderers;
                }
            }]);

            return Renderer;
        }();

        var renderer = exports.renderer = new Renderer();

        _mejs2.default.Renderers = renderer;

    }, { "7": 7 }], 9: [function (_dereq_, module, exports) {
        'use strict';

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _i18n = _dereq_(5);

        var _i18n2 = _interopRequireDefault(_i18n);

        var _player = _dereq_(16);

        var _player2 = _interopRequireDefault(_player);

        var _constants = _dereq_(25);

        var Features = _interopRequireWildcard(_constants);

        var _general = _dereq_(27);

        var _dom = _dereq_(26);

        var _media = _dereq_(28);

        function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        Object.assign(_player.config, {
            usePluginFullScreen: true,

            fullscreenText: null,

            useFakeFullscreen: false
        });

        Object.assign(_player2.default.prototype, {
            isFullScreen: false,

            isNativeFullScreen: false,

            isInIframe: false,

            isPluginClickThroughCreated: false,

            fullscreenMode: '',

            containerSizeTimeout: null,

            buildfullscreen: function buildfullscreen(player) {
                if (!player.isVideo) {
                    return;
                }

                player.isInIframe = _window2.default.location !== _window2.default.parent.location;

                player.detectFullscreenMode();

                var t = this,
                    fullscreenTitle = (0, _general.isString)(t.options.fullscreenText) ? t.options.fullscreenText : _i18n2.default.t('mejs.fullscreen'),
                    fullscreenBtn = _document2.default.createElement('div');

                fullscreenBtn.className = t.options.classPrefix + 'button ' + t.options.classPrefix + 'fullscreen-button';
                fullscreenBtn.innerHTML = '<button type="button" aria-controls="' + t.id + '" title="' + fullscreenTitle + '" aria-label="' + fullscreenTitle + '" tabindex="0"></button>';
                t.addControlElement(fullscreenBtn, 'fullscreen');

                fullscreenBtn.addEventListener('click', function () {
                    var isFullScreen = Features.HAS_TRUE_NATIVE_FULLSCREEN && Features.IS_FULLSCREEN || player.isFullScreen;

                    if (isFullScreen) {
                        player.exitFullScreen();
                    } else {
                        player.enterFullScreen();
                    }
                });

                player.fullscreenBtn = fullscreenBtn;

                t.options.keyActions.push({
                    keys: [70],
                    action: function action(player, media, key, event) {
                        if (!event.ctrlKey) {
                            if (typeof player.enterFullScreen !== 'undefined') {
                                if (player.isFullScreen) {
                                    player.exitFullScreen();
                                } else {
                                    player.enterFullScreen();
                                }
                            }
                        }
                    }
                });

                t.exitFullscreenCallback = function (e) {
                    var key = e.which || e.keyCode || 0;
                    if (t.options.enableKeyboard && key === 27 && (Features.HAS_TRUE_NATIVE_FULLSCREEN && Features.IS_FULLSCREEN || t.isFullScreen)) {
                        player.exitFullScreen();
                    }
                };

                t.globalBind('keydown', t.exitFullscreenCallback);

                t.normalHeight = 0;
                t.normalWidth = 0;

                if (Features.HAS_TRUE_NATIVE_FULLSCREEN) {
                    var fullscreenChanged = function fullscreenChanged() {
                        if (player.isFullScreen) {
                            if (Features.isFullScreen()) {
                                player.isNativeFullScreen = true;

                                player.setControlsSize();
                            } else {
                                player.isNativeFullScreen = false;

                                player.exitFullScreen();
                            }
                        }
                    };

                    player.globalBind(Features.FULLSCREEN_EVENT_NAME, fullscreenChanged);
                }
            },
            cleanfullscreen: function cleanfullscreen(player) {
                player.exitFullScreen();
                player.globalUnbind('keydown', player.exitFullscreenCallback);
            },
            detectFullscreenMode: function detectFullscreenMode() {
                var t = this,
                    isNative = t.media.rendererName !== null && /(native|html5)/i.test(t.media.rendererName);

                var mode = '';

                if (Features.HAS_TRUE_NATIVE_FULLSCREEN && isNative) {
                    mode = 'native-native';
                } else if (Features.HAS_TRUE_NATIVE_FULLSCREEN && !isNative) {
                    mode = 'plugin-native';
                } else if (t.usePluginFullScreen && Features.SUPPORT_POINTER_EVENTS) {
                    mode = 'plugin-click';
                }

                t.fullscreenMode = mode;
                return mode;
            },
            enterFullScreen: function enterFullScreen() {
                var t = this,
                    isNative = t.media.rendererName !== null && /(html5|native)/i.test(t.media.rendererName),
                    containerStyles = getComputedStyle(t.getElement(t.container));

                console.log('enter FS');


                if (!t.isVideo) {
                    return;
                }

                if (t.options.useFakeFullscreen === false && Features.IS_IOS && Features.HAS_IOS_FULLSCREEN && typeof t.media.originalNode.webkitEnterFullscreen === 'function' && t.media.originalNode.canPlayType((0, _media.getTypeFromFile)(t.media.getSrc()))) {
                    t.media.originalNode.webkitEnterFullscreen();
                    return;
                }

                (0, _dom.addClass)(_document2.default.documentElement, t.options.classPrefix + 'fullscreen');
                (0, _dom.addClass)(t.getElement(t.container), t.options.classPrefix + 'container-fullscreen');

                t.normalHeight = parseFloat(containerStyles.height);
                t.normalWidth = parseFloat(containerStyles.width);

                if (t.fullscreenMode === 'native-native' || t.fullscreenMode === 'plugin-native') {
                    Features.requestFullScreen(t.getElement(t.container));

                    if (t.isInIframe) {
                        setTimeout(function checkFullscreen() {

                            if (t.isNativeFullScreen) {
                                var percentErrorMargin = 0.002,
                                    windowWidth = _window2.default.innerWidth || _document2.default.documentElement.clientWidth || _document2.default.body.clientWidth,
                                    screenWidth = screen.width,
                                    absDiff = Math.abs(screenWidth - windowWidth),
                                    marginError = screenWidth * percentErrorMargin;

                                if (absDiff > marginError) {
                                    t.exitFullScreen();
                                } else {
                                    setTimeout(checkFullscreen, 500);
                                }
                            }
                        }, 1000);
                    }
                }

                t.getElement(t.container).style.width = '100%';
                t.getElement(t.container).style.height = '100%';

                t.containerSizeTimeout = setTimeout(function () {
                    t.getElement(t.container).style.width = '100%';
                    t.getElement(t.container).style.height = '100%';
                    t.setControlsSize();
                }, 500);

                if (isNative) {
                    t.node.style.width = '100%';
                    t.node.style.height = '100%';
                } else {
                    var elements = t.getElement(t.container).querySelectorAll('embed, object, video'),
                        _total = elements.length;
                    for (var i = 0; i < _total; i++) {
                        elements[i].style.width = '100%';
                        elements[i].style.height = '100%';
                    }
                }

                if (t.options.setDimensions && typeof t.media.setSize === 'function') {
                    t.media.setSize(screen.width, screen.height);
                }

                var layers = t.getElement(t.layers).children,
                    total = layers.length;
                for (var _i = 0; _i < total; _i++) {
                    layers[_i].style.width = '100%';
                    layers[_i].style.height = '100%';
                }

                if (t.fullscreenBtn) {
                    (0, _dom.removeClass)(t.fullscreenBtn, t.options.classPrefix + 'fullscreen');
                    (0, _dom.addClass)(t.fullscreenBtn, t.options.classPrefix + 'unfullscreen');
                }

                t.setControlsSize();
                t.isFullScreen = true;

                var zoomFactor = Math.min(screen.width / t.width, screen.height / t.height),
                    captionText = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'captions-text');
                if (captionText) {
                    captionText.style.fontSize = zoomFactor * 100 + '%';
                    captionText.style.lineHeight = 'normal';
                    t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'captions-position').style.bottom = (screen.height - t.normalHeight) / 2 - t.getElement(t.controls).offsetHeight / 2 + zoomFactor + 15 + 'px';
                }
                var event = (0, _general.createEvent)('enteredfullscreen', t.getElement(t.container));
                t.getElement(t.container).dispatchEvent(event);
            },
            exitFullScreen: function exitFullScreen() {
                var t = this,
                    isNative = t.media.rendererName !== null && /(native|html5)/i.test(t.media.rendererName);

                console.log('exit FS');

                if (!t.isVideo) {
                    return;
                }

                clearTimeout(t.containerSizeTimeout);

                if (Features.HAS_TRUE_NATIVE_FULLSCREEN && (Features.IS_FULLSCREEN || t.isFullScreen)) {
                    Features.cancelFullScreen();
                }

                (0, _dom.removeClass)(_document2.default.documentElement, t.options.classPrefix + 'fullscreen');
                (0, _dom.removeClass)(t.getElement(t.container), t.options.classPrefix + 'container-fullscreen');

                if (t.options.setDimensions) {
                    t.getElement(t.container).style.width = t.normalWidth + 'px';
                    t.getElement(t.container).style.height = t.normalHeight + 'px';

                    if (isNative) {
                        t.node.style.width = t.normalWidth + 'px';
                        t.node.style.height = t.normalHeight + 'px';
                    } else {
                        var elements = t.getElement(t.container).querySelectorAll('embed, object, video'),
                            _total2 = elements.length;
                        for (var i = 0; i < _total2; i++) {
                            elements[i].style.width = t.normalWidth + 'px';
                            elements[i].style.height = t.normalHeight + 'px';
                        }
                    }

                    if (typeof t.media.setSize === 'function') {
                        t.media.setSize(t.normalWidth, t.normalHeight);
                    }

                    var layers = t.getElement(t.layers).children,
                        total = layers.length;
                    for (var _i2 = 0; _i2 < total; _i2++) {
                        layers[_i2].style.width = t.normalWidth + 'px';
                        layers[_i2].style.height = t.normalHeight + 'px';
                    }
                }

                if (t.fullscreenBtn) {
                    (0, _dom.removeClass)(t.fullscreenBtn, t.options.classPrefix + 'unfullscreen');
                    (0, _dom.addClass)(t.fullscreenBtn, t.options.classPrefix + 'fullscreen');
                }

                t.setControlsSize();
                t.isFullScreen = false;

                var captionText = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'captions-text');
                if (captionText) {
                    captionText.style.fontSize = '';
                    captionText.style.lineHeight = '';
                    t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'captions-position').style.bottom = '';
                }
                var event = (0, _general.createEvent)('exitedfullscreen', t.getElement(t.container));
                t.getElement(t.container).dispatchEvent(event);
            }
        });

    }, { "16": 16, "2": 2, "25": 25, "26": 26, "27": 27, "28": 28, "3": 3, "5": 5 }], 10: [function (_dereq_, module, exports) {
        'use strict';

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _player = _dereq_(16);

        var _player2 = _interopRequireDefault(_player);

        var _i18n = _dereq_(5);

        var _i18n2 = _interopRequireDefault(_i18n);

        var _general = _dereq_(27);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        Object.assign(_player.config, {
            playText: null,

            pauseText: null
        });

        Object.assign(_player2.default.prototype, {
            buildplaypause: function buildplaypause(player, controls, layers, media) {
                var t = this,
                    op = t.options,
                    playTitle = (0, _general.isString)(op.playText) ? op.playText : _i18n2.default.t('mejs.play'),
                    pauseTitle = (0, _general.isString)(op.pauseText) ? op.pauseText : _i18n2.default.t('mejs.pause'),
                    play = _document2.default.createElement('div');

                play.className = t.options.classPrefix + 'button ' + t.options.classPrefix + 'playpause-button ' + t.options.classPrefix + 'play';
                play.innerHTML = '<button type="button" aria-controls="' + t.id + '" title="' + playTitle + '" aria-label="' + pauseTitle + '" tabindex="0"></button>';
                play.addEventListener('click', function () {
                    if (t.paused) {
                        t.play();
                    } else {
                        t.pause();
                    }
                });

                var playBtn = play.querySelector('button');
                t.addControlElement(play, 'playpause');

                function togglePlayPause(which) {
                    if ('play' === which) {
                        (0, _dom.removeClass)(play, t.options.classPrefix + 'play');
                        (0, _dom.removeClass)(play, t.options.classPrefix + 'replay');
                        (0, _dom.addClass)(play, t.options.classPrefix + 'pause');
                        //playBtn.setAttribute('title', pauseTitle);
                        playBtn.setAttribute('aria-label', pauseTitle);
                    } else {

                        (0, _dom.removeClass)(play, t.options.classPrefix + 'pause');
                        (0, _dom.removeClass)(play, t.options.classPrefix + 'replay');
                        (0, _dom.addClass)(play, t.options.classPrefix + 'play');
                        //playBtn.setAttribute('title', playTitle);
                        playBtn.setAttribute('aria-label', playTitle);
                    }
                }

                togglePlayPause('pse');

                media.addEventListener('loadedmetadata', function () {
                    if (media.rendererName.indexOf('flash') === -1) {
                        togglePlayPause('pse');
                    }
                });
                media.addEventListener('play', function () {
                    togglePlayPause('play');
                });
                media.addEventListener('playing', function () {
                    togglePlayPause('play');
                });
                media.addEventListener('pause', function () {
                    togglePlayPause('pse');
                });
                media.addEventListener('ended', function () {
                    if (!player.options.loop) {
                        (0, _dom.removeClass)(play, t.options.classPrefix + 'pause');
                        (0, _dom.removeClass)(play, t.options.classPrefix + 'play');
                        (0, _dom.addClass)(play, t.options.classPrefix + 'replay');
                        playBtn.setAttribute('title', playTitle);
                        playBtn.setAttribute('aria-label', playTitle);
                    }
                });
            }
        });

    }, { "16": 16, "2": 2, "26": 26, "27": 27, "5": 5 }], 11: [function (_dereq_, module, exports) {
        'use strict';

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _player = _dereq_(16);

        var _player2 = _interopRequireDefault(_player);

        var _i18n = _dereq_(5);

        var _i18n2 = _interopRequireDefault(_i18n);

        var _constants = _dereq_(25);

        var _time = _dereq_(30);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        Object.assign(_player.config, {
            enableProgressTooltip: true,

            useSmoothHover: true,

            forceLive: false
        });

        Object.assign(_player2.default.prototype, {
            buildprogress: function buildprogress(player, controls, layers, media) {

                var lastKeyPressTime = 0,
                    mouseIsDown = false,
                    startedPaused = false;

                var t = this,
                    autoRewindInitial = player.options.autoRewind,
                    tooltip = player.options.enableProgressTooltip ? '<span class="' + t.options.classPrefix + 'time-float">' + ('<span class="' + t.options.classPrefix + 'time-float-current">00:00</span>') + ('<span class="' + t.options.classPrefix + 'time-float-corner"></span>') + '</span>' : '',
                    rail = _document2.default.createElement('div');

                rail.className = t.options.classPrefix + 'time-rail';
                // Adding fake slider to verify it moves on iPhone/VoiceOver
                // <input class="' + t.options.classPrefix + 'time-total ' + t.options.classPrefix + 'time-slider" type="range" min="0" max="100" value="0" step="1" style="width:100%;"></input>
                rail.innerHTML = '<span class="' + t.options.classPrefix + 'time-total ' + t.options.classPrefix + 'time-slider">' + ('<span class="' + t.options.classPrefix + 'time-buffering"></span>') + ('<span class="' + t.options.classPrefix + 'time-loaded"></span>') + ('<span class="' + t.options.classPrefix + 'time-current"></span>') + ('<span class="' + t.options.classPrefix + 'time-hovered no-hover"></span>') + ('<span class="' + t.options.classPrefix + 'time-handle"><span class="' + t.options.classPrefix + 'time-handle-content"></span></span>') + ('' + tooltip) + '</span>';

                t.addControlElement(rail, 'progress');

                t.options.keyActions.push({
                    keys: [37, 227],
                    action: function action(player) {
                        // console.log(player);

                        // if (!isNaN(player.duration) && player.duration > 0) {
                        // 	if (player.isVideo) {
                        // 		player.showControls();
                        // 		player.startControlsTimer();
                        // 	}

                        // player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'time-total').focus();

                        // var newTime = Math.max(player.currentTime - player.options.defaultSeekBackwardInterval(player), 0);
                        // player.setCurrentTime(newTime);
                        // }
                    }
                }, {
                        keys: [39, 228],
                        action: function action(player) {

                            // if (!isNaN(player.duration) && player.duration > 0) {
                            // 	if (player.isVideo) {
                            // 		player.showControls();
                            // 		player.startControlsTimer();
                            // 	}

                            // 	player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'time-total').focus();

                            // 	var newTime = Math.min(player.currentTime + player.options.defaultSeekForwardInterval(player), player.duration);
                            // 	player.setCurrentTime(newTime);
                            // }
                        }
                    });

                t.rail = controls.querySelector('.' + t.options.classPrefix + 'time-rail');
                t.total = controls.querySelector('.' + t.options.classPrefix + 'time-total');
                t.loaded = controls.querySelector('.' + t.options.classPrefix + 'time-loaded');
                t.current = controls.querySelector('.' + t.options.classPrefix + 'time-current');
                t.handle = controls.querySelector('.' + t.options.classPrefix + 'time-handle');
                t.timefloat = controls.querySelector('.' + t.options.classPrefix + 'time-float');
                t.timefloatcurrent = controls.querySelector('.' + t.options.classPrefix + 'time-float-current');
                t.slider = controls.querySelector('.' + t.options.classPrefix + 'time-slider');
                t.hovered = controls.querySelector('.' + t.options.classPrefix + 'time-hovered');
                t.buffer = controls.querySelector('.' + t.options.classPrefix + 'time-buffering');
                t.newTime = 0;
                t.forcedHandlePause = false;
                t.setTransformStyle = function (element, value) {
                    element.style.transform = value;
                    element.style.webkitTransform = value;
                    element.style.MozTransform = value;
                    element.style.msTransform = value;
                    element.style.OTransform = value;
                };

                t.buffer.style.display = 'none';

                var handleMouseMove = function handleMouseMove(e) {
                    var totalStyles = getComputedStyle(t.total),
                        offsetStyles = (0, _dom.offset)(t.total),
                        width = t.total.offsetWidth,
                        transform = function () {
                            if (totalStyles.webkitTransform !== undefined) {
                                return 'webkitTransform';
                            } else if (totalStyles.mozTransform !== undefined) {
                                return 'mozTransform ';
                            } else if (totalStyles.oTransform !== undefined) {
                                return 'oTransform';
                            } else if (totalStyles.msTransform !== undefined) {
                                return 'msTransform';
                            } else {
                                return 'transform';
                            }
                        }(),
                        cssMatrix = function () {
                            if ('WebKitCSSMatrix' in window) {
                                return 'WebKitCSSMatrix';
                            } else if ('MSCSSMatrix' in window) {
                                return 'MSCSSMatrix';
                            } else if ('CSSMatrix' in window) {
                                return 'CSSMatrix';
                            }
                        }();

                    var percentage = 0,
                        leftPos = 0,
                        pos = 0,
                        x = void 0;

                    if (e.originalEvent && e.originalEvent.changedTouches) {
                        x = e.originalEvent.changedTouches[0].pageX;
                    } else if (e.changedTouches) {
                        x = e.changedTouches[0].pageX;
                    } else {
                        x = e.pageX;
                    }

                    if (t.getDuration()) {
                        if (x < offsetStyles.left) {
                            x = offsetStyles.left;
                        } else if (x > width + offsetStyles.left) {
                            x = width + offsetStyles.left;
                        }

                        pos = x - offsetStyles.left;
                        percentage = pos / width;
                        t.newTime = percentage <= 0.02 ? 0 : percentage * t.getDuration();

                        if (mouseIsDown && t.getCurrentTime() !== null && t.newTime.toFixed(4) !== t.getCurrentTime().toFixed(4)) {
                            t.setCurrentRailHandle(t.newTime);
                            t.updateCurrent(t.newTime);
                        }

                        if (!_constants.IS_IOS && !_constants.IS_ANDROID) {
                            if (pos < 0) {
                                pos = 0;
                            }
                            if (t.options.useSmoothHover && cssMatrix !== null && typeof window[cssMatrix] !== 'undefined') {
                                var matrix = new window[cssMatrix](getComputedStyle(t.handle)[transform]),
                                    handleLocation = matrix.m41,
                                    hoverScaleX = pos / parseFloat(getComputedStyle(t.total).width) - handleLocation / parseFloat(getComputedStyle(t.total).width);

                                t.hovered.style.left = handleLocation + 'px';
                                t.setTransformStyle(t.hovered, 'scaleX(' + hoverScaleX + ')');
                                t.hovered.setAttribute('pos', pos);

                                if (hoverScaleX >= 0) {
                                    (0, _dom.removeClass)(t.hovered, 'negative');
                                } else {
                                    (0, _dom.addClass)(t.hovered, 'negative');
                                }
                            }

                            if (t.timefloat) {
                                var half = t.timefloat.offsetWidth / 2,
                                    offsetContainer = mejs.Utils.offset(t.getElement(t.container)),
                                    tooltipStyles = getComputedStyle(t.timefloat);

                                if (x - offsetContainer.left < t.timefloat.offsetWidth) {
                                    leftPos = half;
                                } else if (x - offsetContainer.left >= t.getElement(t.container).offsetWidth - half) {
                                    leftPos = t.total.offsetWidth - half;
                                } else {
                                    leftPos = pos;
                                }

                                if ((0, _dom.hasClass)(t.getElement(t.container), t.options.classPrefix + 'long-video')) {
                                    leftPos += parseFloat(tooltipStyles.marginLeft) / 2 + t.timefloat.offsetWidth / 2;
                                }

                                t.timefloat.style.left = leftPos + 'px';
                                t.timefloatcurrent.innerHTML = (0, _time.secondsToTimeCode)(t.newTime, player.options.alwaysShowHours, player.options.showTimecodeFrameCount, player.options.framesPerSecond, player.options.secondsDecimalLength, player.options.timeFormat);
                                t.timefloat.style.display = 'block';
                            }
                        }
                    } else if (!_constants.IS_IOS && !_constants.IS_ANDROID && t.timefloat) {
                        leftPos = t.timefloat.offsetWidth + width >= t.getElement(t.container).offsetWidth ? t.timefloat.offsetWidth / 2 : 0;
                        t.timefloat.style.left = leftPos + 'px';
                        t.timefloat.style.left = leftPos + 'px';
                        t.timefloat.style.display = 'block';
                    }
                },
                    updateSlider = function updateSlider() {
                        var seconds = t.getCurrentTime(),
                            timeSliderText = _i18n2.default.t('mejs.time-slider'),
                            time = (0, _time.secondsToTimeCode)(seconds, player.options.alwaysShowHours, player.options.showTimecodeFrameCount, player.options.framesPerSecond, player.options.secondsDecimalLength, player.options.timeFormat),
                            duration = t.getDuration();

                        t.slider.setAttribute('role', 'slider');
                        t.slider.tabIndex = 0;

                        if (media.paused) {
                            t.slider.setAttribute('aria-label', timeSliderText);
                            t.slider.setAttribute('aria-valuemin', 0);
                            t.slider.setAttribute('aria-valuemax', duration || 0);
                            t.slider.setAttribute('aria-valuenow', seconds);
                            t.slider.setAttribute('aria-valuetext', time);
                        } else {
                            t.slider.setAttribute('aria-label', timeSliderText);
                            t.slider.removeAttribute('aria-valuemin');
                            t.slider.removeAttribute('aria-valuemax');
                            t.slider.removeAttribute('aria-valuenow');
                            t.slider.removeAttribute('aria-valuetext');
                        }
                    },
                    restartPlayer = function restartPlayer() {
                        if (new Date() - lastKeyPressTime >= 1000) {
                            t.play();
                        }
                    },
                    handleMouseup = function handleMouseup() {
                        if (mouseIsDown && t.getCurrentTime() !== null && t.newTime.toFixed(4) !== t.getCurrentTime().toFixed(4)) {
                            t.setCurrentTime(t.newTime);
                            t.setCurrentRailHandle(t.newTime);
                            t.updateCurrent(t.newTime);
                        }
                        if (t.forcedHandlePause) {
                            t.slider.focus();
                            t.play();
                        }
                        t.forcedHandlePause = false;
                    };

                t.slider.addEventListener('focus', function () {
                    player.options.autoRewind = false;
                });
                t.slider.addEventListener('blur', function () {
                    player.options.autoRewind = autoRewindInitial;
                });
                t.slider.addEventListener('keydown', function (e) {
                    if (new Date() - lastKeyPressTime >= 1000) {
                        startedPaused = t.paused;
                    }

                    if (t.options.enableKeyboard && t.options.keyActions.length) {

                        var keyCode = e.which || e.keyCode || 0,
                            duration = t.getDuration(),
                            seekForward = player.options.defaultSeekForwardInterval(media),
                            seekBackward = player.options.defaultSeekBackwardInterval(media);

                        var seekTime = t.getCurrentTime();
                        // var volume = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'volume-slider');

                        // if (keyCode === 38 || keyCode === 40) {
                        // 	if (volume) {
                        // 		volume.style.display = 'block';
                        // 	}
                        // 	if (t.isVideo) {
                        // 		t.showControls();
                        // 		t.startControlsTimer();
                        // 	}

                        // 	var newVolume = keyCode === 38 ? Math.min(t.volume + 0.1, 1) : Math.max(t.volume - 0.1, 0),
                        // 	    mutePlayer = newVolume <= 0;
                        // 	t.setVolume(newVolume);
                        // 	t.setMuted(mutePlayer);
                        // 	return;
                        // } else {
                        // 	if (volume) {
                        // 		volume.style.display = 'none';
                        // 	}
                        // }

                        var scrubForward = function () {
                            if (t.getDuration() !== Infinity) {
                                seekTime += seekForward;
                            }
                        };

                        var scrubBackward = function () {
                            if (t.getDuration() !== Infinity) {
                                seekTime -= seekBackward;
                            }
                        };

                        switch (keyCode) {
                            case 37:
                                // console.log(document.activeElement.classList.contains(t.options.classPrefix + 'time-slider'));
                                // console.log(t.options.classPrefix + 'time-slider');

                                scrubBackward();
                                break;
                            case 40:
                                scrubBackward();
                                break;
                            case 39:
                                scrubForward();
                                break;
                            case 38:
                                scrubForward();
                                break;
                            case 36:
                                seekTime = 0;
                                break;
                            case 35:
                                seekTime = duration;
                                break;
                            case 13:
                            case 32:
                                if (_constants.IS_FIREFOX) {
                                    if (t.paused) {
                                        t.play();
                                    } else {
                                        t.pause();
                                    }
                                }
                                return;
                            default:
                                return;
                        }

                        seekTime = seekTime < 0 ? 0 : seekTime >= duration ? duration : Math.floor(seekTime);
                        lastKeyPressTime = new Date();
                        if (!startedPaused) {
                            player.pause();
                        }

                        if (seekTime < t.getDuration() && !startedPaused) {
                            setTimeout(restartPlayer, 1100);
                        }

                        t.setCurrentTime(seekTime);
                        player.showControls();

                        e.preventDefault();
                        e.stopPropagation();
                    }
                });

                var events = ['mousedown', 'touchstart'];

                t.slider.addEventListener('dragstart', function () {
                    return false;
                });

                for (var i = 0, total = events.length; i < total; i++) {
                    t.slider.addEventListener(events[i], function (e) {
                        t.forcedHandlePause = false;
                        if (t.getDuration() !== Infinity) {
                            if (e.which === 1 || e.which === 0) {
                                if (!t.paused) {
                                    t.pause();
                                    t.forcedHandlePause = true;
                                }

                                mouseIsDown = true;
                                handleMouseMove(e);
                                var endEvents = ['mouseup', 'touchend'];

                                for (var j = 0, totalEvents = endEvents.length; j < totalEvents; j++) {
                                    t.getElement(t.container).addEventListener(endEvents[j], function (event) {
                                        var target = event.target;
                                        if (target === t.slider || target.closest('.' + t.options.classPrefix + 'time-slider')) {
                                            handleMouseMove(event);
                                        }
                                    });
                                }
                                t.globalBind('mouseup.dur touchend.dur', function () {
                                    handleMouseup();
                                    mouseIsDown = false;
                                    if (t.timefloat) {
                                        t.timefloat.style.display = 'none';
                                    }
                                });
                            }
                        }
                    }, _constants.SUPPORT_PASSIVE_EVENT && events[i] === 'touchstart' ? { passive: true } : false);
                }
                t.slider.addEventListener('mouseenter', function (e) {
                    if (e.target === t.slider && t.getDuration() !== Infinity) {
                        t.getElement(t.container).addEventListener('mousemove', function (event) {
                            var target = event.target;
                            if (target === t.slider || target.closest('.' + t.options.classPrefix + 'time-slider')) {
                                handleMouseMove(event);
                            }
                        });
                        if (t.timefloat && !_constants.IS_IOS && !_constants.IS_ANDROID) {
                            t.timefloat.style.display = 'block';
                        }
                        if (t.hovered && !_constants.IS_IOS && !_constants.IS_ANDROID && t.options.useSmoothHover) {
                            (0, _dom.removeClass)(t.hovered, 'no-hover');
                        }
                    }
                });
                t.slider.addEventListener('mouseleave', function () {
                    if (t.getDuration() !== Infinity) {
                        if (!mouseIsDown) {
                            if (t.timefloat) {
                                t.timefloat.style.display = 'none';
                            }
                            if (t.hovered && t.options.useSmoothHover) {
                                (0, _dom.addClass)(t.hovered, 'no-hover');
                            }
                        }
                    }
                });

                t.broadcastCallback = function (e) {
                    var broadcast = controls.querySelector('.' + t.options.classPrefix + 'broadcast');
                    if (!t.options.forceLive && t.getDuration() !== Infinity) {
                        if (broadcast) {
                            t.slider.style.display = '';
                            broadcast.remove();
                        }

                        player.setProgressRail(e);
                        if (!t.forcedHandlePause) {
                            player.setCurrentRail(e);
                        }
                        updateSlider();
                    } else if (!broadcast || t.options.forceLive) {
                        var label = _document2.default.createElement('span');
                        label.className = t.options.classPrefix + 'broadcast';
                        label.innerText = _i18n2.default.t('mejs.live-broadcast');
                        t.slider.style.display = 'none';
                        t.rail.appendChild(label);
                    }
                };

                media.addEventListener('progress', t.broadcastCallback);
                media.addEventListener('timeupdate', t.broadcastCallback);
                media.addEventListener('play', function () {
                    t.buffer.style.display = 'none';
                });
                media.addEventListener('playing', function () {
                    t.buffer.style.display = 'none';
                });
                media.addEventListener('seeking', function () {
                    t.buffer.style.display = '';
                });
                media.addEventListener('seeked', function () {
                    t.buffer.style.display = 'none';
                });
                media.addEventListener('pause', function () {
                    t.buffer.style.display = 'none';
                });
                media.addEventListener('waiting', function () {
                    t.buffer.style.display = '';
                });
                media.addEventListener('loadeddata', function () {
                    t.buffer.style.display = '';
                });
                media.addEventListener('canplay', function () {
                    t.buffer.style.display = 'none';
                });
                media.addEventListener('error', function () {
                    t.buffer.style.display = 'none';
                });

                t.getElement(t.container).addEventListener('controlsresize', function (e) {
                    if (t.getDuration() !== Infinity) {
                        player.setProgressRail(e);
                        if (!t.forcedHandlePause) {
                            player.setCurrentRail(e);
                        }
                    }
                });
            },
            cleanprogress: function cleanprogress(player, controls, layers, media) {
                media.removeEventListener('progress', player.broadcastCallback);
                media.removeEventListener('timeupdate', player.broadcastCallback);
                if (player.rail) {
                    player.rail.remove();
                }
            },
            setProgressRail: function setProgressRail(e) {
                var t = this,
                    target = e !== undefined ? e.detail.target || e.target : t.media;

                var percent = null;

                if (target && target.buffered && target.buffered.length > 0 && target.buffered.end && t.getDuration()) {
                    percent = target.buffered.end(target.buffered.length - 1) / t.getDuration();
                } else if (target && target.bytesTotal !== undefined && target.bytesTotal > 0 && target.bufferedBytes !== undefined) {
                    percent = target.bufferedBytes / target.bytesTotal;
                } else if (e && e.lengthComputable && e.total !== 0) {
                    percent = e.loaded / e.total;
                }

                if (percent !== null) {
                    percent = Math.min(1, Math.max(0, percent));

                    if (t.loaded) {
                        t.setTransformStyle(t.loaded, 'scaleX(' + percent + ')');
                    }
                }
            },
            setCurrentRailHandle: function setCurrentRailHandle(fakeTime) {
                var t = this;
                t.setCurrentRailMain(t, fakeTime);
            },
            setCurrentRail: function setCurrentRail() {
                var t = this;
                t.setCurrentRailMain(t);
            },
            setCurrentRailMain: function setCurrentRailMain(t, fakeTime) {
                if (t.getCurrentTime() !== undefined && t.getDuration()) {
                    var nTime = typeof fakeTime === 'undefined' ? t.getCurrentTime() : fakeTime;

                    if (t.total && t.handle) {
                        var tW = parseFloat(getComputedStyle(t.total).width);

                        var newWidth = Math.round(tW * nTime / t.getDuration()),
                            handlePos = newWidth - Math.round(t.handle.offsetWidth / 2);

                        handlePos = handlePos < 0 ? 0 : handlePos;
                        t.setTransformStyle(t.current, 'scaleX(' + newWidth / tW + ')');
                        t.setTransformStyle(t.handle, 'translateX(' + handlePos + 'px)');

                        if (t.options.useSmoothHover && !(0, _dom.hasClass)(t.hovered, 'no-hover')) {
                            var pos = parseInt(t.hovered.getAttribute('pos'), 10);
                            pos = isNaN(pos) ? 0 : pos;

                            var hoverScaleX = pos / tW - handlePos / tW;

                            t.hovered.style.left = handlePos + 'px';
                            t.setTransformStyle(t.hovered, 'scaleX(' + hoverScaleX + ')');

                            if (hoverScaleX >= 0) {
                                (0, _dom.removeClass)(t.hovered, 'negative');
                            } else {
                                (0, _dom.addClass)(t.hovered, 'negative');
                            }
                        }
                    }
                }
            }
        });

    }, { "16": 16, "2": 2, "25": 25, "26": 26, "30": 30, "5": 5 }], 12: [function (_dereq_, module, exports) {
        'use strict';

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _player = _dereq_(16);

        var _player2 = _interopRequireDefault(_player);

        var _time = _dereq_(30);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        Object.assign(_player.config, {
            duration: 0,

            timeAndDurationSeparator: '<span> | </span>'
        });

        Object.assign(_player2.default.prototype, {
            buildcurrent: function buildcurrent(player, controls, layers, media) {
                var t = this,
                    time = _document2.default.createElement('div');

                time.className = t.options.classPrefix + 'time';
                // time.setAttribute('role', 'timer');
                // time.setAttribute('aria-live', 'off');
                var timeElapsedText = mejs.i18n.t('mejs.time-elapsed');
                time.innerHTML = '<output role="timer" title="' + timeElapsedText + '" aria-label="' + timeElapsedText + '" class="' + t.options.classPrefix + 'currenttime">' + (0, _time.secondsToTimeCode)(0, player.options.alwaysShowHours, player.options.showTimecodeFrameCount, player.options.framesPerSecond, player.options.secondsDecimalLength, player.options.timeFormat) + '</output>';

                t.addControlElement(time, 'current');
                player.updateCurrent();
                t.updateTimeCallback = function () {
                    if (t.controlsAreVisible) {
                        player.updateCurrent();
                    }
                };
                media.addEventListener('timeupdate', t.updateTimeCallback);
            },
            cleancurrent: function cleancurrent(player, controls, layers, media) {
                media.removeEventListener('timeupdate', player.updateTimeCallback);
            },
            buildduration: function buildduration(player, controls, layers, media) {
                var t = this,
                    currTime = controls.lastChild.querySelector('.' + t.options.classPrefix + 'currenttime');

                if (currTime) {
                    controls.querySelector('.' + t.options.classPrefix + 'time').innerHTML += t.options.timeAndDurationSeparator + '<output class="' + t.options.classPrefix + 'duration">' + ((0, _time.secondsToTimeCode)(t.options.duration, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond, t.options.secondsDecimalLength, t.options.timeFormat) + '</output>');
                } else {
                    if (controls.querySelector('.' + t.options.classPrefix + 'currenttime')) {
                        (0, _dom.addClass)(controls.querySelector('.' + t.options.classPrefix + 'currenttime').parentNode, t.options.classPrefix + 'currenttime-container');
                    }

                    var duration = _document2.default.createElement('div');
                    duration.className = t.options.classPrefix + 'time ' + t.options.classPrefix + 'duration-container';

                    var durationTimerText = mejs.i18n.t('mejs.duration-timer');
                    duration.innerHTML = '<output role="timer" title="' + durationTimerText + '" aria-label="' + durationTimerText + '" class="' + t.options.classPrefix + 'duration">' + ((0, _time.secondsToTimeCode)(t.options.duration, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond, t.options.secondsDecimalLength, t.options.timeFormat) + '</output>');

                    t.addControlElement(duration, 'duration');
                }

                t.updateDurationCallback = function () {
                    if (t.controlsAreVisible) {
                        player.updateDuration();
                    }
                };

                media.addEventListener('timeupdate', t.updateDurationCallback);
            },
            cleanduration: function cleanduration(player, controls, layers, media) {
                media.removeEventListener('timeupdate', player.updateDurationCallback);
            },
            updateCurrent: function updateCurrent() {
                var t = this;

                var currentTime = t.getCurrentTime();

                if (isNaN(currentTime)) {
                    currentTime = 0;
                }

                var timecode = (0, _time.secondsToTimeCode)(currentTime, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond, t.options.secondsDecimalLength, t.options.timeFormat);

                if (timecode.length > 5) {
                    (0, _dom.addClass)(t.getElement(t.container), t.options.classPrefix + 'long-video');
                } else {
                    (0, _dom.removeClass)(t.getElement(t.container), t.options.classPrefix + 'long-video');
                }

                if (t.getElement(t.controls).querySelector('.' + t.options.classPrefix + 'currenttime')) {
                    t.getElement(t.controls).querySelector('.' + t.options.classPrefix + 'currenttime').innerText = timecode;
                }
            },
            updateDuration: function updateDuration() {
                var t = this;

                var duration = t.getDuration();

                if (t.media !== undefined && (isNaN(duration) || duration === Infinity || duration < 0)) {
                    t.media.duration = t.options.duration = duration = 0;
                }

                if (t.options.duration > 0) {
                    duration = t.options.duration;
                }

                var timecode = (0, _time.secondsToTimeCode)(duration, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond, t.options.secondsDecimalLength, t.options.timeFormat);

                if (timecode.length > 5) {
                    (0, _dom.addClass)(t.getElement(t.container), t.options.classPrefix + 'long-video');
                } else {
                    (0, _dom.removeClass)(t.getElement(t.container), t.options.classPrefix + 'long-video');
                }

                if (t.getElement(t.controls).querySelector('.' + t.options.classPrefix + 'duration') && duration > 0) {
                    t.getElement(t.controls).querySelector('.' + t.options.classPrefix + 'duration').innerHTML = timecode;
                }
            }
        });

    }, { "16": 16, "2": 2, "26": 26, "30": 30 }], 13: [function (_dereq_, module, exports) {
        'use strict';

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _i18n = _dereq_(5);

        var _i18n2 = _interopRequireDefault(_i18n);

        var _player = _dereq_(16);

        var _player2 = _interopRequireDefault(_player);

        var _time = _dereq_(30);

        var _general = _dereq_(27);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        Object.assign(_player.config, {
            startLanguage: '',

            tracksText: null,

            chaptersText: null,

            tracksAriaLive: false,

            hideCaptionsButtonWhenEmpty: true,

            toggleCaptionsButtonWhenOnlyOne: false,

            slidesSelector: ''
        });

        Object.assign(_player2.default.prototype, {
            hasChapters: false,

            buildtracks: function buildtracks(player, controls, layers, media) {

                this.findTracks();

                if (!player.tracks.length && (!player.trackFiles || !player.trackFiles.length === 0)) {
                    return;
                }

                var t = this,
                    attr = t.options.tracksAriaLive ? ' role="log" aria-live="assertive" aria-atomic="false"' : '',
                    tracksTitle = (0, _general.isString)(t.options.tracksText) ? t.options.tracksText : _i18n2.default.t('mejs.captions-subtitles'),
                    chaptersTitle = (0, _general.isString)(t.options.chaptersText) ? t.options.chaptersText : _i18n2.default.t('mejs.captions-chapters'),
                    total = player.trackFiles === null ? player.tracks.length : player.trackFiles.length;

                if (t.domNode.textTracks) {
                    for (var i = t.domNode.textTracks.length - 1; i >= 0; i--) {
                        t.domNode.textTracks[i].mode = 'hidden';
                    }
                }

                t.cleartracks(player);

                player.captions = _document2.default.createElement('div');
                player.captions.className = t.options.classPrefix + 'captions-layer ' + t.options.classPrefix + 'layer';
                player.captions.innerHTML = '<div class="' + t.options.classPrefix + 'captions-position ' + t.options.classPrefix + 'captions-position-hover"' + attr + '>' + ('<span class="' + t.options.classPrefix + 'captions-text"></span>') + '</div>';
                player.captions.style.display = 'none';
                layers.insertBefore(player.captions, layers.firstChild);

                player.captionsText = player.captions.querySelector('.' + t.options.classPrefix + 'captions-text');

                player.captionsButton = _document2.default.createElement('div');
                player.captionsButton.className = t.options.classPrefix + 'button ' + t.options.classPrefix + 'captions-button';
                player.captionsButton.innerHTML = '<button type="button" aria-controls="' + t.id + '" title="' + tracksTitle + '" aria-label="' + tracksTitle + '" tabindex="0"></button>' + ('<div class="' + t.options.classPrefix + 'captions-selector ' + t.options.classPrefix + 'offscreen">') + ('<ul class="' + t.options.classPrefix + 'captions-selector-list">') + ('<li class="' + t.options.classPrefix + 'captions-selector-list-item">') + ('<input type="radio" class="' + t.options.classPrefix + 'captions-selector-input" ') + ('name="' + player.id + '_captions" id="' + player.id + '_captions_none" ') + 'value="none" checked disabled>' + ('<label class="' + t.options.classPrefix + 'captions-selector-label ') + (t.options.classPrefix + 'captions-selected" ') + ('for="' + player.id + '_captions_none">' + _i18n2.default.t('mejs.none') + '</label>') + '</li>' + '</ul>' + '</div>';

                t.addControlElement(player.captionsButton, 'tracks');

                player.captionsButton.querySelector('.' + t.options.classPrefix + 'captions-selector-input').disabled = false;

                player.chaptersButton = _document2.default.createElement('div');
                player.chaptersButton.className = t.options.classPrefix + 'button ' + t.options.classPrefix + 'chapters-button';
                player.chaptersButton.innerHTML = '<button type="button" aria-controls="' + t.id + '" title="' + chaptersTitle + '" aria-label="' + chaptersTitle + '" tabindex="0"></button>' + ('<div class="' + t.options.classPrefix + 'chapters-selector ' + t.options.classPrefix + 'offscreen">') + ('<ul class="' + t.options.classPrefix + 'chapters-selector-list"></ul>') + '</div>';

                var subtitleCount = 0;

                for (var _i = 0; _i < total; _i++) {
                    var kind = player.tracks[_i].kind,
                        src = player.tracks[_i].src;
                    if (src.trim()) {
                        if (kind === 'subtitles' || kind === 'captions') {
                            subtitleCount++;
                        } else if (kind === 'chapters' && !controls.querySelector('.' + t.options.classPrefix + 'chapter-selector')) {
                            player.captionsButton.parentNode.insertBefore(player.chaptersButton, player.captionsButton);
                        }
                    }
                }

                player.trackToLoad = -1;
                player.selectedTrack = null;
                player.isLoadingTrack = false;

                for (var _i2 = 0; _i2 < total; _i2++) {
                    var _kind = player.tracks[_i2].kind;
                    if (player.tracks[_i2].src.trim() && (_kind === 'subtitles' || _kind === 'captions')) {
                        player.addTrackButton(player.tracks[_i2].trackId, player.tracks[_i2].srclang, player.tracks[_i2].label);
                    }
                }

                player.loadNextTrack();

                var inEvents = ['mouseenter', 'focusin'],
                    outEvents = ['mouseleave', 'focusout'];

                if (t.options.toggleCaptionsButtonWhenOnlyOne && subtitleCount === 1) {
                    player.captionsButton.addEventListener('click', function (e) {
                        var trackId = 'none';
                        if (player.selectedTrack === null) {
                            trackId = player.tracks[0].trackId;
                        }
                        var keyboard = e.keyCode || e.which;
                        player.setTrack(trackId, typeof keyboard !== 'undefined');
                    });
                } else {
                    var labels = player.captionsButton.querySelectorAll('.' + t.options.classPrefix + 'captions-selector-label'),
                        captions = player.captionsButton.querySelectorAll('input[type=radio]');

                    for (var _i3 = 0, _total = inEvents.length; _i3 < _total; _i3++) {
                        player.captionsButton.addEventListener(inEvents[_i3], function () {
                            (0, _dom.removeClass)(this.querySelector('.' + t.options.classPrefix + 'captions-selector'), t.options.classPrefix + 'offscreen');
                        });
                    }

                    for (var _i4 = 0, _total2 = outEvents.length; _i4 < _total2; _i4++) {
                        player.captionsButton.addEventListener(outEvents[_i4], function () {
                            (0, _dom.addClass)(this.querySelector('.' + t.options.classPrefix + 'captions-selector'), t.options.classPrefix + 'offscreen');
                        });
                    }

                    for (var _i5 = 0, _total3 = captions.length; _i5 < _total3; _i5++) {
                        captions[_i5].addEventListener('click', function (e) {
                            var keyboard = e.keyCode || e.which;
                            player.setTrack(this.value, typeof keyboard !== 'undefined');
                        });
                    }

                    for (var _i6 = 0, _total4 = labels.length; _i6 < _total4; _i6++) {
                        labels[_i6].addEventListener('click', function (e) {
                            var radio = (0, _dom.siblings)(this, function (el) {
                                return el.tagName === 'INPUT';
                            })[0],
                                event = (0, _general.createEvent)('click', radio);
                            radio.dispatchEvent(event);
                            e.preventDefault();
                        });
                    }

                    player.captionsButton.addEventListener('keydown', function (e) {
                        e.stopPropagation();
                    });
                }

                for (var _i7 = 0, _total5 = inEvents.length; _i7 < _total5; _i7++) {
                    player.chaptersButton.addEventListener(inEvents[_i7], function () {
                        if (this.querySelector('.' + t.options.classPrefix + 'chapters-selector-list').children.length) {
                            (0, _dom.removeClass)(this.querySelector('.' + t.options.classPrefix + 'chapters-selector'), t.options.classPrefix + 'offscreen');
                        }
                    });
                }

                for (var _i8 = 0, _total6 = outEvents.length; _i8 < _total6; _i8++) {
                    player.chaptersButton.addEventListener(outEvents[_i8], function () {
                        (0, _dom.addClass)(this.querySelector('.' + t.options.classPrefix + 'chapters-selector'), t.options.classPrefix + 'offscreen');
                    });
                }

                player.chaptersButton.addEventListener('keydown', function (e) {
                    e.stopPropagation();
                });

                if (!player.options.alwaysShowControls) {
                    player.getElement(player.container).addEventListener('controlsshown', function () {
                        (0, _dom.addClass)(player.getElement(player.container).querySelector('.' + t.options.classPrefix + 'captions-position'), t.options.classPrefix + 'captions-position-hover');
                    });

                    player.getElement(player.container).addEventListener('controlshidden', function () {
                        if (!media.paused) {
                            (0, _dom.removeClass)(player.getElement(player.container).querySelector('.' + t.options.classPrefix + 'captions-position'), t.options.classPrefix + 'captions-position-hover');
                        }
                    });
                } else {
                    (0, _dom.addClass)(player.getElement(player.container).querySelector('.' + t.options.classPrefix + 'captions-position'), t.options.classPrefix + 'captions-position-hover');
                }

                media.addEventListener('timeupdate', function () {
                    player.displayCaptions();
                });

                if (player.options.slidesSelector !== '') {
                    player.slidesContainer = _document2.default.querySelectorAll(player.options.slidesSelector);

                    media.addEventListener('timeupdate', function () {
                        player.displaySlides();
                    });
                }
            },
            cleartracks: function cleartracks(player) {
                if (player) {
                    if (player.captions) {
                        player.captions.remove();
                    }
                    if (player.chapters) {
                        player.chapters.remove();
                    }
                    if (player.captionsText) {
                        player.captionsText.remove();
                    }
                    if (player.captionsButton) {
                        player.captionsButton.remove();
                    }
                    if (player.chaptersButton) {
                        player.chaptersButton.remove();
                    }
                }
            },
            rebuildtracks: function rebuildtracks() {
                var t = this;
                t.findTracks();
                t.buildtracks(t, t.getElement(t.controls), t.getElement(t.layers), t.media);
            },
            findTracks: function findTracks() {
                var t = this,
                    tracktags = t.trackFiles === null ? t.node.querySelectorAll('track') : t.trackFiles,
                    total = tracktags.length;

                t.tracks = [];
                for (var i = 0; i < total; i++) {
                    var track = tracktags[i],
                        srclang = track.getAttribute('srclang').toLowerCase() || '',
                        trackId = t.id + '_track_' + i + '_' + track.getAttribute('kind') + '_' + srclang;
                    t.tracks.push({
                        trackId: trackId,
                        srclang: srclang,
                        src: track.getAttribute('src'),
                        kind: track.getAttribute('kind'),
                        label: track.getAttribute('label') || '',
                        entries: [],
                        isLoaded: false
                    });
                }
            },
            setTrack: function setTrack(trackId, setByKeyboard) {

                var t = this,
                    radios = t.captionsButton.querySelectorAll('input[type="radio"]'),
                    captions = t.captionsButton.querySelectorAll('.' + t.options.classPrefix + 'captions-selected'),
                    track = t.captionsButton.querySelector('input[value="' + trackId + '"]');

                for (var i = 0, total = radios.length; i < total; i++) {
                    radios[i].checked = false;
                }

                for (var _i9 = 0, _total7 = captions.length; _i9 < _total7; _i9++) {
                    (0, _dom.removeClass)(captions[_i9], t.options.classPrefix + 'captions-selected');
                }

                track.checked = true;
                var labels = (0, _dom.siblings)(track, function (el) {
                    return (0, _dom.hasClass)(el, t.options.classPrefix + 'captions-selector-label');
                });
                for (var _i10 = 0, _total8 = labels.length; _i10 < _total8; _i10++) {
                    (0, _dom.addClass)(labels[_i10], t.options.classPrefix + 'captions-selected');
                }

                if (trackId === 'none') {
                    t.selectedTrack = null;
                    (0, _dom.removeClass)(t.captionsButton, t.options.classPrefix + 'captions-enabled');
                } else {
                    for (var _i11 = 0, _total9 = t.tracks.length; _i11 < _total9; _i11++) {
                        var _track = t.tracks[_i11];
                        if (_track.trackId === trackId) {
                            if (t.selectedTrack === null) {
                                (0, _dom.addClass)(t.captionsButton, t.options.classPrefix + 'captions-enabled');
                            }
                            t.selectedTrack = _track;
                            t.captions.setAttribute('lang', t.selectedTrack.srclang);
                            t.displayCaptions();
                            break;
                        }
                    }
                }

                var event = (0, _general.createEvent)('captionschange', t.media);
                event.detail.caption = t.selectedTrack;
                t.media.dispatchEvent(event);

                if (!setByKeyboard) {
                    setTimeout(function () {
                        t.getElement(t.container).focus();
                    }, 500);
                }
            },
            loadNextTrack: function loadNextTrack() {
                var t = this;

                t.trackToLoad++;
                if (t.trackToLoad < t.tracks.length) {
                    t.isLoadingTrack = true;
                    t.loadTrack(t.trackToLoad);
                } else {
                    t.isLoadingTrack = false;
                    t.checkForTracks();
                }
            },
            loadTrack: function loadTrack(index) {
                var t = this,
                    track = t.tracks[index];

                if (track !== undefined && (track.src !== undefined || track.src !== "")) {
                    (0, _dom.ajax)(track.src, 'text', function (d) {
                        track.entries = typeof d === 'string' && /<tt\s+xml/ig.exec(d) ? _mejs2.default.TrackFormatParser.dfxp.parse(d) : _mejs2.default.TrackFormatParser.webvtt.parse(d);

                        track.isLoaded = true;
                        t.enableTrackButton(track);
                        t.loadNextTrack();

                        if (track.kind === 'slides') {
                            t.setupSlides(track);
                        } else if (track.kind === 'chapters' && !t.hasChapters) {
                            t.drawChapters(track);
                            t.hasChapters = true;
                        }
                    }, function () {
                        t.removeTrackButton(track.trackId);
                        t.loadNextTrack();
                    });
                }
            },
            enableTrackButton: function enableTrackButton(track) {
                var t = this,
                    lang = track.srclang,
                    target = _document2.default.getElementById('' + track.trackId);

                if (!target) {
                    return;
                }

                var label = track.label;

                if (label === '') {
                    label = _i18n2.default.t(_mejs2.default.language.codes[lang]) || lang;
                }
                target.disabled = false;
                var targetSiblings = (0, _dom.siblings)(target, function (el) {
                    return (0, _dom.hasClass)(el, t.options.classPrefix + 'captions-selector-label');
                });
                for (var i = 0, total = targetSiblings.length; i < total; i++) {
                    targetSiblings[i].innerHTML = label;
                }

                if (t.options.startLanguage === lang) {
                    target.checked = true;
                    var event = (0, _general.createEvent)('click', target);
                    target.dispatchEvent(event);
                }
            },
            removeTrackButton: function removeTrackButton(trackId) {
                var element = _document2.default.getElementById('' + trackId);
                if (element) {
                    var button = element.closest('li');
                    if (button) {
                        button.remove();
                    }
                }
            },
            addTrackButton: function addTrackButton(trackId, lang, label) {
                var t = this;
                if (label === '') {
                    label = _i18n2.default.t(_mejs2.default.language.codes[lang]) || lang;
                }

                t.captionsButton.querySelector('ul').innerHTML += '<li class="' + t.options.classPrefix + 'captions-selector-list-item">' + ('<input type="radio" class="' + t.options.classPrefix + 'captions-selector-input" ') + ('name="' + t.id + '_captions" id="' + trackId + '" value="' + trackId + '" disabled>') + ('<label class="' + t.options.classPrefix + 'captions-selector-label"') + ('for="' + trackId + '">' + label + ' (loading)</label>') + '</li>';
            },
            checkForTracks: function checkForTracks() {
                var t = this;

                var hasSubtitles = false;

                if (t.options.hideCaptionsButtonWhenEmpty) {
                    for (var i = 0, total = t.tracks.length; i < total; i++) {
                        var kind = t.tracks[i].kind;
                        if ((kind === 'subtitles' || kind === 'captions') && t.tracks[i].isLoaded) {
                            hasSubtitles = true;
                            break;
                        }
                    }

                    t.captionsButton.style.display = hasSubtitles ? '' : 'none';
                    t.setControlsSize();
                }
            },
            displayCaptions: function displayCaptions() {
                if (this.tracks === undefined) {
                    return;
                }

                var t = this,
                    track = t.selectedTrack,
                    sanitize = function sanitize(html) {
                        var div = _document2.default.createElement('div');
                        div.innerHTML = html;

                        var scripts = div.getElementsByTagName('script');
                        var i = scripts.length;
                        while (i--) {
                            scripts[i].remove();
                        }

                        var allElements = div.getElementsByTagName('*');
                        for (var _i12 = 0, n = allElements.length; _i12 < n; _i12++) {
                            var attributesObj = allElements[_i12].attributes,
                                attributes = Array.prototype.slice.call(attributesObj);

                            for (var j = 0, total = attributes.length; j < total; j++) {
                                if (attributes[j].name.startsWith('on') || attributes[j].value.startsWith('javascript')) {
                                    allElements[_i12].remove();
                                } else if (attributes[j].name === 'style') {
                                    allElements[_i12].removeAttribute(attributes[j].name);
                                }
                            }
                        }
                        return div.innerHTML;
                    };

                if (track !== null && track.isLoaded) {
                    var i = t.searchTrackPosition(track.entries, t.media.currentTime);
                    if (i > -1) {
                        t.captionsText.innerHTML = sanitize(track.entries[i].text);
                        t.captionsText.className = t.options.classPrefix + 'captions-text ' + (track.entries[i].identifier || '');
                        t.captions.style.display = '';
                        t.captions.style.height = '0px';
                        return;
                    }
                    t.captions.style.display = 'none';
                } else {
                    t.captions.style.display = 'none';
                }
            },
            setupSlides: function setupSlides(track) {
                var t = this;
                t.slides = track;
                t.slides.entries.imgs = [t.slides.entries.length];
                t.showSlide(0);
            },
            showSlide: function showSlide(index) {
                var _this = this;

                var t = this;

                if (t.tracks === undefined || t.slidesContainer === undefined) {
                    return;
                }

                var url = t.slides.entries[index].text;

                var img = t.slides.entries[index].imgs;

                if (img === undefined || img.fadeIn === undefined) {
                    var image = _document2.default.createElement('img');
                    image.src = url;
                    image.addEventListener('load', function () {
                        var self = _this,
                            visible = (0, _dom.siblings)(self, function (el) {
                                return visible(el);
                            });
                        self.style.display = 'none';
                        t.slidesContainer.innerHTML += self.innerHTML;
                        (0, _dom.fadeIn)(t.slidesContainer.querySelector(image));
                        for (var i = 0, total = visible.length; i < total; i++) {
                            (0, _dom.fadeOut)(visible[i], 400);
                        }
                    });
                    t.slides.entries[index].imgs = img = image;
                } else if (!(0, _dom.visible)(img)) {
                    var _visible = (0, _dom.siblings)(self, function (el) {
                        return _visible(el);
                    });
                    (0, _dom.fadeIn)(t.slidesContainer.querySelector(img));
                    for (var i = 0, total = _visible.length; i < total; i++) {
                        (0, _dom.fadeOut)(_visible[i]);
                    }
                }
            },
            displaySlides: function displaySlides() {
                var t = this;

                if (this.slides === undefined) {
                    return;
                }

                var slides = t.slides,
                    i = t.searchTrackPosition(slides.entries, t.media.currentTime);

                if (i > -1) {
                    t.showSlide(i);
                }
            },
            drawChapters: function drawChapters(chapters) {
                var t = this,
                    total = chapters.entries.length;

                if (!total) {
                    return;
                }

                t.chaptersButton.querySelector('ul').innerHTML = '';

                for (var i = 0; i < total; i++) {
                    t.chaptersButton.querySelector('ul').innerHTML += '<li class="' + t.options.classPrefix + 'chapters-selector-list-item" ' + 'role="menuitemcheckbox" aria-live="polite" aria-disabled="false" aria-checked="false">' + ('<input type="radio" class="' + t.options.classPrefix + 'captions-selector-input" ') + ('name="' + t.id + '_chapters" id="' + t.id + '_chapters_' + i + '" value="' + chapters.entries[i].start + '" disabled>') + ('<label class="' + t.options.classPrefix + 'chapters-selector-label"') + ('for="' + t.id + '_chapters_' + i + '">' + chapters.entries[i].text + '</label>') + '</li>';
                }

                var radios = t.chaptersButton.querySelectorAll('input[type="radio"]'),
                    labels = t.chaptersButton.querySelectorAll('.' + t.options.classPrefix + 'chapters-selector-label');

                for (var _i13 = 0, _total10 = radios.length; _i13 < _total10; _i13++) {
                    radios[_i13].disabled = false;
                    radios[_i13].checked = false;
                    radios[_i13].addEventListener('click', function (e) {
                        var self = this,
                            listItems = t.chaptersButton.querySelectorAll('li'),
                            label = (0, _dom.siblings)(self, function (el) {
                                return (0, _dom.hasClass)(el, t.options.classPrefix + 'chapters-selector-label');
                            })[0];

                        self.checked = true;
                        self.parentNode.setAttribute('aria-checked', true);
                        (0, _dom.addClass)(label, t.options.classPrefix + 'chapters-selected');
                        (0, _dom.removeClass)(t.chaptersButton.querySelector('.' + t.options.classPrefix + 'chapters-selected'), t.options.classPrefix + 'chapters-selected');

                        for (var _i14 = 0, _total11 = listItems.length; _i14 < _total11; _i14++) {
                            listItems[_i14].setAttribute('aria-checked', false);
                        }

                        var keyboard = e.keyCode || e.which;
                        if (typeof keyboard === 'undefined') {
                            setTimeout(function () {
                                t.getElement(t.container).focus();
                            }, 500);
                        }

                        t.media.setCurrentTime(parseFloat(self.value));
                        if (t.media.paused) {
                            t.media.play();
                        }
                    });
                }

                for (var _i15 = 0, _total12 = labels.length; _i15 < _total12; _i15++) {
                    labels[_i15].addEventListener('click', function (e) {
                        var radio = (0, _dom.siblings)(this, function (el) {
                            return el.tagName === 'INPUT';
                        })[0],
                            event = (0, _general.createEvent)('click', radio);
                        radio.dispatchEvent(event);
                        e.preventDefault();
                    });
                }
            },
            searchTrackPosition: function searchTrackPosition(tracks, currentTime) {
                var lo = 0,
                    hi = tracks.length - 1,
                    mid = void 0,
                    start = void 0,
                    stop = void 0;

                while (lo <= hi) {
                    mid = lo + hi >> 1;
                    start = tracks[mid].start;
                    stop = tracks[mid].stop;

                    if (currentTime >= start && currentTime < stop) {
                        return mid;
                    } else if (start < currentTime) {
                        lo = mid + 1;
                    } else if (start > currentTime) {
                        hi = mid - 1;
                    }
                }

                return -1;
            }
        });

        _mejs2.default.language = {
            codes: {
                af: 'mejs.afrikaans',
                sq: 'mejs.albanian',
                ar: 'mejs.arabic',
                be: 'mejs.belarusian',
                bg: 'mejs.bulgarian',
                ca: 'mejs.catalan',
                zh: 'mejs.chinese',
                'zh-cn': 'mejs.chinese-simplified',
                'zh-tw': 'mejs.chines-traditional',
                hr: 'mejs.croatian',
                cs: 'mejs.czech',
                da: 'mejs.danish',
                nl: 'mejs.dutch',
                en: 'mejs.english',
                et: 'mejs.estonian',
                fl: 'mejs.filipino',
                fi: 'mejs.finnish',
                fr: 'mejs.french',
                gl: 'mejs.galician',
                de: 'mejs.german',
                el: 'mejs.greek',
                ht: 'mejs.haitian-creole',
                iw: 'mejs.hebrew',
                hi: 'mejs.hindi',
                hu: 'mejs.hungarian',
                is: 'mejs.icelandic',
                id: 'mejs.indonesian',
                ga: 'mejs.irish',
                it: 'mejs.italian',
                ja: 'mejs.japanese',
                ko: 'mejs.korean',
                lv: 'mejs.latvian',
                lt: 'mejs.lithuanian',
                mk: 'mejs.macedonian',
                ms: 'mejs.malay',
                mt: 'mejs.maltese',
                no: 'mejs.norwegian',
                fa: 'mejs.persian',
                pl: 'mejs.polish',
                pt: 'mejs.portuguese',
                ro: 'mejs.romanian',
                ru: 'mejs.russian',
                sr: 'mejs.serbian',
                sk: 'mejs.slovak',
                sl: 'mejs.slovenian',
                es: 'mejs.spanish',
                sw: 'mejs.swahili',
                sv: 'mejs.swedish',
                tl: 'mejs.tagalog',
                th: 'mejs.thai',
                tr: 'mejs.turkish',
                uk: 'mejs.ukrainian',
                vi: 'mejs.vietnamese',
                cy: 'mejs.welsh',
                yi: 'mejs.yiddish'
            }
        };

        _mejs2.default.TrackFormatParser = {
            webvtt: {
                pattern: /^((?:[0-9]{1,2}:)?[0-9]{2}:[0-9]{2}([,.][0-9]{1,3})?) --\> ((?:[0-9]{1,2}:)?[0-9]{2}:[0-9]{2}([,.][0-9]{3})?)(.*)$/,

                parse: function parse(trackText) {
                    var lines = trackText.split(/\r?\n/),
                        entries = [];

                    var timecode = void 0,
                        text = void 0,
                        identifier = void 0;

                    for (var i = 0, total = lines.length; i < total; i++) {
                        timecode = this.pattern.exec(lines[i]);

                        if (timecode && i < lines.length) {
                            if (i - 1 >= 0 && lines[i - 1] !== '') {
                                identifier = lines[i - 1];
                            }
                            i++;

                            // Added by Russ
                            if (i >= total) {
                                break;
                            }

                            text = lines[i];
                            i++;
                            while (lines[i] !== '' && i < lines.length) {
                                text = text + '\n' + lines[i];
                                i++;
                            }
                            text = text.trim().replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, "<a href='$1' target='_blank'>$1</a>");
                            entries.push({
                                identifier: identifier,
                                start: (0, _time.convertSMPTEtoSeconds)(timecode[1]) === 0 ? 0.200 : (0, _time.convertSMPTEtoSeconds)(timecode[1]),
                                stop: (0, _time.convertSMPTEtoSeconds)(timecode[3]),
                                text: text,
                                settings: timecode[5]
                            });
                        }
                        identifier = '';
                    }
                    return entries;
                }
            },

            dfxp: {
                parse: function parse(trackText) {
                    trackText = $(trackText).filter('tt');
                    var container = trackText.firstChild,
                        lines = container.querySelectorAll('p'),
                        styleNode = trackText.getElementById('' + container.attr('style')),
                        entries = [];

                    var styles = void 0;

                    if (styleNode.length) {
                        styleNode.removeAttribute('id');
                        var attributes = styleNode.attributes;
                        if (attributes.length) {
                            styles = {};
                            for (var i = 0, total = attributes.length; i < total; i++) {
                                styles[attributes[i].name.split(":")[1]] = attributes[i].value;
                            }
                        }
                    }

                    for (var _i16 = 0, _total13 = lines.length; _i16 < _total13; _i16++) {
                        var style = void 0,
                            _temp = {
                                start: null,
                                stop: null,
                                style: null,
                                text: null
                            };

                        if (lines.eq(_i16).attr('begin')) {
                            _temp.start = (0, _time.convertSMPTEtoSeconds)(lines.eq(_i16).attr('begin'));
                        }
                        if (!_temp.start && lines.eq(_i16 - 1).attr('end')) {
                            _temp.start = (0, _time.convertSMPTEtoSeconds)(lines.eq(_i16 - 1).attr('end'));
                        }
                        if (lines.eq(_i16).attr('end')) {
                            _temp.stop = (0, _time.convertSMPTEtoSeconds)(lines.eq(_i16).attr('end'));
                        }
                        if (!_temp.stop && lines.eq(_i16 + 1).attr('begin')) {
                            _temp.stop = (0, _time.convertSMPTEtoSeconds)(lines.eq(_i16 + 1).attr('begin'));
                        }

                        if (styles) {
                            style = '';
                            for (var _style in styles) {
                                style += _style + ':' + styles[_style] + ';';
                            }
                        }
                        if (style) {
                            _temp.style = style;
                        }
                        if (_temp.start === 0) {
                            _temp.start = 0.200;
                        }
                        _temp.text = lines.eq(_i16).innerHTML.trim().replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, "<a href='$1' target='_blank'>$1</a>");
                        entries.push(_temp);
                    }
                    return entries;
                }
            }
        };

    }, { "16": 16, "2": 2, "26": 26, "27": 27, "30": 30, "5": 5, "7": 7 }], 14: [function (_dereq_, module, exports) {
        'use strict';

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _player = _dereq_(16);

        var _player2 = _interopRequireDefault(_player);

        var _i18n = _dereq_(5);

        var _i18n2 = _interopRequireDefault(_i18n);

        var _constants = _dereq_(25);

        var _general = _dereq_(27);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        Object.assign(_player.config, {
            muteText: null,

            unmuteText: null,

            allyVolumeControlText: null,

            hideVolumeOnTouchDevices: true,

            audioVolume: 'horizontal',

            videoVolume: 'vertical',

            startVolume: 0.8
        });

        Object.assign(_player2.default.prototype, {
            buildvolume: function buildvolume(player, controls, layers, media) {
                if ((_constants.IS_ANDROID || _constants.IS_IOS) && this.options.hideVolumeOnTouchDevices) {
                    return;
                }

                var t = this,
                    mode = t.isVideo ? t.options.videoVolume : t.options.audioVolume,
                    muteText = (0, _general.isString)(t.options.muteText) ? t.options.muteText : _i18n2.default.t('mejs.mute'),
                    unmuteText = (0, _general.isString)(t.options.unmuteText) ? t.options.unmuteText : _i18n2.default.t('mejs.unmute'),
                    volumeControlText = (0, _general.isString)(t.options.allyVolumeControlText) ? t.options.allyVolumeControlText : _i18n2.default.t('mejs.volume-help-text'),
                    mute = _document2.default.createElement('div');

                mute.className = t.options.classPrefix + 'button ' + t.options.classPrefix + 'volume-button ' + t.options.classPrefix + 'mute';
                mute.innerHTML = mode === 'horizontal' ? '<button type="button" aria-controls="' + t.id + '" title="' + muteText + '" aria-label="' + muteText + '" tabindex="0"></button>' : '<button type="button" aria-controls="' + t.id + '" title="' + muteText + '" aria-label="' + muteText + '" tabindex="0"></button>' + ('<a href="javascript:void(0);" class="' + t.options.classPrefix + 'volume-slider" ') + ('aria-label="' + _i18n2.default.t('mejs.volume-slider') + '" aria-valuemin="0" aria-valuemax="100" role="slider" ') + 'aria-orientation="vertical">' + ('<span class="' + t.options.classPrefix + 'offscreen">' + volumeControlText + '</span>') + ('<div class="' + t.options.classPrefix + 'volume-total">') + ('<div class="' + t.options.classPrefix + 'volume-current"></div>') + ('<div class="' + t.options.classPrefix + 'volume-handle"></div>') + '</div>' + '</a>';

                t.addControlElement(mute, 'volume');

                t.options.keyActions.push(
                    // 	{
                    // 	keys: [38],
                    // 	action: function action(player) {
                    // 		// var volumeSlider = player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'volume-slider');
                    // 		// if (volumeSlider || player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'volume-slider').matches(':focus')) {
                    // 		// 	volumeSlider.style.display = 'block';
                    // 		// }
                    // 		// if (player.isVideo) {
                    // 		// 	player.showControls();
                    // 		// 	player.startControlsTimer();
                    // 		// }

                    // 		// var newVolume = Math.min(player.volume + 0.1, 1);
                    // 		// player.setVolume(newVolume);
                    // 		// if (newVolume > 0) {
                    // 		// 	player.setMuted(false);
                    // 		// }
                    // 		console.log('38');

                    // 	}
                    // }, {
                    // 	keys: [40],
                    // 	action: function action(player) {
                    // 		// var volumeSlider = player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'volume-slider');
                    // 		// if (volumeSlider) {
                    // 		// 	volumeSlider.style.display = 'block';
                    // 		// }

                    // 		// if (player.isVideo) {
                    // 		// 	player.showControls();
                    // 		// 	player.startControlsTimer();
                    // 		// }

                    // 		// var newVolume = Math.max(player.volume - 0.1, 0);
                    // 		// player.setVolume(newVolume);

                    // 		// if (newVolume <= 0.1) {
                    // 		// 	player.setMuted(true);
                    // 		// }
                    // 		console.log('40');

                    // 	}
                    // }, 
                    {
                        keys: [77],
                        action: function action(player) {
                            player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'volume-slider').style.display = 'block';
                            if (player.isVideo) {
                                player.showControls();
                                player.startControlsTimer();
                            }
                            if (player.media.muted) {
                                player.setMuted(false);
                            } else {
                                player.setMuted(true);
                            }
                        }
                    });

                if (mode === 'horizontal') {
                    var anchor = _document2.default.createElement('a');
                    anchor.className = t.options.classPrefix + 'horizontal-volume-slider';
                    anchor.href = 'javascript:void(0);';
                    anchor.setAttribute('aria-label', _i18n2.default.t('mejs.volume-slider'));
                    anchor.setAttribute('aria-valuemin', 0);
                    anchor.setAttribute('aria-valuemax', 100);
                    anchor.setAttribute('role', 'slider');
                    anchor.innerHTML += '<span class="' + t.options.classPrefix + 'offscreen">' + volumeControlText + '</span>' + ('<div class="' + t.options.classPrefix + 'horizontal-volume-total">') + ('<div class="' + t.options.classPrefix + 'horizontal-volume-current"></div>') + ('<div class="' + t.options.classPrefix + 'horizontal-volume-handle"></div>') + '</div>';
                    mute.parentNode.insertBefore(anchor, mute.nextSibling);
                }

                var mouseIsDown = false,
                    mouseIsOver = false,
                    modified = false,
                    updateVolumeSlider = function updateVolumeSlider() {
                        var volume = Math.floor(media.volume * 100);
                        volumeSlider.setAttribute('aria-valuenow', volume);
                        volumeSlider.setAttribute('aria-valuetext', volume + '%');
                    };

                var volumeSlider = mode === 'vertical' ? t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'volume-slider') : t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'horizontal-volume-slider'),
                    volumeTotal = mode === 'vertical' ? t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'volume-total') : t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'horizontal-volume-total'),
                    volumeCurrent = mode === 'vertical' ? t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'volume-current') : t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'horizontal-volume-current'),
                    volumeHandle = mode === 'vertical' ? t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'volume-handle') : t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'horizontal-volume-handle'),
                    positionVolumeHandle = function positionVolumeHandle(volume) {

                        if (volume === null || isNaN(volume) || volume === undefined) {
                            return;
                        }

                        volume = Math.max(0, volume);
                        volume = Math.min(volume, 1);

                        if (volume === 0) {
                            (0, _dom.removeClass)(mute, t.options.classPrefix + 'mute');
                            (0, _dom.addClass)(mute, t.options.classPrefix + 'unmute');
                            var button = mute.firstElementChild;
                            //button.setAttribute('title', unmuteText);
                            button.setAttribute('aria-label', unmuteText);
                        } else {
                            (0, _dom.removeClass)(mute, t.options.classPrefix + 'unmute');
                            (0, _dom.addClass)(mute, t.options.classPrefix + 'mute');
                            var _button = mute.firstElementChild;
                            //_button.setAttribute('title', muteText);
                            _button.setAttribute('aria-label', muteText);
                        }

                        var volumePercentage = volume * 100 + '%',
                            volumeStyles = getComputedStyle(volumeHandle);

                        if (mode === 'vertical') {
                            volumeCurrent.style.bottom = 0;
                            volumeCurrent.style.height = volumePercentage;
                            volumeHandle.style.bottom = volumePercentage;
                            volumeHandle.style.marginBottom = -parseFloat(volumeStyles.height) / 2 + 'px';
                        } else {
                            volumeCurrent.style.left = 0;
                            volumeCurrent.style.width = volumePercentage;
                            volumeHandle.style.left = volumePercentage;
                            volumeHandle.style.marginLeft = -parseFloat(volumeStyles.width) / 2 + 'px';
                        }
                    },
                    handleVolumeMove = function handleVolumeMove(e) {
                        var totalOffset = (0, _dom.offset)(volumeTotal),
                            volumeStyles = getComputedStyle(volumeTotal);

                        modified = true;

                        var volume = null;

                        if (mode === 'vertical') {
                            var railHeight = parseFloat(volumeStyles.height),
                                newY = e.pageY - totalOffset.top;

                            volume = (railHeight - newY) / railHeight;

                            if (totalOffset.top === 0 || totalOffset.left === 0) {
                                return;
                            }
                        } else {
                            var railWidth = parseFloat(volumeStyles.width),
                                newX = e.pageX - totalOffset.left;

                            volume = newX / railWidth;
                        }

                        volume = Math.max(0, volume);
                        volume = Math.min(volume, 1);

                        positionVolumeHandle(volume);

                        t.setMuted(volume === 0);
                        t.setVolume(volume);

                        e.preventDefault();
                        e.stopPropagation();
                    },
                    toggleMute = function toggleMute() {
                        if (t.muted) {
                            positionVolumeHandle(0);
                            (0, _dom.removeClass)(mute, t.options.classPrefix + 'mute');
                            (0, _dom.addClass)(mute, t.options.classPrefix + 'unmute');
                        } else {
                            positionVolumeHandle(media.volume);
                            (0, _dom.removeClass)(mute, t.options.classPrefix + 'unmute');
                            (0, _dom.addClass)(mute, t.options.classPrefix + 'mute');
                        }
                    };

                player.getElement(player.container).addEventListener('keydown', function (e) {
                    var hasFocus = !!e.target.closest('.' + t.options.classPrefix + 'container');
                    if (!hasFocus && mode === 'vertical') {
                        volumeSlider.style.display = 'none';
                    }
                });

                mute.addEventListener('mouseenter', function (e) {
                    if (e.target === mute) {
                        volumeSlider.style.display = 'block';
                        mouseIsOver = true;
                        e.preventDefault();
                        e.stopPropagation();
                    }
                });
                mute.addEventListener('focusin', function () {
                    volumeSlider.style.display = 'none';
                    mouseIsOver = true;
                });

                mute.addEventListener('focusout', function (e) {
                    if ((!e.relatedTarget || e.relatedTarget && !e.relatedTarget.matches('.' + t.options.classPrefix + 'volume-slider')) && mode === 'vertical') {
                        volumeSlider.style.display = 'none';
                    }
                });
                mute.addEventListener('mouseleave', function () {
                    mouseIsOver = false;
                    if (!mouseIsDown && mode === 'vertical') {
                        volumeSlider.style.display = 'none';
                    }
                });
                mute.addEventListener('focusout', function () {
                    mouseIsOver = false;
                });
                mute.addEventListener('keydown', function (e) {
                    if (t.options.enableKeyboard && t.options.keyActions.length) {
                        var keyCode = e.which || e.keyCode || 0,
                            volume = media.volume;



                        var volumeSlider = player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'volume-slider');
                        if (volumeSlider || player.getElement(player.container).querySelector('.' + _player.config.classPrefix + 'volume-slider').matches(':focus')) {
                            volumeSlider.style.display = 'block';
                        }
                        if (player.isVideo) {
                            player.showControls();
                            player.startControlsTimer();
                        }




                        var raiseVolume = function () {
                            volume = Math.min(volume + 0.1, 1);
                        };

                        var lowerVolume = function () {
                            volume = Math.max(0, volume - 0.1);
                        };

                        switch (keyCode) {
                            case 37:
                                lowerVolume();
                                break;
                            case 38:
                                raiseVolume();
                                break;
                            case 39:
                                raiseVolume();
                                break;
                            case 40:
                                lowerVolume();
                                break;
                            default:
                                return true;
                        }

                        mouseIsDown = false;
                        positionVolumeHandle(volume);
                        media.setVolume(volume);

                        e.preventDefault();
                        e.stopPropagation();
                    }
                });
                mute.querySelector('button').addEventListener('click', function () {
                    media.setMuted(!media.muted);
                    var event = (0, _general.createEvent)('volumechange', media);
                    media.dispatchEvent(event);
                });

                volumeSlider.addEventListener('dragstart', function () {
                    return false;
                });

                volumeSlider.addEventListener('mouseover', function () {
                    mouseIsOver = true;
                });
                volumeSlider.addEventListener('focusin', function () {
                    volumeSlider.style.display = 'block';
                    mouseIsOver = true;
                });
                volumeSlider.addEventListener('focusout', function () {
                    mouseIsOver = false;
                    if (!mouseIsDown && mode === 'vertical') {
                        volumeSlider.style.display = 'none';
                    }
                });
                volumeSlider.addEventListener('mousedown', function (e) {
                    handleVolumeMove(e);
                    t.globalBind('mousemove.vol', function (event) {
                        var target = event.target;
                        if (mouseIsDown && (target === volumeSlider || target.closest(mode === 'vertical' ? '.' + t.options.classPrefix + 'volume-slider' : '.' + t.options.classPrefix + 'horizontal-volume-slider'))) {
                            handleVolumeMove(event);
                        }
                    });
                    t.globalBind('mouseup.vol', function () {
                        mouseIsDown = false;
                        if (!mouseIsOver && mode === 'vertical') {
                            volumeSlider.style.display = 'none';
                        }
                    });
                    mouseIsDown = true;
                    e.preventDefault();
                    e.stopPropagation();
                });

                media.addEventListener('volumechange', function (e) {
                    if (!mouseIsDown) {
                        toggleMute();
                    }
                    updateVolumeSlider(e);
                });

                var rendered = false;
                media.addEventListener('rendererready', function () {
                    if (!modified) {
                        setTimeout(function () {
                            rendered = true;
                            if (player.options.startVolume === 0 || media.originalNode.muted) {
                                media.setMuted(true);
                                player.options.startVolume = 0;
                            }
                            media.setVolume(player.options.startVolume);
                            t.setControlsSize();
                        }, 250);
                    }
                });

                media.addEventListener('loadedmetadata', function () {
                    setTimeout(function () {
                        if (!modified && !rendered) {
                            if (player.options.startVolume === 0 || media.originalNode.muted) {
                                media.setMuted(true);
                            }
                            media.setVolume(player.options.startVolume);
                            t.setControlsSize();
                        }
                        rendered = false;
                    }, 250);
                });

                if (player.options.startVolume === 0 || media.originalNode.muted) {
                    media.setMuted(true);
                    player.options.startVolume = 0;
                    toggleMute();
                }

                t.getElement(t.container).addEventListener('controlsresize', function () {
                    toggleMute();
                });
            }
        });

    }, { "16": 16, "2": 2, "25": 25, "26": 26, "27": 27, "5": 5 }], 15: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var EN = exports.EN = {
            'mejs.plural-form': 1,

            'mejs.download-file': 'Download File',

            'mejs.install-flash': 'You are using a browser that does not have Flash player enabled or installed. Please turn on your Flash player plugin or download the latest version from https://get.adobe.com/flashplayer/',

            'mejs.fullscreen': 'Fullscreen',

            'mejs.play': 'Play',
            'mejs.pause': 'Pause',

            'mejs.time-slider': 'Time Slider',
            'mejs.time-help-text': 'Use Left/Right Arrow keys to advance one second, Up/Down arrows to advance ten seconds.',
            'mejs.live-broadcast': 'Live Broadcast',

            'mejs.volume-help-text': 'Use Up/Down Arrow keys to increase or decrease volume.',
            'mejs.unmute': 'Unmute',
            'mejs.mute': 'Mute',
            'mejs.volume-slider': 'Volume Slider',

            'mejs.video-player': 'Video Player',
            'mejs.audio-player': 'Audio Player',

            'mejs.captions-subtitles': 'Captions/Subtitles',
            'mejs.captions-chapters': 'Chapters',
            'mejs.none': 'None',
            'mejs.afrikaans': 'Afrikaans',
            'mejs.albanian': 'Albanian',
            'mejs.arabic': 'Arabic',
            'mejs.belarusian': 'Belarusian',
            'mejs.bulgarian': 'Bulgarian',
            'mejs.catalan': 'Catalan',
            'mejs.chinese': 'Chinese',
            'mejs.chinese-simplified': 'Chinese (Simplified)',
            'mejs.chinese-traditional': 'Chinese (Traditional)',
            'mejs.croatian': 'Croatian',
            'mejs.czech': 'Czech',
            'mejs.danish': 'Danish',
            'mejs.dutch': 'Dutch',
            'mejs.english': 'English',
            'mejs.estonian': 'Estonian',
            'mejs.filipino': 'Filipino',
            'mejs.finnish': 'Finnish',
            'mejs.french': 'French',
            'mejs.galician': 'Galician',
            'mejs.german': 'German',
            'mejs.greek': 'Greek',
            'mejs.haitian-creole': 'Haitian Creole',
            'mejs.hebrew': 'Hebrew',
            'mejs.hindi': 'Hindi',
            'mejs.hungarian': 'Hungarian',
            'mejs.icelandic': 'Icelandic',
            'mejs.indonesian': 'Indonesian',
            'mejs.irish': 'Irish',
            'mejs.italian': 'Italian',
            'mejs.japanese': 'Japanese',
            'mejs.korean': 'Korean',
            'mejs.latvian': 'Latvian',
            'mejs.lithuanian': 'Lithuanian',
            'mejs.macedonian': 'Macedonian',
            'mejs.malay': 'Malay',
            'mejs.maltese': 'Maltese',
            'mejs.norwegian': 'Norwegian',
            'mejs.persian': 'Persian',
            'mejs.polish': 'Polish',
            'mejs.portuguese': 'Portuguese',
            'mejs.romanian': 'Romanian',
            'mejs.russian': 'Russian',
            'mejs.serbian': 'Serbian',
            'mejs.slovak': 'Slovak',
            'mejs.slovenian': 'Slovenian',
            'mejs.spanish': 'Spanish',
            'mejs.swahili': 'Swahili',
            'mejs.swedish': 'Swedish',
            'mejs.tagalog': 'Tagalog',
            'mejs.thai': 'Thai',
            'mejs.turkish': 'Turkish',
            'mejs.ukrainian': 'Ukrainian',
            'mejs.vietnamese': 'Vietnamese',
            'mejs.welsh': 'Welsh',
            'mejs.yiddish': 'Yiddish',

            // Added by Russ
            'mejs.time-elapsed': 'Time Elapsed',
            'mejs.duration-timer': 'Duration Timer'
        };

    }, {}], 16: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.config = undefined;

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _mediaelement = _dereq_(6);

        var _mediaelement2 = _interopRequireDefault(_mediaelement);

        var _default = _dereq_(17);

        var _default2 = _interopRequireDefault(_default);

        var _i18n = _dereq_(5);

        var _i18n2 = _interopRequireDefault(_i18n);

        var _constants = _dereq_(25);

        var _general = _dereq_(27);

        var _time = _dereq_(30);

        var _media = _dereq_(28);

        var _dom = _dereq_(26);

        var dom = _interopRequireWildcard(_dom);

        function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        _mejs2.default.mepIndex = 0;

        _mejs2.default.players = {};

        var config = exports.config = {
            poster: '',

            showPosterWhenEnded: false,

            showPosterWhenPaused: false,

            defaultVideoWidth: 480,

            defaultVideoHeight: 270,

            videoWidth: -1,

            videoHeight: -1,

            defaultAudioWidth: 400,

            defaultAudioHeight: 40,

            defaultSeekBackwardInterval: function defaultSeekBackwardInterval(media) {
                return media.getDuration() * 0.05;
            },

            defaultSeekForwardInterval: function defaultSeekForwardInterval(media) {
                return media.getDuration() * 0.05;
            },

            setDimensions: true,

            audioWidth: -1,

            audioHeight: -1,

            loop: false,

            autoRewind: true,

            enableAutosize: true,

            timeFormat: '',

            alwaysShowHours: false,

            showTimecodeFrameCount: false,

            framesPerSecond: 25,

            alwaysShowControls: false,

            hideVideoControlsOnLoad: false,

            hideVideoControlsOnPause: false,

            clickToPlayPause: true,

            controlsTimeoutDefault: 1500,

            controlsTimeoutMouseEnter: 2500,

            controlsTimeoutMouseLeave: 1000,

            iPadUseNativeControls: false,

            iPhoneUseNativeControls: false,

            AndroidUseNativeControls: false,

            features: ['playpause', 'current', 'progress', 'duration', 'tracks', 'volume', 'fullscreen'],

            useDefaultControls: false,

            isVideo: true,

            stretching: 'auto',

            classPrefix: 'mejs__',

            enableKeyboard: true,

            pauseOtherPlayers: true,

            secondsDecimalLength: 0,

            customError: null,

            keyActions: [{
                keys: [32, 179],
                action: function action(player) {

                    if (!_constants.IS_FIREFOX) {
                        if (player.paused || player.ended) {
                            player.play();
                        } else {
                            player.pause();
                        }
                    }
                }
            }]
        };

        _mejs2.default.MepDefaults = config;

        var MediaElementPlayer = function () {
            function MediaElementPlayer(node, o) {
                _classCallCheck(this, MediaElementPlayer);

                var t = this,
                    element = typeof node === 'string' ? _document2.default.getElementById(node) : node;

                if (!(t instanceof MediaElementPlayer)) {
                    return new MediaElementPlayer(element, o);
                }

                t.node = t.media = element;

                if (!t.node) {
                    return;
                }

                if (t.media.player) {
                    return t.media.player;
                }

                t.hasFocus = false;

                t.controlsAreVisible = true;

                t.controlsEnabled = true;

                t.controlsTimer = null;

                t.currentMediaTime = 0;

                t.proxy = null;

                if (o === undefined) {
                    var options = t.node.getAttribute('data-mejsoptions');
                    o = options ? JSON.parse(options) : {};
                }

                t.options = Object.assign({}, config, o);

                if (t.options.loop && !t.media.getAttribute('loop')) {
                    t.media.loop = true;
                    t.node.loop = true;
                } else if (t.media.loop) {
                    t.options.loop = true;
                }

                if (!t.options.timeFormat) {
                    t.options.timeFormat = 'mm:ss';
                    if (t.options.alwaysShowHours) {
                        t.options.timeFormat = 'hh:mm:ss';
                    }
                    if (t.options.showTimecodeFrameCount) {
                        t.options.timeFormat += ':ff';
                    }
                }

                (0, _time.calculateTimeFormat)(0, t.options, t.options.framesPerSecond || 25);

                t.id = 'mep_' + _mejs2.default.mepIndex++;

                _mejs2.default.players[t.id] = t;

                t.init();

                return t;
            }

            _createClass(MediaElementPlayer, [{
                key: 'getElement',
                value: function getElement(element) {
                    return element;
                }
            }, {
                key: 'init',
                value: function init() {
                    var t = this,
                        playerOptions = Object.assign({}, t.options, {
                            success: function success(media, domNode) {
                                t._meReady(media, domNode);
                            },
                            error: function error(e) {
                                t._handleError(e);
                            }
                        }),
                        tagName = t.node.tagName.toLowerCase();

                    t.isDynamic = tagName !== 'audio' && tagName !== 'video' && tagName !== 'iframe';
                    t.isVideo = t.isDynamic ? t.options.isVideo : tagName !== 'audio' && t.options.isVideo;
                    t.mediaFiles = null;
                    t.trackFiles = null;

                    if (_constants.IS_IPAD && t.options.iPadUseNativeControls || _constants.IS_IPHONE && t.options.iPhoneUseNativeControls) {
                        t.node.setAttribute('controls', true);

                        if (_constants.IS_IPAD && t.node.getAttribute('autoplay')) {
                            t.play();
                        }
                    } else if ((t.isVideo || !t.isVideo && (t.options.features.length || t.options.useDefaultControls)) && !(_constants.IS_ANDROID && t.options.AndroidUseNativeControls)) {
                        t.node.removeAttribute('controls');
                        var videoPlayerTitle = t.isVideo ? _i18n2.default.t('mejs.video-player') : _i18n2.default.t('mejs.audio-player');

                        var offscreen = _document2.default.createElement('span');
                        offscreen.className = t.options.classPrefix + 'offscreen';
                        offscreen.innerText = videoPlayerTitle;
                        t.media.parentNode.insertBefore(offscreen, t.media);

                        t.container = _document2.default.createElement('div');
                        t.getElement(t.container).id = t.id;
                        t.getElement(t.container).className = t.options.classPrefix + 'container ' + t.options.classPrefix + 'container-keyboard-inactive ' + t.media.className;
                        t.getElement(t.container).tabIndex = 0;
                        t.getElement(t.container).setAttribute('role', 'region');
                        t.getElement(t.container).setAttribute('aria-label', videoPlayerTitle);
                        t.getElement(t.container).setAttribute('aria-describedby', 'videoSectionID');
                        t.getElement(t.container).innerHTML = '<div class="' + t.options.classPrefix + 'inner">' + ('<div class="' + t.options.classPrefix + 'mediaelement"></div>') + ('<div class="' + t.options.classPrefix + 'layers"></div>') + ('<div class="' + t.options.classPrefix + 'controls"></div>') + '</div>';
                        t.getElement(t.container).addEventListener('focus', function (e) {
                            if (!t.controlsAreVisible && !t.hasFocus && t.controlsEnabled) {
                                t.showControls(true);

                                var btnSelector = (0, _general.isNodeAfter)(e.relatedTarget, t.getElement(t.container)) ? '.' + t.options.classPrefix + 'controls .' + t.options.classPrefix + 'button:last-child > button' : '.' + t.options.classPrefix + 'playpause-button > button',
                                    button = t.getElement(t.container).querySelector(btnSelector);

                                button.focus();
                            }
                        });
                        t.node.parentNode.insertBefore(t.getElement(t.container), t.node);

                        if (!t.options.features.length && !t.options.useDefaultControls) {
                            t.getElement(t.container).style.background = 'transparent';
                            t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'controls').style.display = 'none';
                        }

                        if (t.isVideo && t.options.stretching === 'fill' && !dom.hasClass(t.getElement(t.container).parentNode, t.options.classPrefix + 'fill-container')) {
                            t.outerContainer = t.media.parentNode;

                            var wrapper = _document2.default.createElement('div');
                            wrapper.className = t.options.classPrefix + 'fill-container';
                            t.getElement(t.container).parentNode.insertBefore(wrapper, t.getElement(t.container));
                            wrapper.appendChild(t.getElement(t.container));
                        }

                        if (_constants.IS_ANDROID) {
                            dom.addClass(t.getElement(t.container), t.options.classPrefix + 'android');
                        }
                        if (_constants.IS_IOS) {
                            dom.addClass(t.getElement(t.container), t.options.classPrefix + 'ios');
                        }
                        if (_constants.IS_IPAD) {
                            dom.addClass(t.getElement(t.container), t.options.classPrefix + 'ipad');
                        }
                        if (_constants.IS_IPHONE) {
                            dom.addClass(t.getElement(t.container), t.options.classPrefix + 'iphone');
                        }
                        dom.addClass(t.getElement(t.container), t.isVideo ? t.options.classPrefix + 'video' : t.options.classPrefix + 'audio');

                        if (_constants.IS_SAFARI && !_constants.IS_IOS) {

                            dom.addClass(t.getElement(t.container), t.options.classPrefix + 'hide-cues');

                            var cloneNode = t.node.cloneNode(),
                                children = t.node.children,
                                mediaFiles = [],
                                tracks = [];

                            for (var i = 0, total = children.length; i < total; i++) {
                                var childNode = children[i];

                                (function () {
                                    switch (childNode.tagName.toLowerCase()) {
                                        case 'source':
                                            var elements = {};
                                            Array.prototype.slice.call(childNode.attributes).forEach(function (item) {
                                                elements[item.name] = item.value;
                                            });
                                            elements.type = (0, _media.formatType)(elements.src, elements.type);
                                            mediaFiles.push(elements);
                                            break;
                                        case 'track':
                                            childNode.mode = 'hidden';
                                            tracks.push(childNode);
                                            break;
                                        default:
                                            cloneNode.appendChild(childNode);
                                            break;
                                    }
                                })();
                            }

                            t.node.remove();
                            t.node = t.media = cloneNode;

                            if (mediaFiles.length) {
                                t.mediaFiles = mediaFiles;
                            }
                            if (tracks.length) {
                                t.trackFiles = tracks;
                            }
                        }

                        t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'mediaelement').appendChild(t.node);

                        t.media.player = t;

                        t.controls = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'controls');
                        t.layers = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'layers');

                        var tagType = t.isVideo ? 'video' : 'audio',
                            capsTagName = tagType.substring(0, 1).toUpperCase() + tagType.substring(1);

                        if (t.options[tagType + 'Width'] > 0 || t.options[tagType + 'Width'].toString().indexOf('%') > -1) {
                            t.width = t.options[tagType + 'Width'];
                        } else if (t.node.style.width !== '' && t.node.style.width !== null) {
                            t.width = t.node.style.width;
                        } else if (t.node.getAttribute('width')) {
                            t.width = t.node.getAttribute('width');
                        } else {
                            t.width = t.options['default' + capsTagName + 'Width'];
                        }

                        if (t.options[tagType + 'Height'] > 0 || t.options[tagType + 'Height'].toString().indexOf('%') > -1) {
                            t.height = t.options[tagType + 'Height'];
                        } else if (t.node.style.height !== '' && t.node.style.height !== null) {
                            t.height = t.node.style.height;
                        } else if (t.node.getAttribute('height')) {
                            t.height = t.node.getAttribute('height');
                        } else {
                            t.height = t.options['default' + capsTagName + 'Height'];
                        }

                        t.initialAspectRatio = t.height >= t.width ? t.width / t.height : t.height / t.width;

                        t.setPlayerSize(t.width, t.height);

                        playerOptions.pluginWidth = t.width;
                        playerOptions.pluginHeight = t.height;
                    } else if (!t.isVideo && !t.options.features.length && !t.options.useDefaultControls) {
                        t.node.style.display = 'none';
                    }

                    _mejs2.default.MepDefaults = playerOptions;

                    new _mediaelement2.default(t.media, playerOptions, t.mediaFiles);

                    if (t.getElement(t.container) !== undefined && t.options.features.length && t.controlsAreVisible && !t.options.hideVideoControlsOnLoad) {
                        var event = (0, _general.createEvent)('controlsshown', t.getElement(t.container));
                        t.getElement(t.container).dispatchEvent(event);
                    }
                }
            }, {
                key: 'showControls',
                value: function showControls(doAnimation) {
                    var t = this;

                    doAnimation = doAnimation === undefined || doAnimation;

                    if (t.controlsAreVisible || !t.isVideo) {
                        return;
                    }

                    if (doAnimation) {
                        (function () {
                            dom.fadeIn(t.getElement(t.controls), 200, function () {
                                dom.removeClass(t.getElement(t.controls), t.options.classPrefix + 'offscreen');
                                var event = (0, _general.createEvent)('controlsshown', t.getElement(t.container));
                                t.getElement(t.container).dispatchEvent(event);
                            });

                            var controls = t.getElement(t.container).querySelectorAll('.' + t.options.classPrefix + 'control');

                            var _loop = function _loop(i, total) {
                                dom.fadeIn(controls[i], 200, function () {
                                    dom.removeClass(controls[i], t.options.classPrefix + 'offscreen');
                                });
                            };

                            for (var i = 0, total = controls.length; i < total; i++) {
                                _loop(i, total);
                            }
                        })();
                    } else {
                        dom.removeClass(t.getElement(t.controls), t.options.classPrefix + 'offscreen');
                        t.getElement(t.controls).style.display = '';
                        t.getElement(t.controls).style.opacity = 1;

                        var controls = t.getElement(t.container).querySelectorAll('.' + t.options.classPrefix + 'control');
                        for (var i = 0, total = controls.length; i < total; i++) {
                            dom.removeClass(controls[i], t.options.classPrefix + 'offscreen');
                            controls[i].style.display = '';
                        }

                        var event = (0, _general.createEvent)('controlsshown', t.getElement(t.container));
                        t.getElement(t.container).dispatchEvent(event);
                    }

                    t.controlsAreVisible = true;
                    t.setControlsSize();
                }
            }, {
                key: 'hideControls',
                value: function hideControls(doAnimation, forceHide) {
                    var t = this;

                    doAnimation = doAnimation === undefined || doAnimation;

                    if (forceHide !== true && (!t.controlsAreVisible || t.options.alwaysShowControls || t.paused && t.readyState === 4 && (!t.options.hideVideoControlsOnLoad && t.currentTime <= 0 || !t.options.hideVideoControlsOnPause && t.currentTime > 0) || t.isVideo && !t.options.hideVideoControlsOnLoad && !t.readyState || t.ended)) {
                        return;
                    }

                    if (doAnimation) {
                        (function () {
                            dom.fadeOut(t.getElement(t.controls), 200, function () {
                                dom.addClass(t.getElement(t.controls), t.options.classPrefix + 'offscreen');
                                t.getElement(t.controls).style.display = '';
                                var event = (0, _general.createEvent)('controlshidden', t.getElement(t.container));
                                t.getElement(t.container).dispatchEvent(event);
                            });

                            var controls = t.getElement(t.container).querySelectorAll('.' + t.options.classPrefix + 'control');

                            var _loop2 = function _loop2(i, total) {
                                dom.fadeOut(controls[i], 200, function () {
                                    dom.addClass(controls[i], t.options.classPrefix + 'offscreen');
                                    controls[i].style.display = '';
                                });
                            };

                            for (var i = 0, total = controls.length; i < total; i++) {
                                _loop2(i, total);
                            }
                        })();
                    } else {
                        dom.addClass(t.getElement(t.controls), t.options.classPrefix + 'offscreen');
                        t.getElement(t.controls).style.display = '';
                        t.getElement(t.controls).style.opacity = 0;

                        var controls = t.getElement(t.container).querySelectorAll('.' + t.options.classPrefix + 'control');
                        for (var i = 0, total = controls.length; i < total; i++) {
                            dom.addClass(controls[i], t.options.classPrefix + 'offscreen');
                            controls[i].style.display = '';
                        }

                        var event = (0, _general.createEvent)('controlshidden', t.getElement(t.container));
                        t.getElement(t.container).dispatchEvent(event);
                    }

                    t.controlsAreVisible = false;
                }
            }, {
                key: 'startControlsTimer',
                value: function startControlsTimer(timeout) {
                    var t = this;

                    timeout = typeof timeout !== 'undefined' ? timeout : t.options.controlsTimeoutDefault;

                    t.killControlsTimer('start');

                    t.controlsTimer = setTimeout(function () {
                        t.hideControls();
                        t.killControlsTimer('hide');
                    }, timeout);
                }
            }, {
                key: 'killControlsTimer',
                value: function killControlsTimer() {
                    var t = this;

                    if (t.controlsTimer !== null) {
                        clearTimeout(t.controlsTimer);
                        delete t.controlsTimer;
                        t.controlsTimer = null;
                    }
                }
            }, {
                key: 'disableControls',
                value: function disableControls() {
                    var t = this;

                    t.killControlsTimer();
                    t.controlsEnabled = false;
                    t.hideControls(false, true);
                }
            }, {
                key: 'enableControls',
                value: function enableControls() {
                    var t = this;

                    t.controlsEnabled = true;
                    t.showControls(false);
                }
            }, {
                key: '_setDefaultPlayer',
                value: function _setDefaultPlayer() {
                    var t = this;
                    if (t.proxy) {
                        t.proxy.pause();
                    }
                    t.proxy = new _default2.default(t);
                    t.media.addEventListener('loadedmetadata', function () {
                        if (t.getCurrentTime() > 0 && t.currentMediaTime > 0) {
                            t.setCurrentTime(t.currentMediaTime);
                            if (!_constants.IS_IOS && !_constants.IS_ANDROID) {
                                t.play();
                            }
                        }
                    });
                }
            }, {
                key: '_meReady',
                value: function _meReady(media, domNode) {
                    var t = this,
                        autoplayAttr = domNode.getAttribute('autoplay'),
                        autoplay = !(autoplayAttr === undefined || autoplayAttr === null || autoplayAttr === 'false'),
                        isNative = media.rendererName !== null && /(native|html5)/i.test(t.media.rendererName);

                    if (t.getElement(t.controls)) {
                        t.enableControls();
                    }

                    if (t.getElement(t.container) && t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'overlay-play')) {
                        t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'overlay-play').style.display = '';
                    }

                    if (t.created) {
                        return;
                    }

                    t.created = true;
                    t.media = media;
                    t.domNode = domNode;

                    if (!(_constants.IS_ANDROID && t.options.AndroidUseNativeControls) && !(_constants.IS_IPAD && t.options.iPadUseNativeControls) && !(_constants.IS_IPHONE && t.options.iPhoneUseNativeControls)) {
                        if (!t.isVideo && !t.options.features.length && !t.options.useDefaultControls) {
                            if (autoplay && isNative) {
                                t.play();
                            }

                            if (t.options.success) {

                                if (typeof t.options.success === 'string') {
                                    _window2.default[t.options.success](t.media, t.domNode, t);
                                } else {
                                    t.options.success(t.media, t.domNode, t);
                                }
                            }

                            return;
                        }

                        t.featurePosition = {};

                        t._setDefaultPlayer();

                        t.buildposter(t, t.getElement(t.controls), t.getElement(t.layers), t.media);
                        t.buildkeyboard(t, t.getElement(t.controls), t.getElement(t.layers), t.media);
                        t.buildoverlays(t, t.getElement(t.controls), t.getElement(t.layers), t.media);

                        if (t.options.useDefaultControls) {
                            var defaultControls = ['playpause', 'current', 'progress', 'duration', 'tracks', 'volume', 'fullscreen'];
                            t.options.features = defaultControls.concat(t.options.features.filter(function (item) {
                                return defaultControls.indexOf(item) === -1;
                            }));
                        }

                        t.buildfeatures(t, t.getElement(t.controls), t.getElement(t.layers), t.media);

                        var event = (0, _general.createEvent)('controlsready', t.getElement(t.container));
                        t.getElement(t.container).dispatchEvent(event);

                        t.setPlayerSize(t.width, t.height);
                        t.setControlsSize();

                        if (t.isVideo) {
                            t.clickToPlayPauseCallback = function () {

                                if (t.options.clickToPlayPause) {
                                    var button = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'overlay-button'),
                                        pressed = button.getAttribute('aria-pressed');

                                    if (t.paused && pressed) {
                                        t.pause();
                                    } else if (t.paused) {
                                        t.play();
                                    } else {
                                        t.pause();
                                    }

                                    button.setAttribute('aria-pressed', !pressed);
                                    t.getElement(t.container).focus();
                                }
                            };

                            t.createIframeLayer();

                            t.media.addEventListener('click', t.clickToPlayPauseCallback);

                            if ((_constants.IS_ANDROID || _constants.IS_IOS) && !t.options.alwaysShowControls) {
                                t.node.addEventListener('touchstart', function () {
                                    if (t.controlsAreVisible) {
                                        t.hideControls(false);
                                    } else {
                                        if (t.controlsEnabled) {
                                            t.showControls(false);
                                        }
                                    }
                                }, _constants.SUPPORT_PASSIVE_EVENT ? { passive: true } : false);
                            } else {
                                t.getElement(t.container).addEventListener('mouseenter', function () {
                                    if (t.controlsEnabled) {
                                        if (!t.options.alwaysShowControls) {
                                            t.killControlsTimer('enter');
                                            t.showControls();
                                            t.startControlsTimer(t.options.controlsTimeoutMouseEnter);
                                        }
                                    }
                                });
                                t.getElement(t.container).addEventListener('mousemove', function () {
                                    if (t.controlsEnabled) {
                                        if (!t.controlsAreVisible) {
                                            t.showControls();
                                        }
                                        if (!t.options.alwaysShowControls) {
                                            t.startControlsTimer(t.options.controlsTimeoutMouseEnter);
                                        }
                                    }
                                });
                                t.getElement(t.container).addEventListener('mouseleave', function () {
                                    if (t.controlsEnabled) {
                                        if (!t.paused && !t.options.alwaysShowControls) {
                                            t.startControlsTimer(t.options.controlsTimeoutMouseLeave);
                                        }
                                    }
                                });
                            }

                            if (t.options.hideVideoControlsOnLoad) {
                                t.hideControls(false);
                            }

                            if (t.options.enableAutosize) {
                                t.media.addEventListener('loadedmetadata', function (e) {
                                    var target = e !== undefined ? e.detail.target || e.target : t.media;
                                    if (t.options.videoHeight <= 0 && !t.domNode.getAttribute('height') && !t.domNode.style.height && target !== null && !isNaN(target.videoHeight)) {
                                        t.setPlayerSize(target.videoWidth, target.videoHeight);
                                        t.setControlsSize();
                                        t.media.setSize(target.videoWidth, target.videoHeight);
                                    }
                                });
                            }
                        }

                        t.media.addEventListener('play', function () {
                            t.hasFocus = true;

                            // Added by Russ
                            var targetElement = t.getElement(t.container).querySelectorAll('object, embed, iframe, video');
                            if ((targetElement.length == 1) && ((targetElement[0].style.width == "0px") || (targetElement[0].style.height == "0px"))) {
                                t.resetSize();
                            }

                            for (var playerIndex in _mejs2.default.players) {
                                if (_mejs2.default.players.hasOwnProperty(playerIndex)) {
                                    var p = _mejs2.default.players[playerIndex];

                                    if (p.id !== t.id && t.options.pauseOtherPlayers && !p.paused && !p.ended) {
                                        p.pause();
                                        p.hasFocus = false;
                                    }
                                }
                            }

                            if (!(_constants.IS_ANDROID || _constants.IS_IOS) && !t.options.alwaysShowControls && t.isVideo) {
                                t.hideControls();
                            }
                        });

                        t.media.addEventListener('ended', function () {
                            if (t.options.autoRewind) {
                                try {
                                    t.setCurrentTime(0);

                                    setTimeout(function () {
                                        var loadingElement = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'overlay-loading');
                                        if (loadingElement && loadingElement.parentNode) {
                                            loadingElement.parentNode.style.display = 'none';
                                        }
                                    }, 20);
                                } catch (exp) {

                                }
                            }

                            if (typeof t.media.renderer.stop === 'function') {
                                t.media.renderer.stop();
                            } else {
                                t.pause();
                            }

                            if (t.setProgressRail) {
                                t.setProgressRail();
                            }
                            if (t.setCurrentRail) {
                                t.setCurrentRail();
                            }

                            if (t.options.loop) {
                                t.play();
                            } else if (!t.options.alwaysShowControls && t.controlsEnabled) {
                                t.showControls();
                            }
                        });

                        t.media.addEventListener('loadedmetadata', function () {

                            (0, _time.calculateTimeFormat)(t.getDuration(), t.options, t.options.framesPerSecond || 25);

                            if (t.updateDuration) {
                                t.updateDuration();
                            }
                            if (t.updateCurrent) {
                                t.updateCurrent();
                            }

                            if (!t.isFullScreen) {
                                t.setPlayerSize(t.width, t.height);
                                t.setControlsSize();
                            }
                        });

                        var duration = null;
                        t.media.addEventListener('timeupdate', function () {
                            if (!isNaN(t.getDuration()) && duration !== t.getDuration()) {
                                duration = t.getDuration();
                                (0, _time.calculateTimeFormat)(duration, t.options, t.options.framesPerSecond || 25);

                                if (t.updateDuration) {
                                    t.updateDuration();
                                }
                                if (t.updateCurrent) {
                                    t.updateCurrent();
                                }

                                t.setControlsSize();
                            }
                        });

                        t.getElement(t.container).addEventListener('click', function (e) {
                            dom.addClass(e.currentTarget, t.options.classPrefix + 'container-keyboard-inactive');
                        });

                        t.getElement(t.container).addEventListener('focusin', function (e) {
                            dom.removeClass(e.currentTarget, t.options.classPrefix + 'container-keyboard-inactive');
                            if (t.isVideo && !_constants.IS_ANDROID && !_constants.IS_IOS && t.controlsEnabled && !t.options.alwaysShowControls) {
                                t.killControlsTimer('enter');
                                t.showControls();
                                t.startControlsTimer(t.options.controlsTimeoutMouseEnter);
                            }
                        });

                        t.getElement(t.container).addEventListener('focusout', function (e) {
                            setTimeout(function () {
                                if (e.relatedTarget) {
                                    if (t.keyboardAction && !e.relatedTarget.closest('.' + t.options.classPrefix + 'container')) {
                                        t.keyboardAction = false;
                                        if (t.isVideo && !t.options.alwaysShowControls && !t.paused) {
                                            t.startControlsTimer(t.options.controlsTimeoutMouseLeave);
                                        }
                                    }
                                }
                            }, 0);
                        });

                        setTimeout(function () {
                            t.setPlayerSize(t.width, t.height);
                            t.setControlsSize();
                        }, 0);

                        t.globalResizeCallback = function () {
                            if (!(t.isFullScreen || _constants.HAS_TRUE_NATIVE_FULLSCREEN && _document2.default.webkitIsFullScreen)) {
                                t.setPlayerSize(t.width, t.height);
                            }

                            t.setControlsSize();
                        };

                        t.globalBind('resize', t.globalResizeCallback);
                    }

                    if (autoplay && isNative) {
                        t.play();
                    }

                    if (t.options.success) {
                        if (typeof t.options.success === 'string') {
                            _window2.default[t.options.success](t.media, t.domNode, t);
                        } else {
                            t.options.success(t.media, t.domNode, t);
                        }
                    }
                }
            }, {
                key: '_handleError',
                value: function _handleError(e, media, node) {
                    var t = this,
                        play = t.getElement(t.layers).querySelector('.' + t.options.classPrefix + 'overlay-play');

                    if (play) {
                        play.style.display = 'none';
                    }

                    if (t.options.error) {
                        t.options.error(e, media, node);
                    }

                    if (t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'cannotplay')) {
                        t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'cannotplay').remove();
                    }

                    var errorContainer = _document2.default.createElement('div');
                    errorContainer.className = t.options.classPrefix + 'cannotplay';
                    errorContainer.style.width = '100%';
                    errorContainer.style.height = '100%';

                    var errorContent = typeof t.options.customError === 'function' ? t.options.customError(t.media, t.media.originalNode) : t.options.customError,
                        imgError = '';

                    if (!errorContent) {
                        var poster = t.media.originalNode.getAttribute('poster');
                        if (poster) {
                            imgError = '<img src="' + poster + '" alt="' + _mejs2.default.i18n.t('mejs.download-file') + '">';
                        }

                        if (e.message) {
                            errorContent = '<p>' + e.message + '</p>';
                        }

                        if (e.urls) {
                            for (var i = 0, total = e.urls.length; i < total; i++) {
                                var url = e.urls[i];
                                errorContent += '<a href="' + url.src + '" data-type="' + url.type + '"><span>' + _mejs2.default.i18n.t('mejs.download-file') + ': ' + url.src + '</span></a>';
                            }
                        }
                    }

                    if (errorContent && t.getElement(t.layers).querySelector('.' + t.options.classPrefix + 'overlay-error')) {
                        errorContainer.innerHTML = errorContent;
                        t.getElement(t.layers).querySelector('.' + t.options.classPrefix + 'overlay-error').innerHTML = '' + imgError + errorContainer.outerHTML;
                        t.getElement(t.layers).querySelector('.' + t.options.classPrefix + 'overlay-error').parentNode.style.display = 'block';
                    }

                    if (t.controlsEnabled) {
                        t.disableControls();
                    }
                }
            }, {
                key: 'setPlayerSize',
                value: function setPlayerSize(width, height) {
                    var t = this;

                    if (!t.options.setDimensions) {
                        return false;
                    }

                    if (typeof width !== 'undefined') {
                        t.width = width;
                    }

                    if (typeof height !== 'undefined') {
                        t.height = height;
                    }

                    switch (t.options.stretching) {
                        case 'fill':
                            if (t.isVideo) {
                                t.setFillMode();
                            } else {
                                t.setDimensions(t.width, t.height);
                            }
                            break;
                        case 'responsive':
                            t.setResponsiveMode();
                            break;
                        case 'none':
                            t.setDimensions(t.width, t.height);
                            break;

                        default:
                            if (t.hasFluidMode() === true) {
                                t.setResponsiveMode();
                            } else {
                                t.setDimensions(t.width, t.height);
                            }
                            break;
                    }
                }
            }, {
                key: 'hasFluidMode',
                value: function hasFluidMode() {
                    var t = this;

                    return t.height.toString().indexOf('%') !== -1 || t.node && t.node.style.maxWidth && t.node.style.maxWidth !== 'none' && t.node.style.maxWidth !== t.width || t.node && t.node.currentStyle && t.node.currentStyle.maxWidth === '100%';
                }
            }, {
                key: 'setResponsiveMode',
                value: function setResponsiveMode() {
                    var t = this,
                        parent = function () {

                            var parentEl = void 0,
                                el = t.getElement(t.container);

                            while (el) {
                                try {
                                    if (_constants.IS_FIREFOX && el.tagName.toLowerCase() === 'html' && _window2.default.self !== _window2.default.top && _window2.default.frameElement !== null) {
                                        return _window2.default.frameElement;
                                    } else {
                                        parentEl = el.parentElement;
                                    }
                                } catch (e) {
                                    parentEl = el.parentElement;
                                }

                                if (parentEl && dom.visible(parentEl)) {
                                    return parentEl;
                                }
                                el = parentEl;
                            }

                            return null;
                        }(),
                        parentStyles = parent ? getComputedStyle(parent, null) : getComputedStyle(_document2.default.body, null),
                        nativeWidth = function () {
                            if (t.isVideo) {
                                if (t.node.videoWidth && t.node.videoWidth > 0) {
                                    return t.node.videoWidth;
                                } else if (t.node.getAttribute('width')) {
                                    return t.node.getAttribute('width');
                                } else {
                                    return t.options.defaultVideoWidth;
                                }
                            } else {
                                return t.options.defaultAudioWidth;
                            }
                        }(),
                        nativeHeight = function () {
                            if (t.isVideo) {
                                if (t.node.videoHeight && t.node.videoHeight > 0) {
                                    return t.node.videoHeight;
                                } else if (t.node.getAttribute('height')) {
                                    return t.node.getAttribute('height');
                                } else {
                                    return t.options.defaultVideoHeight;
                                }
                            } else {
                                return t.options.defaultAudioHeight;
                            }
                        }(),
                        aspectRatio = function () {
                            var ratio = 1;
                            if (!t.isVideo) {
                                return ratio;
                            }

                            if (t.node.videoWidth && t.node.videoWidth > 0 && t.node.videoHeight && t.node.videoHeight > 0) {
                                ratio = t.height >= t.width ? t.node.videoWidth / t.node.videoHeight : t.node.videoHeight / t.node.videoWidth;
                            } else {
                                ratio = t.initialAspectRatio;
                            }

                            if (isNaN(ratio) || ratio < 0.01 || ratio > 100) {
                                ratio = 1;
                            }

                            return ratio;
                        }(),
                        parentHeight = parseFloat(parentStyles.height);

                    var newHeight = void 0,
                        parentWidth = parseFloat(parentStyles.width);

                    if (t.isVideo) {
                        if (t.height === '100%') {
                            newHeight = parseFloat(parentWidth * nativeHeight / nativeWidth, 10);
                        } else {
                            newHeight = t.height >= t.width ? parseFloat(parentWidth / aspectRatio, 10) : parseFloat(parentWidth * aspectRatio, 10);
                        }
                    } else {
                        newHeight = nativeHeight;
                    }

                    if (isNaN(newHeight)) {
                        newHeight = parentHeight;
                    }

                    if (t.getElement(t.container).parentNode.length > 0 && t.getElement(t.container).parentNode.tagName.toLowerCase() === 'body') {
                        parentWidth = _window2.default.innerWidth || _document2.default.documentElement.clientWidth || _document2.default.body.clientWidth;
                        newHeight = _window2.default.innerHeight || _document2.default.documentElement.clientHeight || _document2.default.body.clientHeight;
                    }

                    if (newHeight && parentWidth) {
                        t.getElement(t.container).style.width = parentWidth + 'px';
                        t.getElement(t.container).style.height = newHeight + 'px';

                        t.node.style.width = '100%';
                        t.node.style.height = '100%';

                        if (t.isVideo && t.media.setSize) {
                            t.media.setSize(parentWidth, newHeight);
                        }

                        var layerChildren = t.getElement(t.layers).children;
                        for (var i = 0, total = layerChildren.length; i < total; i++) {
                            layerChildren[i].style.width = '100%';
                            layerChildren[i].style.height = '100%';
                        }
                    }
                }
            }, {
                key: 'setFillMode',
                value: function setFillMode() {
                    var t = this;
                    var isIframe = _window2.default.self !== _window2.default.top && _window2.default.frameElement !== null;
                    var parent = function () {
                        var parentEl = void 0,
                            el = t.getElement(t.container);

                        while (el) {
                            try {
                                if (_constants.IS_FIREFOX && el.tagName.toLowerCase() === 'html' && _window2.default.self !== _window2.default.top && _window2.default.frameElement !== null) {
                                    return _window2.default.frameElement;
                                } else {
                                    parentEl = el.parentElement;
                                }
                            } catch (e) {
                                parentEl = el.parentElement;
                            }

                            if (parentEl && dom.visible(parentEl)) {
                                return parentEl;
                            }
                            el = parentEl;
                        }

                        return null;
                    }();
                    var parentStyles = parent ? getComputedStyle(parent, null) : getComputedStyle(_document2.default.body, null);

                    if (t.node.style.height !== 'none' && t.node.style.height !== t.height) {
                        t.node.style.height = 'auto';
                    }
                    if (t.node.style.maxWidth !== 'none' && t.node.style.maxWidth !== t.width) {
                        t.node.style.maxWidth = 'none';
                    }

                    if (t.node.style.maxHeight !== 'none' && t.node.style.maxHeight !== t.height) {
                        t.node.style.maxHeight = 'none';
                    }

                    if (t.node.currentStyle) {
                        if (t.node.currentStyle.height === '100%') {
                            t.node.currentStyle.height = 'auto';
                        }
                        if (t.node.currentStyle.maxWidth === '100%') {
                            t.node.currentStyle.maxWidth = 'none';
                        }
                        if (t.node.currentStyle.maxHeight === '100%') {
                            t.node.currentStyle.maxHeight = 'none';
                        }
                    }

                    if (!isIframe && !parseFloat(parentStyles.width)) {
                        parent.style.width = t.media.offsetWidth + 'px';
                    }

                    if (!isIframe && !parseFloat(parentStyles.height)) {
                        parent.style.height = t.media.offsetHeight + 'px';
                    }

                    parentStyles = getComputedStyle(parent);

                    var parentWidth = parseFloat(parentStyles.width),
                        parentHeight = parseFloat(parentStyles.height);

                    t.setDimensions('100%', '100%');

                    var poster = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'poster>img');
                    if (poster) {
                        poster.style.display = '';
                    }

                    var targetElement = t.getElement(t.container).querySelectorAll('object, embed, iframe, video'),
                        initHeight = t.height,
                        initWidth = t.width,
                        scaleX1 = parentWidth,
                        scaleY1 = initHeight * parentWidth / initWidth,
                        scaleX2 = initWidth * parentHeight / initHeight,
                        scaleY2 = parentHeight,

                        /* Changed by Russ */
                        /* Original: bScaleOnWidth = scaleX2 > parentWidth === false, */
                        bScaleOnWidth = scaleY1 < parentHeight === true,

                        finalWidth = bScaleOnWidth ? Math.floor(scaleX1) : Math.floor(scaleX2),
                        finalHeight = bScaleOnWidth ? Math.floor(scaleY1) : Math.floor(scaleY2),
                        width = bScaleOnWidth ? parentWidth + 'px' : finalWidth + 'px',
                        height = bScaleOnWidth ? finalHeight + 'px' : parentHeight + 'px';

                    for (var i = 0, total = targetElement.length; i < total; i++) {
                        targetElement[i].style.height = height;
                        targetElement[i].style.width = width;
                        if (t.media.setSize) {
                            t.media.setSize(width, height);
                        }

                        targetElement[i].style.marginLeft = Math.floor((parentWidth - finalWidth) / 2) + 'px';

                        // Changed by Russ
                        // Original
                        // targetElement[i].style.marginTop = 0;
                        targetElement[i].style.marginTop = Math.floor((parentHeight - finalHeight) / 2) + 'px';
                    }
                }
            }, {
                key: 'setDimensions',
                value: function setDimensions(width, height) {
                    var t = this;

                    width = (0, _general.isString)(width) && width.indexOf('%') > -1 ? width : parseFloat(width) + 'px';
                    height = (0, _general.isString)(height) && height.indexOf('%') > -1 ? height : parseFloat(height) + 'px';

                    t.getElement(t.container).style.width = width;
                    t.getElement(t.container).style.height = height;

                    var layers = t.getElement(t.layers).children;
                    for (var i = 0, total = layers.length; i < total; i++) {
                        layers[i].style.width = width;
                        layers[i].style.height = height;
                    }
                }
            }, {
                key: 'setControlsSize',
                value: function setControlsSize() {
                    var t = this;

                    if (!dom.visible(t.getElement(t.container))) {
                        return;
                    }

                    if (t.rail && dom.visible(t.rail)) {
                        var totalStyles = t.total ? getComputedStyle(t.total, null) : null,
                            totalMargin = totalStyles ? parseFloat(totalStyles.marginLeft) + parseFloat(totalStyles.marginRight) : 0,
                            railStyles = getComputedStyle(t.rail),
                            railMargin = parseFloat(railStyles.marginLeft) + parseFloat(railStyles.marginRight);

                        var siblingsWidth = 0;

                        var siblings = dom.siblings(t.rail, function (el) {
                            return el !== t.rail;
                        }),
                            total = siblings.length;
                        for (var i = 0; i < total; i++) {
                            siblingsWidth += siblings[i].offsetWidth;
                        }

                        siblingsWidth += totalMargin + (totalMargin === 0 ? railMargin * 2 : railMargin) + 1;

                        t.getElement(t.container).style.minWidth = siblingsWidth + 'px';

                        var event = (0, _general.createEvent)('controlsresize', t.getElement(t.container));
                        t.getElement(t.container).dispatchEvent(event);
                    } else {
                        var children = t.getElement(t.controls).children;
                        var minWidth = 0;

                        for (var _i = 0, _total = children.length; _i < _total; _i++) {
                            minWidth += children[_i].offsetWidth;
                        }

                        t.getElement(t.container).style.minWidth = minWidth + 'px';
                    }
                }
            }, {
                key: 'addControlElement',
                value: function addControlElement(element, key) {

                    var t = this;

                    if (t.featurePosition[key] !== undefined) {
                        var child = t.getElement(t.controls).children[t.featurePosition[key] - 1];
                        child.parentNode.insertBefore(element, child.nextSibling);
                    } else {
                        t.getElement(t.controls).appendChild(element);
                        var children = t.getElement(t.controls).children;
                        for (var i = 0, total = children.length; i < total; i++) {
                            if (element === children[i]) {
                                t.featurePosition[key] = i;
                                break;
                            }
                        }
                    }
                }
            }, {
                key: 'createIframeLayer',
                value: function createIframeLayer() {
                    var t = this;

                    if (t.isVideo && t.media.rendererName !== null && t.media.rendererName.indexOf('iframe') > -1 && !_document2.default.getElementById(t.media.id + '-iframe-overlay')) {

                        var layer = _document2.default.createElement('div'),
                            target = _document2.default.getElementById(t.media.id + '_' + t.media.rendererName);

                        layer.id = t.media.id + '-iframe-overlay';
                        layer.className = t.options.classPrefix + 'iframe-overlay';
                        layer.addEventListener('click', function (e) {
                            if (t.options.clickToPlayPause) {
                                if (t.paused) {
                                    t.play();
                                } else {
                                    t.pause();
                                }

                                e.preventDefault();
                                e.stopPropagation();
                            }
                        });

                        target.parentNode.insertBefore(layer, target);
                    }
                }
            }, {
                key: 'resetSize',
                value: function resetSize() {
                    var t = this;

                    setTimeout(function () {
                        t.setPlayerSize(t.width, t.height);
                        t.setControlsSize();
                    }, 50);
                }
            }, {
                key: 'setPoster',
                value: function setPoster(url) {
                    var t = this;

                    if (t.getElement(t.container)) {
                        var posterDiv = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'poster');

                        if (!posterDiv) {
                            posterDiv = _document2.default.createElement('div');
                            posterDiv.className = t.options.classPrefix + 'poster ' + t.options.classPrefix + 'layer';
                            t.getElement(t.layers).appendChild(posterDiv);
                        }

                        var posterImg = posterDiv.querySelector('img');

                        if (!posterImg && url) {
                            posterImg = _document2.default.createElement('img');
                            posterImg.className = t.options.classPrefix + 'poster-img';
                            posterImg.width = '100%';
                            posterImg.height = '100%';
                            posterDiv.style.display = '';
                            posterDiv.appendChild(posterImg);
                        }

                        if (url) {
                            posterImg.setAttribute('src', url);
                            posterDiv.style.backgroundImage = 'url("' + url + '")';
                            posterDiv.style.display = '';
                        } else if (posterImg) {
                            posterDiv.style.backgroundImage = 'none';
                            posterDiv.style.display = 'none';
                            posterImg.remove();
                        } else {
                            posterDiv.style.display = 'none';
                        }
                    } else if (_constants.IS_IPAD && t.options.iPadUseNativeControls || _constants.IS_IPHONE && t.options.iPhoneUseNativeControls || _constants.IS_ANDROID && t.options.AndroidUseNativeControls) {
                        t.media.originalNode.poster = url;
                    }
                }
            }, {
                key: 'changeSkin',
                value: function changeSkin(className) {
                    var t = this;

                    t.getElement(t.container).className = t.options.classPrefix + 'container ' + className;
                    t.setPlayerSize(t.width, t.height);
                    t.setControlsSize();
                }
            }, {
                key: 'globalBind',
                value: function globalBind(events, callback) {
                    var t = this,
                        doc = t.node ? t.node.ownerDocument : _document2.default;

                    events = (0, _general.splitEvents)(events, t.id);
                    if (events.d) {
                        var eventList = events.d.split(' ');
                        for (var i = 0, total = eventList.length; i < total; i++) {
                            eventList[i].split('.').reduce(function (part, e) {
                                doc.addEventListener(e, callback, false);
                                return e;
                            }, '');
                        }
                    }
                    if (events.w) {
                        var _eventList = events.w.split(' ');
                        for (var _i2 = 0, _total2 = _eventList.length; _i2 < _total2; _i2++) {
                            _eventList[_i2].split('.').reduce(function (part, e) {
                                _window2.default.addEventListener(e, callback, false);
                                return e;
                            }, '');
                        }
                    }
                }
            }, {
                key: 'globalUnbind',
                value: function globalUnbind(events, callback) {
                    var t = this,
                        doc = t.node ? t.node.ownerDocument : _document2.default;

                    events = (0, _general.splitEvents)(events, t.id);
                    if (events.d) {
                        var eventList = events.d.split(' ');
                        for (var i = 0, total = eventList.length; i < total; i++) {
                            eventList[i].split('.').reduce(function (part, e) {
                                doc.removeEventListener(e, callback, false);
                                return e;
                            }, '');
                        }
                    }
                    if (events.w) {
                        var _eventList2 = events.w.split(' ');
                        for (var _i3 = 0, _total3 = _eventList2.length; _i3 < _total3; _i3++) {
                            _eventList2[_i3].split('.').reduce(function (part, e) {
                                _window2.default.removeEventListener(e, callback, false);
                                return e;
                            }, '');
                        }
                    }
                }
            }, {
                key: 'buildfeatures',
                value: function buildfeatures(player, controls, layers, media) {
                    var t = this;

                    for (var i = 0, total = t.options.features.length; i < total; i++) {
                        var feature = t.options.features[i];
                        if (t['build' + feature]) {
                            try {
                                t['build' + feature](player, controls, layers, media);
                            } catch (e) {
                                console.error('error building ' + feature, e);
                            }
                        }
                    }
                }
            }, {
                key: 'buildposter',
                value: function buildposter(player, controls, layers, media) {
                    var t = this,
                        poster = _document2.default.createElement('div');

                    poster.className = t.options.classPrefix + 'poster ' + t.options.classPrefix + 'layer';
                    layers.appendChild(poster);

                    var posterUrl = media.originalNode.getAttribute('poster');

                    if (player.options.poster !== '') {
                        if (posterUrl && _constants.IS_IOS) {
                            media.originalNode.removeAttribute('poster');
                        }
                        posterUrl = player.options.poster;
                    }

                    if (posterUrl) {
                        t.setPoster(posterUrl);
                    } else if (t.media.renderer !== null && typeof t.media.renderer.getPosterUrl === 'function') {
                        t.setPoster(t.media.renderer.getPosterUrl());
                    } else {
                        poster.style.display = 'none';
                    }

                    media.addEventListener('play', function () {
                        poster.style.display = 'none';
                    });

                    media.addEventListener('playing', function () {
                        poster.style.display = 'none';
                    });

                    if (player.options.showPosterWhenEnded && player.options.autoRewind) {
                        media.addEventListener('ended', function () {
                            poster.style.display = '';
                        });
                    }

                    media.addEventListener('error', function () {
                        poster.style.display = 'none';
                    });

                    if (player.options.showPosterWhenPaused) {
                        media.addEventListener('pause', function () {
                            if (!player.ended) {
                                poster.style.display = '';
                            }
                        });
                    }
                }
            }, {
                key: 'buildoverlays',
                value: function buildoverlays(player, controls, layers, media) {

                    if (!player.isVideo) {
                        return;
                    }

                    var t = this,
                        loading = _document2.default.createElement('div'),
                        error = _document2.default.createElement('div'),
                        bigPlay = _document2.default.createElement('div');

                    loading.style.display = 'none';
                    loading.className = t.options.classPrefix + 'overlay ' + t.options.classPrefix + 'layer';
                    loading.innerHTML = '<div class="' + t.options.classPrefix + 'overlay-loading">' + ('<span class="' + t.options.classPrefix + 'overlay-loading-bg-img"></span>') + '</div>';
                    layers.appendChild(loading);

                    error.style.display = 'none';
                    error.className = t.options.classPrefix + 'overlay ' + t.options.classPrefix + 'layer';
                    error.innerHTML = '<div class="' + t.options.classPrefix + 'overlay-error"></div>';
                    layers.appendChild(error);

                    bigPlay.className = t.options.classPrefix + 'overlay ' + t.options.classPrefix + 'layer ' + t.options.classPrefix + 'overlay-play';
                    bigPlay.innerHTML = '<div class="' + t.options.classPrefix + 'overlay-button" role="button" tabindex="0" ' + ('aria-label="' + _i18n2.default.t('mejs.play') + '" aria-pressed="false"></div>');
                    bigPlay.addEventListener('click', function () {
                        if (t.options.clickToPlayPause) {

                            var button = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'overlay-button'),
                                pressed = button.getAttribute('aria-pressed');

                            if (t.paused) {
                                t.play();
                            } else {
                                t.pause();
                            }

                            button.setAttribute('aria-pressed', !!pressed);
                            t.getElement(t.container).focus();
                        }
                    });

                    bigPlay.addEventListener('keydown', function (e) {
                        var keyPressed = e.keyCode || e.which || 0;

                        if (keyPressed === 13 || _constants.IS_FIREFOX && keyPressed === 32) {
                            var event = (0, _general.createEvent)('click', bigPlay);
                            bigPlay.dispatchEvent(event);
                            return false;
                        }
                    });

                    layers.appendChild(bigPlay);

                    if (t.media.rendererName !== null && (/(youtube|facebook)/i.test(t.media.rendererName) && !(t.media.originalNode.getAttribute('poster') || player.options.poster || typeof t.media.renderer.getPosterUrl === 'function' && t.media.renderer.getPosterUrl()) || _constants.IS_STOCK_ANDROID || t.media.originalNode.getAttribute('autoplay'))) {
                        bigPlay.style.display = 'none';
                    }

                    var hasError = false;

                    media.addEventListener('play', function () {
                        bigPlay.style.display = 'none';
                        loading.style.display = 'none';
                        error.style.display = 'none';
                        hasError = false;
                    });
                    media.addEventListener('playing', function () {
                        bigPlay.style.display = 'none';
                        loading.style.display = 'none';
                        error.style.display = 'none';
                        hasError = false;
                    });
                    media.addEventListener('seeking', function () {
                        bigPlay.style.display = 'none';
                        loading.style.display = '';
                        hasError = false;
                    });
                    media.addEventListener('seeked', function () {
                        bigPlay.style.display = t.paused && !_constants.IS_STOCK_ANDROID ? '' : 'none';
                        loading.style.display = 'none';
                        hasError = false;
                    });
                    media.addEventListener('pause', function () {
                        loading.style.display = 'none';
                        if (!_constants.IS_STOCK_ANDROID && !hasError) {
                            bigPlay.style.display = '';
                        }
                        hasError = false;
                    });
                    media.addEventListener('waiting', function () {
                        loading.style.display = '';
                        hasError = false;
                    });

                    media.addEventListener('loadeddata', function () {
                        loading.style.display = '';

                        if (_constants.IS_ANDROID) {
                            media.canplayTimeout = setTimeout(function () {
                                if (_document2.default.createEvent) {
                                    var evt = _document2.default.createEvent('HTMLEvents');
                                    evt.initEvent('canplay', true, true);
                                    return media.dispatchEvent(evt);
                                }
                            }, 300);
                        }
                        hasError = false;
                    });
                    media.addEventListener('canplay', function () {
                        loading.style.display = 'none';

                        clearTimeout(media.canplayTimeout);
                        hasError = false;
                    });

                    media.addEventListener('error', function (e) {
                        t._handleError(e, t.media, t.node);
                        loading.style.display = 'none';
                        bigPlay.style.display = 'none';
                        hasError = true;
                    });

                    media.addEventListener('loadedmetadata', function () {
                        if (!t.controlsEnabled) {
                            t.enableControls();
                        }
                    });

                    media.addEventListener('keydown', function (e) {
                        t.onkeydown(player, media, e);
                        hasError = false;
                    });
                }
            }, {
                key: 'buildkeyboard',
                value: function buildkeyboard(player, controls, layers, media) {

                    var t = this;

                    t.getElement(t.container).addEventListener('keydown', function () {
                        t.keyboardAction = true;
                    });

                    t.globalKeydownCallback = function (event) {
                        var container = _document2.default.activeElement.closest('.' + t.options.classPrefix + 'container'),
                            target = t.media.closest('.' + t.options.classPrefix + 'container');
                        t.hasFocus = !!(container && target && container.id === target.id);
                        return t.onkeydown(player, media, event);
                    };

                    t.globalClickCallback = function (event) {
                        t.hasFocus = !!event.target.closest('.' + t.options.classPrefix + 'container');
                    };

                    t.globalBind('keydown', t.globalKeydownCallback);

                    t.globalBind('click', t.globalClickCallback);
                }
            }, {
                key: 'onkeydown',
                value: function onkeydown(player, media, e) {

                    if (player.hasFocus && player.options.enableKeyboard) {
                        for (var i = 0, total = player.options.keyActions.length; i < total; i++) {
                            var keyAction = player.options.keyActions[i];

                            for (var j = 0, jl = keyAction.keys.length; j < jl; j++) {
                                if (e.keyCode === keyAction.keys[j]) {
                                    keyAction.action(player, media, e.keyCode, e);
                                    e.preventDefault();
                                    e.stopPropagation();
                                    return;
                                }
                            }
                        }
                    }

                    return true;
                }
            }, {
                key: 'play',
                value: function play() {
                    this.proxy.play();
                }
            }, {
                key: 'pause',
                value: function pause() {
                    this.proxy.pause();
                }
            }, {
                key: 'load',
                value: function load() {
                    this.proxy.load();
                }
            }, {
                key: 'setCurrentTime',
                value: function setCurrentTime(time) {
                    this.proxy.setCurrentTime(time);
                }
            }, {
                key: 'getCurrentTime',
                value: function getCurrentTime() {
                    return this.proxy.currentTime;
                }
            }, {
                key: 'getDuration',
                value: function getDuration() {
                    return this.proxy.duration;
                }
            }, {
                key: 'setVolume',
                value: function setVolume(volume) {
                    this.proxy.volume = volume;
                }
            }, {
                key: 'getVolume',
                value: function getVolume() {
                    return this.proxy.getVolume();
                }
            }, {
                key: 'setMuted',
                value: function setMuted(value) {
                    this.proxy.setMuted(value);
                }
            }, {
                key: 'setSrc',
                value: function setSrc(src) {
                    if (!this.controlsEnabled) {
                        this.enableControls();
                    }
                    this.proxy.setSrc(src);
                }
            }, {
                key: 'getSrc',
                value: function getSrc() {
                    return this.proxy.getSrc();
                }
            }, {
                key: 'canPlayType',
                value: function canPlayType(type) {
                    return this.proxy.canPlayType(type);
                }
            }, {
                key: 'remove',
                value: function remove() {
                    var t = this,
                        rendererName = t.media.rendererName,
                        src = t.media.originalNode.src;

                    for (var featureIndex in t.options.features) {
                        var feature = t.options.features[featureIndex];
                        if (t['clean' + feature]) {
                            try {
                                t['clean' + feature](t, t.getElement(t.layers), t.getElement(t.controls), t.media);
                            } catch (e) {
                                console.error('error cleaning ' + feature, e);
                            }
                        }
                    }

                    var nativeWidth = t.node.getAttribute('width'),
                        nativeHeight = t.node.getAttribute('height');

                    if (nativeWidth) {
                        if (nativeWidth.indexOf('%') === -1) {
                            nativeWidth = nativeWidth + 'px';
                        }
                    } else {
                        nativeWidth = 'auto';
                    }

                    if (nativeHeight) {
                        if (nativeHeight.indexOf('%') === -1) {
                            nativeHeight = nativeHeight + 'px';
                        }
                    } else {
                        nativeHeight = 'auto';
                    }

                    t.node.style.width = nativeWidth;
                    t.node.style.height = nativeHeight;

                    t.setPlayerSize(0, 0);

                    if (!t.isDynamic) {
                        (function () {
                            t.node.setAttribute('controls', true);
                            t.node.setAttribute('id', t.node.getAttribute('id').replace('_' + rendererName, '').replace('_from_mejs', ''));
                            var poster = t.getElement(t.container).querySelector('.' + t.options.classPrefix + 'poster>img');
                            if (poster) {
                                t.node.setAttribute('poster', poster.src);
                            }

                            delete t.node.autoplay;

                            t.node.setAttribute('src', '');
                            if (t.media.canPlayType((0, _media.getTypeFromFile)(src)) !== '') {
                                t.node.setAttribute('src', src);
                            }

                            if (rendererName && rendererName.indexOf('iframe') > -1) {
                                var layer = _document2.default.getElementById(t.media.id + '-iframe-overlay');
                                layer.remove();
                            }

                            var node = t.node.cloneNode();
                            node.style.display = '';
                            t.getElement(t.container).parentNode.insertBefore(node, t.getElement(t.container));
                            t.node.remove();

                            if (t.mediaFiles) {
                                for (var i = 0, total = t.mediaFiles.length; i < total; i++) {
                                    var source = _document2.default.createElement('source');
                                    source.setAttribute('src', t.mediaFiles[i].src);
                                    source.setAttribute('type', t.mediaFiles[i].type);
                                    node.appendChild(source);
                                }
                            }
                            if (t.trackFiles) {
                                var _loop3 = function _loop3(_i4, _total4) {
                                    var track = t.trackFiles[_i4];
                                    var newTrack = _document2.default.createElement('track');
                                    newTrack.kind = track.kind;
                                    newTrack.label = track.label;
                                    newTrack.srclang = track.srclang;
                                    newTrack.src = track.src;

                                    node.appendChild(newTrack);
                                    newTrack.addEventListener('load', function () {
                                        this.mode = 'showing';
                                        node.textTracks[_i4].mode = 'showing';
                                    });
                                };

                                for (var _i4 = 0, _total4 = t.trackFiles.length; _i4 < _total4; _i4++) {
                                    _loop3(_i4, _total4);
                                }
                            }

                            delete t.node;
                            delete t.mediaFiles;
                            delete t.trackFiles;
                        })();
                    } else {
                        t.getElement(t.container).parentNode.insertBefore(t.node, t.getElement(t.container));
                    }

                    if (t.media.renderer && typeof t.media.renderer.destroy === 'function') {
                        t.media.renderer.destroy();
                    }

                    delete _mejs2.default.players[t.id];

                    if (_typeof(t.getElement(t.container)) === 'object') {
                        var offscreen = t.getElement(t.container).parentNode.querySelector('.' + t.options.classPrefix + 'offscreen');
                        offscreen.remove();
                        t.getElement(t.container).remove();
                    }
                    t.globalUnbind('resize', t.globalResizeCallback);
                    t.globalUnbind('keydown', t.globalKeydownCallback);
                    t.globalUnbind('click', t.globalClickCallback);

                    delete t.media.player;
                }
            }, {
                key: 'paused',
                get: function get() {
                    return this.proxy.paused;
                }
            }, {
                key: 'muted',
                get: function get() {
                    return this.proxy.muted;
                },
                set: function set(muted) {
                    this.setMuted(muted);
                }
            }, {
                key: 'ended',
                get: function get() {
                    return this.proxy.ended;
                }
            }, {
                key: 'readyState',
                get: function get() {
                    return this.proxy.readyState;
                }
            }, {
                key: 'currentTime',
                set: function set(time) {
                    this.setCurrentTime(time);
                },
                get: function get() {
                    return this.getCurrentTime();
                }
            }, {
                key: 'duration',
                get: function get() {
                    return this.getDuration();
                }
            }, {
                key: 'volume',
                set: function set(volume) {
                    this.setVolume(volume);
                },
                get: function get() {
                    return this.getVolume();
                }
            }, {
                key: 'src',
                set: function set(src) {
                    this.setSrc(src);
                },
                get: function get() {
                    return this.getSrc();
                }
            }]);

            return MediaElementPlayer;
        }();

        _window2.default.MediaElementPlayer = MediaElementPlayer;
        _mejs2.default.MediaElementPlayer = MediaElementPlayer;

        exports.default = MediaElementPlayer;

    }, { "17": 17, "2": 2, "25": 25, "26": 26, "27": 27, "28": 28, "3": 3, "30": 30, "5": 5, "6": 6, "7": 7 }], 17: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var DefaultPlayer = function () {
            function DefaultPlayer(player) {
                _classCallCheck(this, DefaultPlayer);

                this.media = player.media;
                this.isVideo = player.isVideo;
                this.classPrefix = player.options.classPrefix;
                this.createIframeLayer = function () {
                    return player.createIframeLayer();
                };
                this.setPoster = function (url) {
                    return player.setPoster(url);
                };
                return this;
            }

            _createClass(DefaultPlayer, [{
                key: 'play',
                value: function play() {
                    this.media.play();
                }
            }, {
                key: 'pause',
                value: function pause() {
                    this.media.pause();
                }
            }, {
                key: 'load',
                value: function load() {
                    var t = this;

                    if (!t.isLoaded) {
                        t.media.load();
                    }

                    t.isLoaded = true;
                }
            }, {
                key: 'setCurrentTime',
                value: function setCurrentTime(time) {
                    this.media.setCurrentTime(time);
                }
            }, {
                key: 'getCurrentTime',
                value: function getCurrentTime() {
                    return this.media.currentTime;
                }
            }, {
                key: 'getDuration',
                value: function getDuration() {
                    return this.media.getDuration();
                }
            }, {
                key: 'setVolume',
                value: function setVolume(volume) {
                    this.media.setVolume(volume);
                }
            }, {
                key: 'getVolume',
                value: function getVolume() {
                    return this.media.getVolume();
                }
            }, {
                key: 'setMuted',
                value: function setMuted(value) {
                    this.media.setMuted(value);
                }
            }, {
                key: 'setSrc',
                value: function setSrc(src) {
                    var t = this,
                        layer = document.getElementById(t.media.id + '-iframe-overlay');

                    if (layer) {
                        layer.remove();
                    }

                    t.media.setSrc(src);
                    t.createIframeLayer();
                    if (t.media.renderer !== null && typeof t.media.renderer.getPosterUrl === 'function') {
                        t.setPoster(t.media.renderer.getPosterUrl());
                    }
                }
            }, {
                key: 'getSrc',
                value: function getSrc() {
                    return this.media.getSrc();
                }
            }, {
                key: 'canPlayType',
                value: function canPlayType(type) {
                    return this.media.canPlayType(type);
                }
            }, {
                key: 'paused',
                get: function get() {
                    return this.media.paused;
                }
            }, {
                key: 'muted',
                set: function set(muted) {
                    this.setMuted(muted);
                },
                get: function get() {
                    return this.media.muted;
                }
            }, {
                key: 'ended',
                get: function get() {
                    return this.media.ended;
                }
            }, {
                key: 'readyState',
                get: function get() {
                    return this.media.readyState;
                }
            }, {
                key: 'currentTime',
                set: function set(time) {
                    this.setCurrentTime(time);
                },
                get: function get() {
                    return this.getCurrentTime();
                }
            }, {
                key: 'duration',
                get: function get() {
                    return this.getDuration();
                }
            }, {
                key: 'remainingTime',
                get: function get() {
                    return this.getDuration() - this.currentTime();
                }
            }, {
                key: 'volume',
                set: function set(volume) {
                    this.setVolume(volume);
                },
                get: function get() {
                    return this.getVolume();
                }
            }, {
                key: 'src',
                set: function set(src) {
                    this.setSrc(src);
                },
                get: function get() {
                    return this.getSrc();
                }
            }]);

            return DefaultPlayer;
        }();

        exports.default = DefaultPlayer;


        _window2.default.DefaultPlayer = DefaultPlayer;

    }, { "3": 3 }], 18: [function (_dereq_, module, exports) {
        'use strict';

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _player = _dereq_(16);

        var _player2 = _interopRequireDefault(_player);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        if (typeof jQuery !== 'undefined') {
            _mejs2.default.$ = _window2.default.jQuery = _window2.default.$ = jQuery;
        } else if (typeof Zepto !== 'undefined') {
            _mejs2.default.$ = _window2.default.Zepto = _window2.default.$ = Zepto;
        } else if (typeof ender !== 'undefined') {
            _mejs2.default.$ = _window2.default.ender = _window2.default.$ = ender;
        }

        (function ($) {
            if (typeof $ !== 'undefined') {
                $.fn.mediaelementplayer = function (options) {
                    if (options === false) {
                        this.each(function () {
                            var player = $(this).data('mediaelementplayer');
                            if (player) {
                                player.remove();
                            }
                            $(this).removeData('mediaelementplayer');
                        });
                    } else {
                        this.each(function () {
                            $(this).data('mediaelementplayer', new _player2.default(this, options));
                        });
                    }
                    return this;
                };

                $(document).ready(function () {
                    $('.' + _mejs2.default.MepDefaults.classPrefix + 'player').mediaelementplayer();
                });
            }
        })(_mejs2.default.$);

    }, { "16": 16, "3": 3, "7": 7 }], 19: [function (_dereq_, module, exports) {
        'use strict';

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _renderer = _dereq_(8);

        var _general = _dereq_(27);

        var _media = _dereq_(28);

        var _constants = _dereq_(25);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var NativeDash = {

            promise: null,

            load: function load(settings) {
                if (typeof dashjs !== 'undefined') {
                    NativeDash.promise = new Promise(function (resolve) {
                        resolve();
                    }).then(function () {
                        NativeDash._createPlayer(settings);
                    });
                } else {
                    settings.options.path = typeof settings.options.path === 'string' ? settings.options.path : 'https://cdn.dashjs.org/latest/dash.all.min.js';

                    NativeDash.promise = NativeDash.promise || (0, _dom.loadScript)(settings.options.path);
                    NativeDash.promise.then(function () {
                        NativeDash._createPlayer(settings);
                    });
                }

                return NativeDash.promise;
            },

            _createPlayer: function _createPlayer(settings) {
                var player = dashjs.MediaPlayer().create();
                _window2.default['__ready__' + settings.id](player);
                return player;
            }
        };

        var DashNativeRenderer = {
            name: 'native_dash',
            options: {
                prefix: 'native_dash',
                dash: {
                    path: 'https://cdn.dashjs.org/latest/dash.all.min.js',
                    debug: false,
                    drm: {},

                    robustnessLevel: ''
                }
            },

            canPlayType: function canPlayType(type) {
                return _constants.HAS_MSE && ['application/dash+xml'].indexOf(type.toLowerCase()) > -1;
            },

            create: function create(mediaElement, options, mediaFiles) {

                var originalNode = mediaElement.originalNode,
                    id = mediaElement.id + '_' + options.prefix,
                    autoplay = originalNode.autoplay,
                    children = originalNode.children;

                var node = null,
                    dashPlayer = null;

                originalNode.removeAttribute('type');
                for (var i = 0, total = children.length; i < total; i++) {
                    children[i].removeAttribute('type');
                }

                node = originalNode.cloneNode(true);
                options = Object.assign(options, mediaElement.options);

                var props = _mejs2.default.html5media.properties,
                    events = _mejs2.default.html5media.events.concat(['click', 'mouseover', 'mouseout']).filter(function (e) {
                        return e !== 'error';
                    }),
                    attachNativeEvents = function attachNativeEvents(e) {
                        var event = (0, _general.createEvent)(e.type, mediaElement);
                        mediaElement.dispatchEvent(event);
                    },
                    assignGettersSetters = function assignGettersSetters(propName) {
                        var capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                        node['get' + capName] = function () {
                            return dashPlayer !== null ? node[propName] : null;
                        };

                        node['set' + capName] = function (value) {
                            if (_mejs2.default.html5media.readOnlyProperties.indexOf(propName) === -1) {
                                if (propName === 'src') {
                                    var source = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.src ? value.src : value;
                                    node[propName] = source;
                                    if (dashPlayer !== null) {
                                        dashPlayer.reset();
                                        for (var _i = 0, _total = events.length; _i < _total; _i++) {
                                            node.removeEventListener(events[_i], attachNativeEvents);
                                        }
                                        dashPlayer = NativeDash._createPlayer({
                                            options: options.dash,
                                            id: id
                                        });

                                        if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && _typeof(value.drm) === 'object') {
                                            dashPlayer.setProtectionData(value.drm);
                                            if ((0, _general.isString)(options.dash.robustnessLevel) && options.dash.robustnessLevel) {
                                                dashPlayer.getProtectionController().setRobustnessLevel(options.dash.robustnessLevel);
                                            }
                                        }
                                        dashPlayer.attachSource(source);
                                        if (autoplay) {
                                            dashPlayer.play();
                                        }
                                    }
                                } else {
                                    node[propName] = value;
                                }
                            }
                        };
                    };

                for (var _i2 = 0, _total2 = props.length; _i2 < _total2; _i2++) {
                    assignGettersSetters(props[_i2]);
                }

                _window2.default['__ready__' + id] = function (_dashPlayer) {
                    mediaElement.dashPlayer = dashPlayer = _dashPlayer;

                    var dashEvents = dashjs.MediaPlayer.events,
                        assignEvents = function assignEvents(eventName) {
                            if (eventName === 'loadedmetadata') {
                                dashPlayer.getDebug().setLogToBrowserConsole(options.dash.debug);
                                dashPlayer.initialize();
                                dashPlayer.setScheduleWhilePaused(false);
                                dashPlayer.setFastSwitchEnabled(true);
                                dashPlayer.attachView(node);
                                dashPlayer.setAutoPlay(false);

                                if (_typeof(options.dash.drm) === 'object' && !_mejs2.default.Utils.isObjectEmpty(options.dash.drm)) {
                                    dashPlayer.setProtectionData(options.dash.drm);
                                    if ((0, _general.isString)(options.dash.robustnessLevel) && options.dash.robustnessLevel) {
                                        dashPlayer.getProtectionController().setRobustnessLevel(options.dash.robustnessLevel);
                                    }
                                }
                                dashPlayer.attachSource(node.getSrc());
                            }

                            node.addEventListener(eventName, attachNativeEvents);
                        };

                    for (var _i3 = 0, _total3 = events.length; _i3 < _total3; _i3++) {
                        assignEvents(events[_i3]);
                    }

                    var assignMdashEvents = function assignMdashEvents(e) {
                        if (e.type.toLowerCase() === 'error') {
                            mediaElement.generateError(e.message, node.src);
                            console.error(e);
                        } else {
                            var _event = (0, _general.createEvent)(e.type, mediaElement);
                            _event.data = e;
                            mediaElement.dispatchEvent(_event);
                        }
                    };

                    for (var eventType in dashEvents) {
                        if (dashEvents.hasOwnProperty(eventType)) {
                            dashPlayer.on(dashEvents[eventType], function (e) {
                                return assignMdashEvents(e);
                            });
                        }
                    }
                };

                if (mediaFiles && mediaFiles.length > 0) {
                    for (var _i4 = 0, _total4 = mediaFiles.length; _i4 < _total4; _i4++) {
                        if (_renderer.renderer.renderers[options.prefix].canPlayType(mediaFiles[_i4].type)) {
                            node.setAttribute('src', mediaFiles[_i4].src);
                            if (typeof mediaFiles[_i4].drm !== 'undefined') {
                                options.dash.drm = mediaFiles[_i4].drm;
                            }
                            break;
                        }
                    }
                }

                node.setAttribute('id', id);

                originalNode.parentNode.insertBefore(node, originalNode);
                originalNode.autoplay = false;
                originalNode.style.display = 'none';

                node.setSize = function (width, height) {
                    node.style.width = width + 'px';
                    node.style.height = height + 'px';
                    return node;
                };

                node.hide = function () {
                    node.pause();
                    node.style.display = 'none';
                    return node;
                };

                node.show = function () {
                    node.style.display = '';
                    return node;
                };

                node.destroy = function () {
                    if (dashPlayer !== null) {
                        dashPlayer.reset();
                    }
                };

                var event = (0, _general.createEvent)('rendererready', node);
                mediaElement.dispatchEvent(event);

                mediaElement.promises.push(NativeDash.load({
                    options: options.dash,
                    id: id
                }));

                return node;
            }
        };

        _media.typeChecks.push(function (url) {
            return ~url.toLowerCase().indexOf('.mpd') ? 'application/dash+xml' : null;
        });

        _renderer.renderer.add(DashNativeRenderer);

    }, { "25": 25, "26": 26, "27": 27, "28": 28, "3": 3, "7": 7, "8": 8 }], 20: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.PluginDetector = undefined;

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _i18n = _dereq_(5);

        var _i18n2 = _interopRequireDefault(_i18n);

        var _renderer = _dereq_(8);

        var _general = _dereq_(27);

        var _constants = _dereq_(25);

        var _media = _dereq_(28);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var PluginDetector = exports.PluginDetector = {
            plugins: [],

            hasPluginVersion: function hasPluginVersion(plugin, v) {
                var pv = PluginDetector.plugins[plugin];
                v[1] = v[1] || 0;
                v[2] = v[2] || 0;
                return pv[0] > v[0] || pv[0] === v[0] && pv[1] > v[1] || pv[0] === v[0] && pv[1] === v[1] && pv[2] >= v[2];
            },

            addPlugin: function addPlugin(p, pluginName, mimeType, activeX, axDetect) {
                PluginDetector.plugins[p] = PluginDetector.detectPlugin(pluginName, mimeType, activeX, axDetect);
            },

            detectPlugin: function detectPlugin(pluginName, mimeType, activeX, axDetect) {

                var version = [0, 0, 0],
                    description = void 0,
                    ax = void 0;

                if (_constants.NAV.plugins !== null && _constants.NAV.plugins !== undefined && _typeof(_constants.NAV.plugins[pluginName]) === 'object') {
                    description = _constants.NAV.plugins[pluginName].description;
                    if (description && !(typeof _constants.NAV.mimeTypes !== 'undefined' && _constants.NAV.mimeTypes[mimeType] && !_constants.NAV.mimeTypes[mimeType].enabledPlugin)) {
                        version = description.replace(pluginName, '').replace(/^\s+/, '').replace(/\sr/gi, '.').split('.');
                        for (var i = 0, total = version.length; i < total; i++) {
                            version[i] = parseInt(version[i].match(/\d+/), 10);
                        }
                    }
                } else if (_window2.default.ActiveXObject !== undefined) {
                    try {
                        ax = new ActiveXObject(activeX);
                        if (ax) {
                            version = axDetect(ax);
                        }
                    } catch (e) {

                    }
                }
                return version;
            }
        };

        PluginDetector.addPlugin('flash', 'Shockwave Flash', 'application/x-shockwave-flash', 'ShockwaveFlash.ShockwaveFlash', function (ax) {
            var version = [],
                d = ax.GetVariable("$version");

            if (d) {
                d = d.split(" ")[1].split(",");
                version = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
            }
            return version;
        });

        var FlashMediaElementRenderer = {
            create: function create(mediaElement, options, mediaFiles) {

                var flash = {};
                var isActive = false;

                flash.options = options;
                flash.id = mediaElement.id + '_' + flash.options.prefix;
                flash.mediaElement = mediaElement;
                flash.flashState = {};
                flash.flashApi = null;
                flash.flashApiStack = [];

                var props = _mejs2.default.html5media.properties,
                    assignGettersSetters = function assignGettersSetters(propName) {
                        flash.flashState[propName] = null;

                        var capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                        flash['get' + capName] = function () {
                            if (flash.flashApi !== null) {
                                if (typeof flash.flashApi['get_' + propName] === 'function') {
                                    var value = flash.flashApi['get_' + propName]();

                                    if (propName === 'buffered') {
                                        return {
                                            start: function start() {
                                                return 0;
                                            },
                                            end: function end() {
                                                return value;
                                            },
                                            length: 1
                                        };
                                    }
                                    return value;
                                } else {
                                    return null;
                                }
                            } else {
                                return null;
                            }
                        };

                        flash['set' + capName] = function (value) {
                            if (propName === 'src') {
                                value = (0, _media.absolutizeUrl)(value);
                            }

                            if (flash.flashApi !== null && flash.flashApi['set_' + propName] !== undefined) {
                                try {
                                    flash.flashApi['set_' + propName](value);
                                } catch (e) {

                                }
                            } else {
                                flash.flashApiStack.push({
                                    type: 'set',
                                    propName: propName,
                                    value: value
                                });
                            }
                        };
                    };

                for (var i = 0, total = props.length; i < total; i++) {
                    assignGettersSetters(props[i]);
                }

                var methods = _mejs2.default.html5media.methods,
                    assignMethods = function assignMethods(methodName) {
                        flash[methodName] = function () {
                            if (isActive) {
                                if (flash.flashApi !== null) {
                                    if (flash.flashApi['fire_' + methodName]) {
                                        try {
                                            flash.flashApi['fire_' + methodName]();
                                        } catch (e) {

                                        }
                                    } else {

                                    }
                                } else {
                                    flash.flashApiStack.push({
                                        type: 'call',
                                        methodName: methodName
                                    });
                                }
                            }
                        };
                    };
                methods.push('stop');
                for (var _i = 0, _total = methods.length; _i < _total; _i++) {
                    assignMethods(methods[_i]);
                }

                var initEvents = ['rendererready'];

                for (var _i2 = 0, _total2 = initEvents.length; _i2 < _total2; _i2++) {
                    var event = (0, _general.createEvent)(initEvents[_i2], flash);
                    mediaElement.dispatchEvent(event);
                }

                _window2.default['__ready__' + flash.id] = function () {

                    flash.flashReady = true;
                    flash.flashApi = _document2.default.getElementById('__' + flash.id);

                    if (flash.flashApiStack.length) {
                        for (var _i3 = 0, _total3 = flash.flashApiStack.length; _i3 < _total3; _i3++) {
                            var stackItem = flash.flashApiStack[_i3];

                            if (stackItem.type === 'set') {
                                var propName = stackItem.propName,
                                    capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                                flash['set' + capName](stackItem.value);
                            } else if (stackItem.type === 'call') {
                                flash[stackItem.methodName]();
                            }
                        }
                    }
                };

                _window2.default['__event__' + flash.id] = function (eventName, message) {
                    var event = (0, _general.createEvent)(eventName, flash);
                    if (message) {
                        try {
                            event.data = JSON.parse(message);
                            event.details.data = JSON.parse(message);
                        } catch (e) {
                            event.message = message;
                        }
                    }

                    flash.mediaElement.dispatchEvent(event);
                };

                flash.flashWrapper = _document2.default.createElement('div');

                if (['always', 'sameDomain'].indexOf(flash.options.shimScriptAccess) === -1) {
                    flash.options.shimScriptAccess = 'sameDomain';
                }

                var autoplay = mediaElement.originalNode.autoplay,
                    flashVars = ['uid=' + flash.id, 'autoplay=' + autoplay, 'allowScriptAccess=' + flash.options.shimScriptAccess, 'preload=' + (mediaElement.originalNode.getAttribute('preload') || '')],
                    isVideo = mediaElement.originalNode !== null && mediaElement.originalNode.tagName.toLowerCase() === 'video',
                    flashHeight = isVideo ? mediaElement.originalNode.height : 1,
                    flashWidth = isVideo ? mediaElement.originalNode.width : 1;

                if (mediaElement.originalNode.getAttribute('src')) {
                    flashVars.push('src=' + mediaElement.originalNode.getAttribute('src'));
                }

                if (flash.options.enablePseudoStreaming === true) {
                    flashVars.push('pseudostreamstart=' + flash.options.pseudoStreamingStartQueryParam);
                    flashVars.push('pseudostreamtype=' + flash.options.pseudoStreamingType);
                }

                if (flash.options.streamDelimiter) {
                    flashVars.push('streamdelimiter=' + encodeURIComponent(flash.options.streamDelimiter));
                }

                if (flash.options.proxyType) {
                    flashVars.push('proxytype=' + flash.options.proxyType);
                }

                mediaElement.appendChild(flash.flashWrapper);
                mediaElement.originalNode.style.display = 'none';

                var settings = [];

                if (_constants.IS_IE || _constants.IS_EDGE) {
                    var specialIEContainer = _document2.default.createElement('div');
                    flash.flashWrapper.appendChild(specialIEContainer);

                    if (_constants.IS_EDGE) {
                        settings = ['type="application/x-shockwave-flash"', 'data="' + flash.options.pluginPath + flash.options.filename + '"', 'id="__' + flash.id + '"', 'width="' + flashWidth + '"', 'height="' + flashHeight + '\'"'];
                    } else {
                        settings = ['classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"', 'codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab"', 'id="__' + flash.id + '"', 'width="' + flashWidth + '"', 'height="' + flashHeight + '"'];
                    }

                    if (!isVideo) {
                        settings.push('style="clip: rect(0 0 0 0); position: absolute;"');
                    }

                    specialIEContainer.outerHTML = '<object ' + settings.join(' ') + '>' + ('<param name="movie" value="' + flash.options.pluginPath + flash.options.filename + '?x=' + new Date() + '" />') + ('<param name="flashvars" value="' + flashVars.join('&amp;') + '" />') + '<param name="quality" value="high" />' + '<param name="bgcolor" value="#000000" />' + '<param name="wmode" value="transparent" />' + ('<param name="allowScriptAccess" value="' + flash.options.shimScriptAccess + '" />') + '<param name="allowFullScreen" value="true" />' + ('<div>' + _i18n2.default.t('mejs.install-flash') + '</div>') + '</object>';
                } else {

                    settings = ['id="__' + flash.id + '"', 'name="__' + flash.id + '"', 'play="true"', 'loop="false"', 'quality="high"', 'bgcolor="#000000"', 'wmode="transparent"', 'allowScriptAccess="' + flash.options.shimScriptAccess + '"', 'allowFullScreen="true"', 'type="application/x-shockwave-flash"', 'pluginspage="//www.macromedia.com/go/getflashplayer"', 'src="' + flash.options.pluginPath + flash.options.filename + '"', 'flashvars="' + flashVars.join('&') + '"'];

                    if (isVideo) {
                        settings.push('width="' + flashWidth + '"');
                        settings.push('height="' + flashHeight + '"');
                    } else {
                        settings.push('style="position: fixed; left: -9999em; top: -9999em;"');
                    }

                    flash.flashWrapper.innerHTML = '<embed ' + settings.join(' ') + '>';
                }

                flash.flashNode = flash.flashWrapper.lastChild;

                flash.hide = function () {
                    isActive = false;
                    if (isVideo) {
                        flash.flashNode.style.display = 'none';
                    }
                };
                flash.show = function () {
                    isActive = true;
                    if (isVideo) {
                        flash.flashNode.style.display = '';
                    }
                };
                flash.setSize = function (width, height) {
                    flash.flashNode.style.width = width + 'px';
                    flash.flashNode.style.height = height + 'px';

                    if (flash.flashApi !== null && typeof flash.flashApi.fire_setSize === 'function') {
                        flash.flashApi.fire_setSize(width, height);
                    }
                };

                flash.destroy = function () {
                    flash.flashNode.remove();
                };

                if (mediaFiles && mediaFiles.length > 0) {
                    for (var _i4 = 0, _total4 = mediaFiles.length; _i4 < _total4; _i4++) {
                        if (_renderer.renderer.renderers[options.prefix].canPlayType(mediaFiles[_i4].type)) {
                            flash.setSrc(mediaFiles[_i4].src);
                            break;
                        }
                    }
                }

                return flash;
            }
        };

        var hasFlash = PluginDetector.hasPluginVersion('flash', [10, 0, 0]);

        if (hasFlash) {
            _media.typeChecks.push(function (url) {
                url = url.toLowerCase();

                if (url.startsWith('rtmp')) {
                    if (~url.indexOf('.mp3')) {
                        return 'audio/rtmp';
                    } else {
                        return 'video/rtmp';
                    }
                } else if (/\.og(a|g)/i.test(url)) {
                    return 'audio/ogg';
                } else if (~url.indexOf('.m3u8')) {
                    return 'application/x-mpegURL';
                } else if (~url.indexOf('.mpd')) {
                    return 'application/dash+xml';
                } else if (~url.indexOf('.flv')) {
                    return 'video/flv';
                } else {
                    return null;
                }
            });

            var FlashMediaElementVideoRenderer = {
                name: 'flash_video',
                options: {
                    prefix: 'flash_video',
                    filename: 'mediaelement-flash-video.swf',
                    enablePseudoStreaming: false,

                    pseudoStreamingStartQueryParam: 'start',

                    pseudoStreamingType: 'byte',

                    proxyType: '',

                    streamDelimiter: ''
                },

                canPlayType: function canPlayType(type) {
                    return ~['video/mp4', 'video/rtmp', 'audio/rtmp', 'rtmp/mp4', 'audio/mp4', 'video/flv', 'video/x-flv'].indexOf(type.toLowerCase());
                },

                create: FlashMediaElementRenderer.create

            };
            _renderer.renderer.add(FlashMediaElementVideoRenderer);

            var FlashMediaElementHlsVideoRenderer = {
                name: 'flash_hls',
                options: {
                    prefix: 'flash_hls',
                    filename: 'mediaelement-flash-video-hls.swf'
                },

                canPlayType: function canPlayType(type) {
                    return ~['application/x-mpegurl', 'application/vnd.apple.mpegurl', 'audio/mpegurl', 'audio/hls', 'video/hls'].indexOf(type.toLowerCase());
                },

                create: FlashMediaElementRenderer.create
            };
            _renderer.renderer.add(FlashMediaElementHlsVideoRenderer);

            var FlashMediaElementMdashVideoRenderer = {
                name: 'flash_dash',
                options: {
                    prefix: 'flash_dash',
                    filename: 'mediaelement-flash-video-mdash.swf'
                },

                canPlayType: function canPlayType(type) {
                    return ~['application/dash+xml'].indexOf(type.toLowerCase());
                },

                create: FlashMediaElementRenderer.create
            };
            _renderer.renderer.add(FlashMediaElementMdashVideoRenderer);

            var FlashMediaElementAudioRenderer = {
                name: 'flash_audio',
                options: {
                    prefix: 'flash_audio',
                    filename: 'mediaelement-flash-audio.swf'
                },

                canPlayType: function canPlayType(type) {
                    return ~['audio/mp3'].indexOf(type.toLowerCase());
                },

                create: FlashMediaElementRenderer.create
            };
            _renderer.renderer.add(FlashMediaElementAudioRenderer);

            var FlashMediaElementAudioOggRenderer = {
                name: 'flash_audio_ogg',
                options: {
                    prefix: 'flash_audio_ogg',
                    filename: 'mediaelement-flash-audio-ogg.swf'
                },

                canPlayType: function canPlayType(type) {
                    return ~['audio/ogg', 'audio/oga', 'audio/ogv'].indexOf(type.toLowerCase());
                },

                create: FlashMediaElementRenderer.create
            };
            _renderer.renderer.add(FlashMediaElementAudioOggRenderer);
        }

    }, { "2": 2, "25": 25, "27": 27, "28": 28, "3": 3, "5": 5, "7": 7, "8": 8 }], 21: [function (_dereq_, module, exports) {
        'use strict';

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _renderer = _dereq_(8);

        var _general = _dereq_(27);

        var _constants = _dereq_(25);

        var _media = _dereq_(28);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var NativeFlv = {

            promise: null,

            load: function load(settings) {
                if (typeof flvjs !== 'undefined') {
                    NativeFlv.promise = new Promise(function (resolve) {
                        resolve();
                    }).then(function () {
                        NativeFlv._createPlayer(settings);
                    });
                } else {
                    settings.options.path = typeof settings.options.path === 'string' ? settings.options.path : 'https://cdn.jsdelivr.net/npm/flv.js@latest';

                    NativeFlv.promise = NativeFlv.promise || (0, _dom.loadScript)(settings.options.path);
                    NativeFlv.promise.then(function () {
                        NativeFlv._createPlayer(settings);
                    });
                }

                return NativeFlv.promise;
            },

            _createPlayer: function _createPlayer(settings) {
                flvjs.LoggingControl.enableDebug = settings.options.debug;
                flvjs.LoggingControl.enableVerbose = settings.options.debug;
                var player = flvjs.createPlayer(settings.options, settings.configs);
                _window2.default['__ready__' + settings.id](player);
                return player;
            }
        };

        var FlvNativeRenderer = {
            name: 'native_flv',
            options: {
                prefix: 'native_flv',
                flv: {
                    path: 'https://cdn.jsdelivr.net/npm/flv.js@latest',

                    cors: true,
                    debug: false
                }
            },

            canPlayType: function canPlayType(type) {
                return _constants.HAS_MSE && ['video/x-flv', 'video/flv'].indexOf(type.toLowerCase()) > -1;
            },

            create: function create(mediaElement, options, mediaFiles) {

                var originalNode = mediaElement.originalNode,
                    id = mediaElement.id + '_' + options.prefix;

                var node = null,
                    flvPlayer = null;

                node = originalNode.cloneNode(true);
                options = Object.assign(options, mediaElement.options);

                var props = _mejs2.default.html5media.properties,
                    events = _mejs2.default.html5media.events.concat(['click', 'mouseover', 'mouseout']).filter(function (e) {
                        return e !== 'error';
                    }),
                    attachNativeEvents = function attachNativeEvents(e) {
                        var event = (0, _general.createEvent)(e.type, mediaElement);
                        mediaElement.dispatchEvent(event);
                    },
                    assignGettersSetters = function assignGettersSetters(propName) {
                        var capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                        node['get' + capName] = function () {
                            return flvPlayer !== null ? node[propName] : null;
                        };

                        node['set' + capName] = function (value) {
                            if (_mejs2.default.html5media.readOnlyProperties.indexOf(propName) === -1) {
                                if (propName === 'src') {
                                    node[propName] = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.src ? value.src : value;
                                    if (flvPlayer !== null) {
                                        var _flvOptions = {};
                                        _flvOptions.type = 'flv';
                                        _flvOptions.url = value;
                                        _flvOptions.cors = options.flv.cors;
                                        _flvOptions.debug = options.flv.debug;
                                        _flvOptions.path = options.flv.path;
                                        var _flvConfigs = options.flv.configs;

                                        flvPlayer.destroy();
                                        for (var i = 0, total = events.length; i < total; i++) {
                                            node.removeEventListener(events[i], attachNativeEvents);
                                        }
                                        flvPlayer = NativeFlv._createPlayer({
                                            options: _flvOptions,
                                            configs: _flvConfigs,
                                            id: id
                                        });
                                        flvPlayer.attachMediaElement(node);
                                        flvPlayer.load();
                                    }
                                } else {
                                    node[propName] = value;
                                }
                            }
                        };
                    };

                for (var i = 0, total = props.length; i < total; i++) {
                    assignGettersSetters(props[i]);
                }

                _window2.default['__ready__' + id] = function (_flvPlayer) {
                    mediaElement.flvPlayer = flvPlayer = _flvPlayer;

                    var flvEvents = flvjs.Events,
                        assignEvents = function assignEvents(eventName) {
                            if (eventName === 'loadedmetadata') {
                                flvPlayer.unload();
                                flvPlayer.detachMediaElement();
                                flvPlayer.attachMediaElement(node);
                                flvPlayer.load();
                            }

                            node.addEventListener(eventName, attachNativeEvents);
                        };

                    for (var _i = 0, _total = events.length; _i < _total; _i++) {
                        assignEvents(events[_i]);
                    }

                    var assignFlvEvents = function assignFlvEvents(name, data) {
                        if (name === 'error') {
                            var message = data[0] + ': ' + data[1] + ' ' + data[2].msg;
                            mediaElement.generateError(message, node.src);
                        } else {
                            var _event = (0, _general.createEvent)(name, mediaElement);
                            _event.data = data;
                            mediaElement.dispatchEvent(_event);
                        }
                    };

                    var _loop = function _loop(eventType) {
                        if (flvEvents.hasOwnProperty(eventType)) {
                            flvPlayer.on(flvEvents[eventType], function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                                    args[_key] = arguments[_key];
                                }

                                return assignFlvEvents(flvEvents[eventType], args);
                            });
                        }
                    };

                    for (var eventType in flvEvents) {
                        _loop(eventType);
                    }
                };

                if (mediaFiles && mediaFiles.length > 0) {
                    for (var _i2 = 0, _total2 = mediaFiles.length; _i2 < _total2; _i2++) {
                        if (_renderer.renderer.renderers[options.prefix].canPlayType(mediaFiles[_i2].type)) {
                            node.setAttribute('src', mediaFiles[_i2].src);
                            break;
                        }
                    }
                }

                node.setAttribute('id', id);

                originalNode.parentNode.insertBefore(node, originalNode);
                originalNode.autoplay = false;
                originalNode.style.display = 'none';

                var flvOptions = {};
                flvOptions.type = 'flv';
                flvOptions.url = node.src;
                flvOptions.cors = options.flv.cors;
                flvOptions.debug = options.flv.debug;
                flvOptions.path = options.flv.path;
                var flvConfigs = options.flv.configs;

                node.setSize = function (width, height) {
                    node.style.width = width + 'px';
                    node.style.height = height + 'px';
                    return node;
                };

                node.hide = function () {
                    if (flvPlayer !== null) {
                        flvPlayer.pause();
                    }
                    node.style.display = 'none';
                    return node;
                };

                node.show = function () {
                    node.style.display = '';
                    return node;
                };

                node.destroy = function () {
                    if (flvPlayer !== null) {
                        flvPlayer.destroy();
                    }
                };

                var event = (0, _general.createEvent)('rendererready', node);
                mediaElement.dispatchEvent(event);

                mediaElement.promises.push(NativeFlv.load({
                    options: flvOptions,
                    configs: flvConfigs,
                    id: id
                }));

                return node;
            }
        };

        _media.typeChecks.push(function (url) {
            return ~url.toLowerCase().indexOf('.flv') ? 'video/flv' : null;
        });

        _renderer.renderer.add(FlvNativeRenderer);

    }, { "25": 25, "26": 26, "27": 27, "28": 28, "3": 3, "7": 7, "8": 8 }], 22: [function (_dereq_, module, exports) {
        'use strict';

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _renderer = _dereq_(8);

        var _general = _dereq_(27);

        var _constants = _dereq_(25);

        var _media = _dereq_(28);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var NativeHls = {

            promise: null,

            load: function load(settings) {
                if (typeof Hls !== 'undefined') {
                    NativeHls.promise = new Promise(function (resolve) {
                        resolve();
                    }).then(function () {
                        NativeHls._createPlayer(settings);
                    });
                } else {
                    settings.options.path = typeof settings.options.path === 'string' ? settings.options.path : 'https://cdn.jsdelivr.net/npm/hls.js@latest';

                    NativeHls.promise = NativeHls.promise || (0, _dom.loadScript)(settings.options.path);
                    NativeHls.promise.then(function () {
                        NativeHls._createPlayer(settings);
                    });
                }

                return NativeHls.promise;
            },

            _createPlayer: function _createPlayer(settings) {
                var player = new Hls(settings.options);
                _window2.default['__ready__' + settings.id](player);
                return player;
            }
        };

        var HlsNativeRenderer = {
            name: 'native_hls',
            options: {
                prefix: 'native_hls',
                hls: {
                    path: 'https://cdn.jsdelivr.net/npm/hls.js@latest',

                    autoStartLoad: false,
                    debug: false
                }
            },

            canPlayType: function canPlayType(type) {
                return _constants.HAS_MSE && ['application/x-mpegurl', 'application/vnd.apple.mpegurl', 'audio/mpegurl', 'audio/hls', 'video/hls'].indexOf(type.toLowerCase()) > -1;
            },

            create: function create(mediaElement, options, mediaFiles) {

                var originalNode = mediaElement.originalNode,
                    id = mediaElement.id + '_' + options.prefix,
                    preload = originalNode.getAttribute('preload'),
                    autoplay = originalNode.autoplay;

                var hlsPlayer = null,
                    node = null,
                    index = 0,
                    total = mediaFiles.length;

                node = originalNode.cloneNode(true);
                options = Object.assign(options, mediaElement.options);
                options.hls.autoStartLoad = preload && preload !== 'none' || autoplay;

                var props = _mejs2.default.html5media.properties,
                    events = _mejs2.default.html5media.events.concat(['click', 'mouseover', 'mouseout']).filter(function (e) {
                        return e !== 'error';
                    }),
                    attachNativeEvents = function attachNativeEvents(e) {
                        var event = (0, _general.createEvent)(e.type, mediaElement);
                        mediaElement.dispatchEvent(event);
                    },
                    assignGettersSetters = function assignGettersSetters(propName) {
                        var capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                        node['get' + capName] = function () {
                            return hlsPlayer !== null ? node[propName] : null;
                        };

                        node['set' + capName] = function (value) {
                            if (_mejs2.default.html5media.readOnlyProperties.indexOf(propName) === -1) {
                                if (propName === 'src') {
                                    node[propName] = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.src ? value.src : value;
                                    if (hlsPlayer !== null) {
                                        hlsPlayer.destroy();
                                        for (var i = 0, _total = events.length; i < _total; i++) {
                                            node.removeEventListener(events[i], attachNativeEvents);
                                        }
                                        hlsPlayer = NativeHls._createPlayer({
                                            options: options.hls,
                                            id: id
                                        });
                                        hlsPlayer.loadSource(value);
                                        hlsPlayer.attachMedia(node);
                                    }
                                } else {
                                    node[propName] = value;
                                }
                            }
                        };
                    };

                for (var i = 0, _total2 = props.length; i < _total2; i++) {
                    assignGettersSetters(props[i]);
                }

                _window2.default['__ready__' + id] = function (_hlsPlayer) {
                    mediaElement.hlsPlayer = hlsPlayer = _hlsPlayer;
                    var hlsEvents = Hls.Events,
                        assignEvents = function assignEvents(eventName) {
                            if (eventName === 'loadedmetadata') {
                                var url = mediaElement.originalNode.src;
                                hlsPlayer.detachMedia();
                                hlsPlayer.loadSource(url);
                                hlsPlayer.attachMedia(node);
                            }

                            node.addEventListener(eventName, attachNativeEvents);
                        };

                    for (var _i = 0, _total3 = events.length; _i < _total3; _i++) {
                        assignEvents(events[_i]);
                    }

                    var recoverDecodingErrorDate = void 0,
                        recoverSwapAudioCodecDate = void 0;
                    var assignHlsEvents = function assignHlsEvents(name, data) {
                        if (name === 'hlsError') {
                            console.warn(data);
                            data = data[1];

                            if (data.fatal) {
                                switch (data.type) {
                                    case 'mediaError':
                                        var now = new Date().getTime();
                                        if (!recoverDecodingErrorDate || now - recoverDecodingErrorDate > 3000) {
                                            recoverDecodingErrorDate = new Date().getTime();
                                            hlsPlayer.recoverMediaError();
                                        } else if (!recoverSwapAudioCodecDate || now - recoverSwapAudioCodecDate > 3000) {
                                            recoverSwapAudioCodecDate = new Date().getTime();
                                            console.warn('Attempting to swap Audio Codec and recover from media error');
                                            hlsPlayer.swapAudioCodec();
                                            hlsPlayer.recoverMediaError();
                                        } else {
                                            var message = 'Cannot recover, last media error recovery failed';
                                            mediaElement.generateError(message, node.src);
                                            console.error(message);
                                        }
                                        break;
                                    case 'networkError':
                                        if (data.details === 'manifestLoadError') {
                                            if (index < total && mediaFiles[index + 1] !== undefined) {
                                                node.setSrc(mediaFiles[index++].src);
                                                node.load();
                                                node.play();
                                            } else {
                                                var _message = 'Network error';
                                                mediaElement.generateError(_message, mediaFiles);
                                                console.error(_message);
                                            }
                                        } else {
                                            var _message2 = 'Network error';
                                            mediaElement.generateError(_message2, mediaFiles);
                                            console.error(_message2);
                                        }
                                        break;
                                    default:
                                        hlsPlayer.destroy();
                                        break;
                                }
                            }
                        } else {
                            var _event = (0, _general.createEvent)(name, mediaElement);
                            _event.data = data;
                            mediaElement.dispatchEvent(_event);
                        }
                    };

                    var _loop = function _loop(eventType) {
                        if (hlsEvents.hasOwnProperty(eventType)) {
                            hlsPlayer.on(hlsEvents[eventType], function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                                    args[_key] = arguments[_key];
                                }

                                return assignHlsEvents(hlsEvents[eventType], args);
                            });
                        }
                    };

                    for (var eventType in hlsEvents) {
                        _loop(eventType);
                    }
                };

                if (total > 0) {
                    for (; index < total; index++) {
                        if (_renderer.renderer.renderers[options.prefix].canPlayType(mediaFiles[index].type)) {
                            node.setAttribute('src', mediaFiles[index].src);
                            break;
                        }
                    }
                }

                if (preload !== 'auto' && !autoplay) {
                    node.addEventListener('play', function () {
                        if (hlsPlayer !== null) {
                            hlsPlayer.startLoad();
                        }
                    });

                    node.addEventListener('pause', function () {
                        if (hlsPlayer !== null) {
                            hlsPlayer.stopLoad();
                        }
                    });
                }

                node.setAttribute('id', id);

                originalNode.parentNode.insertBefore(node, originalNode);
                originalNode.autoplay = false;
                originalNode.style.display = 'none';

                node.setSize = function (width, height) {
                    node.style.width = width + 'px';
                    node.style.height = height + 'px';
                    return node;
                };

                node.hide = function () {
                    node.pause();
                    node.style.display = 'none';
                    return node;
                };

                node.show = function () {
                    node.style.display = '';
                    return node;
                };

                node.destroy = function () {
                    if (hlsPlayer !== null) {
                        hlsPlayer.stopLoad();
                        hlsPlayer.destroy();
                    }
                };

                var event = (0, _general.createEvent)('rendererready', node);
                mediaElement.dispatchEvent(event);

                mediaElement.promises.push(NativeHls.load({
                    options: options.hls,
                    id: id
                }));

                return node;
            }
        };

        _media.typeChecks.push(function (url) {
            return ~url.toLowerCase().indexOf('.m3u8') ? 'application/x-mpegURL' : null;
        });

        _renderer.renderer.add(HlsNativeRenderer);

    }, { "25": 25, "26": 26, "27": 27, "28": 28, "3": 3, "7": 7, "8": 8 }], 23: [function (_dereq_, module, exports) {
        'use strict';

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _renderer = _dereq_(8);

        var _general = _dereq_(27);

        var _constants = _dereq_(25);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var HtmlMediaElement = {
            name: 'html5',
            options: {
                prefix: 'html5'
            },

            canPlayType: function canPlayType(type) {

                var mediaElement = _document2.default.createElement('video');

                if (_constants.IS_ANDROID && /\/mp(3|4)$/i.test(type) || ~['application/x-mpegurl', 'vnd.apple.mpegurl', 'audio/mpegurl', 'audio/hls', 'video/hls'].indexOf(type.toLowerCase()) && _constants.SUPPORTS_NATIVE_HLS) {
                    return 'yes';
                } else if (mediaElement.canPlayType) {
                    return mediaElement.canPlayType(type.toLowerCase()).replace(/no/, '');
                } else {
                    return '';
                }
            },

            create: function create(mediaElement, options, mediaFiles) {

                var id = mediaElement.id + '_' + options.prefix;
                var isActive = false;

                var node = null;

                if (mediaElement.originalNode === undefined || mediaElement.originalNode === null) {
                    node = _document2.default.createElement('audio');
                    mediaElement.appendChild(node);
                } else {
                    node = mediaElement.originalNode;
                }

                node.setAttribute('id', id);

                var props = _mejs2.default.html5media.properties,
                    assignGettersSetters = function assignGettersSetters(propName) {
                        var capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                        node['get' + capName] = function () {
                            return node[propName];
                        };

                        node['set' + capName] = function (value) {
                            if (_mejs2.default.html5media.readOnlyProperties.indexOf(propName) === -1) {
                                node[propName] = value;
                            }
                        };
                    };

                for (var i = 0, _total = props.length; i < _total; i++) {
                    assignGettersSetters(props[i]);
                }

                var events = _mejs2.default.html5media.events.concat(['click', 'mouseover', 'mouseout']).filter(function (e) {
                    return e !== 'error';
                }),
                    assignEvents = function assignEvents(eventName) {
                        node.addEventListener(eventName, function (e) {
                            if (isActive) {
                                var _event = (0, _general.createEvent)(e.type, e.target);
                                mediaElement.dispatchEvent(_event);
                            }
                        });
                    };

                for (var _i = 0, _total2 = events.length; _i < _total2; _i++) {
                    assignEvents(events[_i]);
                }

                node.setSize = function (width, height) {
                    node.style.width = 100 + '%';
                    node.style.height = 100 + '%';
                    return node;
                };

                node.hide = function () {
                    isActive = false;
                    node.style.display = 'none';

                    return node;
                };

                node.show = function () {
                    isActive = true;
                    node.style.display = '';

                    return node;
                };

                var index = 0,
                    total = mediaFiles.length;
                if (total > 0) {
                    for (; index < total; index++) {
                        if (_renderer.renderer.renderers[options.prefix].canPlayType(mediaFiles[index].type)) {
                            node.setAttribute('src', mediaFiles[index].src);
                            break;
                        }
                    }
                }

                node.addEventListener('error', function (e) {
                    if (e.target.error.code === 4 && isActive) {
                        if (index < total && mediaFiles[index + 1] !== undefined) {
                            node.src = mediaFiles[index++].src;
                            node.load();
                            node.play();
                        } else {
                            mediaElement.generateError('Media error: Format(s) not supported or source(s) not found', mediaFiles);
                        }
                    }
                });

                var event = (0, _general.createEvent)('rendererready', node);
                mediaElement.dispatchEvent(event);

                return node;
            }
        };

        _window2.default.HtmlMediaElement = _mejs2.default.HtmlMediaElement = HtmlMediaElement;

        _renderer.renderer.add(HtmlMediaElement);

    }, { "2": 2, "25": 25, "27": 27, "3": 3, "7": 7, "8": 8 }], 24: [function (_dereq_, module, exports) {
        'use strict';

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _renderer = _dereq_(8);

        var _general = _dereq_(27);

        var _media = _dereq_(28);

        var _dom = _dereq_(26);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var YouTubeApi = {
            isIframeStarted: false,

            isIframeLoaded: false,

            iframeQueue: [],

            enqueueIframe: function enqueueIframe(settings) {
                YouTubeApi.isLoaded = typeof YT !== 'undefined' && YT.loaded;

                if (YouTubeApi.isLoaded) {
                    YouTubeApi.createIframe(settings);
                } else {
                    YouTubeApi.loadIframeApi();
                    YouTubeApi.iframeQueue.push(settings);
                }
            },

            loadIframeApi: function loadIframeApi() {
                if (!YouTubeApi.isIframeStarted) {
                    (0, _dom.loadScript)('https://www.youtube.com/player_api');
                    YouTubeApi.isIframeStarted = true;
                }
            },

            iFrameReady: function iFrameReady() {

                YouTubeApi.isLoaded = true;
                YouTubeApi.isIframeLoaded = true;

                while (YouTubeApi.iframeQueue.length > 0) {
                    var settings = YouTubeApi.iframeQueue.pop();
                    YouTubeApi.createIframe(settings);
                }
            },

            createIframe: function createIframe(settings) {
                return new YT.Player(settings.containerId, settings);
            },

            getYouTubeId: function getYouTubeId(url) {

                var youTubeId = '';

                if (url.indexOf('?') > 0) {
                    youTubeId = YouTubeApi.getYouTubeIdFromParam(url);

                    if (youTubeId === '') {
                        youTubeId = YouTubeApi.getYouTubeIdFromUrl(url);
                    }
                } else {
                    youTubeId = YouTubeApi.getYouTubeIdFromUrl(url);
                }

                var id = youTubeId.substring(youTubeId.lastIndexOf('/') + 1);
                youTubeId = id.split('?');
                return youTubeId[0];
            },

            getYouTubeIdFromParam: function getYouTubeIdFromParam(url) {

                if (url === undefined || url === null || !url.trim().length) {
                    return null;
                }

                var parts = url.split('?'),
                    parameters = parts[1].split('&');

                var youTubeId = '';

                for (var i = 0, total = parameters.length; i < total; i++) {
                    var paramParts = parameters[i].split('=');
                    if (paramParts[0] === 'v') {
                        youTubeId = paramParts[1];
                        break;
                    }
                }

                return youTubeId;
            },

            getYouTubeIdFromUrl: function getYouTubeIdFromUrl(url) {

                if (url === undefined || url === null || !url.trim().length) {
                    return null;
                }

                var parts = url.split('?');
                url = parts[0];
                return url.substring(url.lastIndexOf('/') + 1);
            },

            getYouTubeNoCookieUrl: function getYouTubeNoCookieUrl(url) {
                if (url === undefined || url === null || !url.trim().length || url.indexOf('//www.youtube') === -1) {
                    return url;
                }

                var parts = url.split('/');
                parts[2] = parts[2].replace('.com', '-nocookie.com');
                return parts.join('/');
            }
        };

        var YouTubeIframeRenderer = {
            name: 'youtube_iframe',

            options: {
                prefix: 'youtube_iframe',

                youtube: {
                    autoplay: 0,
                    controls: 0,
                    disablekb: 1,
                    end: 0,
                    loop: 0,
                    modestbranding: 0,
                    playsinline: 0,
                    rel: 0,
                    showinfo: 0,
                    start: 0,
                    iv_load_policy: 3,

                    nocookie: false,

                    imageQuality: null
                }
            },

            canPlayType: function canPlayType(type) {
                return ~['video/youtube', 'video/x-youtube'].indexOf(type.toLowerCase());
            },

            create: function create(mediaElement, options, mediaFiles) {

                var youtube = {},
                    apiStack = [],
                    readyState = 4;

                var youTubeApi = null,
                    paused = true,
                    ended = false,
                    youTubeIframe = null,
                    volume = 1;

                youtube.options = options;
                youtube.id = mediaElement.id + '_' + options.prefix;
                youtube.mediaElement = mediaElement;

                var props = _mejs2.default.html5media.properties,
                    assignGettersSetters = function assignGettersSetters(propName) {

                        var capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                        youtube['get' + capName] = function () {
                            if (youTubeApi !== null) {
                                var value = null;

                                switch (propName) {
                                    case 'currentTime':
                                        return youTubeApi.getCurrentTime();
                                    case 'duration':
                                        return youTubeApi.getDuration();
                                    case 'volume':
                                        volume = youTubeApi.getVolume() / 100;
                                        return volume;
                                    case 'paused':
                                        return paused;
                                    case 'ended':
                                        return ended;
                                    case 'muted':
                                        return youTubeApi.isMuted();
                                    case 'buffered':
                                        var percentLoaded = youTubeApi.getVideoLoadedFraction(),
                                            duration = youTubeApi.getDuration();
                                        return {
                                            start: function start() {
                                                return 0;
                                            },
                                            end: function end() {
                                                return percentLoaded * duration;
                                            },
                                            length: 1
                                        };
                                    case 'src':
                                        return youTubeApi.getVideoUrl();
                                    case 'readyState':
                                        return readyState;
                                }

                                return value;
                            } else {
                                return null;
                            }
                        };

                        youtube['set' + capName] = function (value) {
                            if (youTubeApi !== null) {
                                switch (propName) {
                                    case 'src':
                                        var url = typeof value === 'string' ? value : value[0].src,
                                            _videoId = YouTubeApi.getYouTubeId(url);

                                        if (mediaElement.originalNode.autoplay) {
                                            youTubeApi.loadVideoById(_videoId);
                                        } else {
                                            youTubeApi.cueVideoById(_videoId);
                                        }
                                        break;
                                    case 'currentTime':
                                        youTubeApi.seekTo(value);
                                        break;
                                    case 'muted':
                                        if (value) {
                                            youTubeApi.mute();
                                        } else {
                                            youTubeApi.unMute();
                                        }
                                        setTimeout(function () {
                                            var event = (0, _general.createEvent)('volumechange', youtube);
                                            mediaElement.dispatchEvent(event);
                                        }, 50);
                                        break;
                                    case 'volume':
                                        volume = value;
                                        youTubeApi.setVolume(value * 100);
                                        setTimeout(function () {
                                            var event = (0, _general.createEvent)('volumechange', youtube);
                                            mediaElement.dispatchEvent(event);
                                        }, 50);
                                        break;
                                    case 'readyState':
                                        var event = (0, _general.createEvent)('canplay', youtube);
                                        mediaElement.dispatchEvent(event);
                                        break;
                                    default:

                                        break;
                                }
                            } else {
                                apiStack.push({ type: 'set', propName: propName, value: value });
                            }
                        };
                    };

                for (var i = 0, total = props.length; i < total; i++) {
                    assignGettersSetters(props[i]);
                }

                var methods = _mejs2.default.html5media.methods,
                    assignMethods = function assignMethods(methodName) {
                        youtube[methodName] = function () {
                            if (youTubeApi !== null) {
                                switch (methodName) {
                                    case 'play':
                                        paused = false;
                                        return youTubeApi.playVideo();
                                    case 'pause':
                                        paused = true;
                                        return youTubeApi.pauseVideo();
                                    case 'load':
                                        return null;
                                }
                            } else {
                                apiStack.push({ type: 'call', methodName: methodName });
                            }
                        };
                    };

                for (var _i = 0, _total = methods.length; _i < _total; _i++) {
                    assignMethods(methods[_i]);
                }

                var errorHandler = function errorHandler(error) {
                    var message = '';
                    switch (error.data) {
                        case 2:
                            message = 'The request contains an invalid parameter value. Verify that video ID has 11 characters and that contains no invalid characters, such as exclamation points or asterisks.';
                            break;
                        case 5:
                            message = 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.';
                            break;
                        case 100:
                            message = 'The video requested was not found. Either video has been removed or has been marked as private.';
                            break;
                        case 101:
                        case 105:
                            message = 'The owner of the requested video does not allow it to be played in embedded players.';
                            break;
                        default:
                            message = 'Unknown error.';
                            break;
                    }
                    mediaElement.generateError('Code ' + error.data + ': ' + message, mediaFiles);
                };

                var youtubeContainer = _document2.default.createElement('div');
                youtubeContainer.id = youtube.id;

                if (youtube.options.youtube.nocookie) {
                    mediaElement.originalNode.src = YouTubeApi.getYouTubeNoCookieUrl(mediaFiles[0].src);
                }

                mediaElement.originalNode.parentNode.insertBefore(youtubeContainer, mediaElement.originalNode);
                mediaElement.originalNode.style.display = 'none';

                var isAudio = mediaElement.originalNode.tagName.toLowerCase() === 'audio',
                    height = isAudio ? '1' : mediaElement.originalNode.height,
                    width = isAudio ? '1' : mediaElement.originalNode.width,
                    videoId = YouTubeApi.getYouTubeId(mediaFiles[0].src),
                    youtubeSettings = {
                        id: youtube.id,
                        containerId: youtubeContainer.id,
                        videoId: videoId,
                        height: height,
                        width: width,
                        playerVars: Object.assign({
                            controls: 0,
                            rel: 0,
                            disablekb: 1,
                            showinfo: 0,
                            modestbranding: 0,
                            html5: 1,
                            iv_load_policy: 3
                        }, youtube.options.youtube),
                        origin: _window2.default.location.host,
                        events: {
                            onReady: function onReady(e) {
                                mediaElement.youTubeApi = youTubeApi = e.target;
                                mediaElement.youTubeState = {
                                    paused: true,
                                    ended: false
                                };

                                if (apiStack.length) {
                                    for (var _i2 = 0, _total2 = apiStack.length; _i2 < _total2; _i2++) {

                                        var stackItem = apiStack[_i2];

                                        if (stackItem.type === 'set') {
                                            var propName = stackItem.propName,
                                                capName = '' + propName.substring(0, 1).toUpperCase() + propName.substring(1);

                                            youtube['set' + capName](stackItem.value);
                                        } else if (stackItem.type === 'call') {
                                            youtube[stackItem.methodName]();
                                        }
                                    }
                                }

                                youTubeIframe = youTubeApi.getIframe();

                                if (mediaElement.originalNode.muted) {
                                    youTubeApi.mute();
                                }

                                var events = ['mouseover', 'mouseout'],
                                    assignEvents = function assignEvents(e) {
                                        var newEvent = (0, _general.createEvent)(e.type, youtube);
                                        mediaElement.dispatchEvent(newEvent);
                                    };

                                for (var _i3 = 0, _total3 = events.length; _i3 < _total3; _i3++) {
                                    youTubeIframe.addEventListener(events[_i3], assignEvents, false);
                                }

                                var initEvents = ['rendererready', 'loadedmetadata', 'loadeddata', 'canplay'];

                                for (var _i4 = 0, _total4 = initEvents.length; _i4 < _total4; _i4++) {
                                    var event = (0, _general.createEvent)(initEvents[_i4], youtube);
                                    mediaElement.dispatchEvent(event);
                                }
                            },
                            onStateChange: function onStateChange(e) {
                                var events = [];

                                switch (e.data) {
                                    case -1:
                                        events = ['loadedmetadata'];
                                        paused = true;
                                        ended = false;
                                        break;
                                    case 0:
                                        events = ['ended'];
                                        paused = false;
                                        ended = !youtube.options.youtube.loop;
                                        if (!youtube.options.youtube.loop) {
                                            youtube.stopInterval();
                                        }
                                        break;
                                    case 1:
                                        events = ['play', 'playing'];
                                        paused = false;
                                        ended = false;
                                        youtube.startInterval();
                                        break;
                                    case 2:
                                        events = ['pause'];
                                        paused = true;
                                        ended = false;
                                        youtube.stopInterval();
                                        break;
                                    case 3:
                                        events = ['progress'];
                                        ended = false;
                                        break;
                                    case 5:
                                        events = ['loadeddata', 'loadedmetadata', 'canplay'];
                                        paused = true;
                                        ended = false;
                                        break;
                                }

                                for (var _i5 = 0, _total5 = events.length; _i5 < _total5; _i5++) {
                                    var event = (0, _general.createEvent)(events[_i5], youtube);
                                    mediaElement.dispatchEvent(event);
                                }
                            },
                            onError: function onError(e) {
                                return errorHandler(e);
                            }
                        }
                    };

                if (isAudio || mediaElement.originalNode.hasAttribute('playsinline')) {
                    youtubeSettings.playerVars.playsinline = 1;
                }

                if (mediaElement.originalNode.controls) {
                    youtubeSettings.playerVars.controls = 1;
                }
                if (mediaElement.originalNode.autoplay) {
                    youtubeSettings.playerVars.autoplay = 1;
                }
                if (mediaElement.originalNode.loop) {
                    youtubeSettings.playerVars.loop = 1;
                }

                if ((youtubeSettings.playerVars.loop && parseInt(youtubeSettings.playerVars.loop, 10) === 1 || mediaElement.originalNode.src.indexOf('loop=') > -1) && !youtubeSettings.playerVars.playlist && mediaElement.originalNode.src.indexOf('playlist=') === -1) {
                    youtubeSettings.playerVars.playlist = YouTubeApi.getYouTubeId(mediaElement.originalNode.src);
                }

                YouTubeApi.enqueueIframe(youtubeSettings);

                youtube.onEvent = function (eventName, player, _youTubeState) {
                    if (_youTubeState !== null && _youTubeState !== undefined) {
                        mediaElement.youTubeState = _youTubeState;
                    }
                };

                youtube.setSize = function (width, height) {
                    if (youTubeApi !== null) {
                        youTubeApi.setSize(width, height);
                    }
                };
                youtube.hide = function () {
                    youtube.stopInterval();
                    youtube.pause();
                    if (youTubeIframe) {
                        youTubeIframe.style.display = 'none';
                    }
                };
                youtube.show = function () {
                    if (youTubeIframe) {
                        youTubeIframe.style.display = '';
                    }
                };
                youtube.destroy = function () {
                    youTubeApi.destroy();
                };
                youtube.interval = null;

                youtube.startInterval = function () {
                    youtube.interval = setInterval(function () {
                        var event = (0, _general.createEvent)('timeupdate', youtube);
                        mediaElement.dispatchEvent(event);
                    }, 250);
                };
                youtube.stopInterval = function () {
                    if (youtube.interval) {
                        clearInterval(youtube.interval);
                    }
                };
                youtube.getPosterUrl = function () {
                    var quality = options.youtube.imageQuality,
                        resolutions = ['default', 'hqdefault', 'mqdefault', 'sddefault', 'maxresdefault'],
                        id = YouTubeApi.getYouTubeId(mediaElement.originalNode.src);
                    return quality && resolutions.indexOf(quality) > -1 && id ? 'https://img.youtube.com/vi/' + id + '/' + quality + '.jpg' : '';
                };

                return youtube;
            }
        };

        _window2.default.onYouTubePlayerAPIReady = function () {
            YouTubeApi.iFrameReady();
        };

        _media.typeChecks.push(function (url) {
            return (/\/\/(www\.youtube|youtu\.?be)/i.test(url) ? 'video/x-youtube' : null
            );
        });

        _renderer.renderer.add(YouTubeIframeRenderer);

    }, { "2": 2, "26": 26, "27": 27, "28": 28, "3": 3, "7": 7, "8": 8 }], 25: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.cancelFullScreen = exports.requestFullScreen = exports.isFullScreen = exports.FULLSCREEN_EVENT_NAME = exports.HAS_NATIVE_FULLSCREEN_ENABLED = exports.HAS_TRUE_NATIVE_FULLSCREEN = exports.HAS_IOS_FULLSCREEN = exports.HAS_MS_NATIVE_FULLSCREEN = exports.HAS_MOZ_NATIVE_FULLSCREEN = exports.HAS_WEBKIT_NATIVE_FULLSCREEN = exports.HAS_NATIVE_FULLSCREEN = exports.SUPPORTS_NATIVE_HLS = exports.SUPPORT_PASSIVE_EVENT = exports.SUPPORT_POINTER_EVENTS = exports.HAS_MSE = exports.IS_STOCK_ANDROID = exports.IS_SAFARI = exports.IS_FIREFOX = exports.IS_CHROME = exports.IS_EDGE = exports.IS_IE = exports.IS_ANDROID = exports.IS_IOS = exports.IS_IPOD = exports.IS_IPHONE = exports.IS_IPAD = exports.UA = exports.NAV = undefined;

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var NAV = exports.NAV = _window2.default.navigator;
        var UA = exports.UA = NAV.userAgent.toLowerCase();
        var IS_IPAD = exports.IS_IPAD = /ipad/i.test(UA) && !_window2.default.MSStream;
        var IS_IPHONE = exports.IS_IPHONE = /iphone/i.test(UA) && !_window2.default.MSStream;
        var IS_IPOD = exports.IS_IPOD = /ipod/i.test(UA) && !_window2.default.MSStream;
        var IS_IOS = exports.IS_IOS = /ipad|iphone|ipod/i.test(UA) && !_window2.default.MSStream;
        var IS_ANDROID = exports.IS_ANDROID = /android/i.test(UA);
        var IS_IE = exports.IS_IE = /(trident|microsoft)/i.test(NAV.appName);
        var IS_EDGE = exports.IS_EDGE = 'msLaunchUri' in NAV && !('documentMode' in _document2.default);
        var IS_CHROME = exports.IS_CHROME = /chrome/i.test(UA);
        var IS_FIREFOX = exports.IS_FIREFOX = /firefox/i.test(UA);
        var IS_SAFARI = exports.IS_SAFARI = /safari/i.test(UA) && !IS_CHROME;
        var IS_STOCK_ANDROID = exports.IS_STOCK_ANDROID = /^mozilla\/\d+\.\d+\s\(linux;\su;/i.test(UA);
        var HAS_MSE = exports.HAS_MSE = 'MediaSource' in _window2.default;
        var SUPPORT_POINTER_EVENTS = exports.SUPPORT_POINTER_EVENTS = function () {
            var element = _document2.default.createElement('x'),
                documentElement = _document2.default.documentElement,
                getComputedStyle = _window2.default.getComputedStyle;

            if (!('pointerEvents' in element.style)) {
                return false;
            }

            element.style.pointerEvents = 'auto';
            element.style.pointerEvents = 'x';
            documentElement.appendChild(element);
            var supports = getComputedStyle && (getComputedStyle(element, '') || {}).pointerEvents === 'auto';
            element.remove();
            return !!supports;
        }();

        var SUPPORT_PASSIVE_EVENT = exports.SUPPORT_PASSIVE_EVENT = function () {
            var supportsPassive = false;
            try {
                var opts = Object.defineProperty({}, 'passive', {
                    get: function get() {
                        supportsPassive = true;
                    }
                });
                _window2.default.addEventListener('test', null, opts);
            } catch (e) { }

            return supportsPassive;
        }();

        var html5Elements = ['source', 'track', 'audio', 'video'];
        var video = void 0;

        for (var i = 0, total = html5Elements.length; i < total; i++) {
            video = _document2.default.createElement(html5Elements[i]);
        }

        // Added by Russ
        video.setAttribute("crossorigin", "anonymous");

        var SUPPORTS_NATIVE_HLS = exports.SUPPORTS_NATIVE_HLS = IS_SAFARI || IS_ANDROID && (IS_CHROME || IS_STOCK_ANDROID) || IS_IE && /edge/i.test(UA);

        var hasiOSFullScreen = video.webkitEnterFullscreen !== undefined;

        var hasNativeFullscreen = video.requestFullscreen !== undefined;

        if (hasiOSFullScreen && /mac os x 10_5/i.test(UA)) {
            hasNativeFullscreen = false;
            hasiOSFullScreen = false;
        }

        var hasWebkitNativeFullScreen = video.webkitRequestFullScreen !== undefined;
        var hasMozNativeFullScreen = video.mozRequestFullScreen !== undefined;
        var hasMsNativeFullScreen = video.msRequestFullscreen !== undefined;
        var hasTrueNativeFullScreen = hasWebkitNativeFullScreen || hasMozNativeFullScreen || hasMsNativeFullScreen;
        var nativeFullScreenEnabled = hasTrueNativeFullScreen;
        var fullScreenEventName = '';
        var isFullScreen = void 0,
            requestFullScreen = void 0,
            cancelFullScreen = void 0;

        if (hasMozNativeFullScreen) {
            nativeFullScreenEnabled = _document2.default.mozFullScreenEnabled;
        } else if (hasMsNativeFullScreen) {
            nativeFullScreenEnabled = _document2.default.msFullscreenEnabled;
        }

        if (IS_CHROME) {
            hasiOSFullScreen = false;
        }

        if (hasTrueNativeFullScreen) {
            if (hasWebkitNativeFullScreen) {
                fullScreenEventName = 'webkitfullscreenchange';
            } else if (hasMozNativeFullScreen) {
                fullScreenEventName = 'mozfullscreenchange';
            } else if (hasMsNativeFullScreen) {
                fullScreenEventName = 'MSFullscreenChange';
            }

            exports.isFullScreen = isFullScreen = function isFullScreen() {
                if (hasMozNativeFullScreen) {
                    return _document2.default.mozFullScreen;
                } else if (hasWebkitNativeFullScreen) {
                    return _document2.default.webkitIsFullScreen;
                } else if (hasMsNativeFullScreen) {
                    return _document2.default.msFullscreenElement !== null;
                }
            };

            exports.requestFullScreen = requestFullScreen = function requestFullScreen(el) {

                // Added by Russ
                $(el).find("video").css("marginLeft", 0);
                $(el).find("video").css("marginRight", 0);

                if (hasWebkitNativeFullScreen) {
                    el.webkitRequestFullScreen();
                } else if (hasMozNativeFullScreen) {
                    el.mozRequestFullScreen();
                } else if (hasMsNativeFullScreen) {
                    el.msRequestFullscreen();
                }
            };

            exports.cancelFullScreen = cancelFullScreen = function cancelFullScreen() {
                if (hasWebkitNativeFullScreen) {
                    _document2.default.webkitCancelFullScreen();
                } else if (hasMozNativeFullScreen) {
                    _document2.default.mozCancelFullScreen();
                } else if (hasMsNativeFullScreen) {
                    _document2.default.msExitFullscreen();
                }
            };
        }

        var HAS_NATIVE_FULLSCREEN = exports.HAS_NATIVE_FULLSCREEN = hasNativeFullscreen;
        var HAS_WEBKIT_NATIVE_FULLSCREEN = exports.HAS_WEBKIT_NATIVE_FULLSCREEN = hasWebkitNativeFullScreen;
        var HAS_MOZ_NATIVE_FULLSCREEN = exports.HAS_MOZ_NATIVE_FULLSCREEN = hasMozNativeFullScreen;
        var HAS_MS_NATIVE_FULLSCREEN = exports.HAS_MS_NATIVE_FULLSCREEN = hasMsNativeFullScreen;
        var HAS_IOS_FULLSCREEN = exports.HAS_IOS_FULLSCREEN = hasiOSFullScreen;
        var HAS_TRUE_NATIVE_FULLSCREEN = exports.HAS_TRUE_NATIVE_FULLSCREEN = hasTrueNativeFullScreen;
        var HAS_NATIVE_FULLSCREEN_ENABLED = exports.HAS_NATIVE_FULLSCREEN_ENABLED = nativeFullScreenEnabled;
        var FULLSCREEN_EVENT_NAME = exports.FULLSCREEN_EVENT_NAME = fullScreenEventName;
        exports.isFullScreen = isFullScreen;
        exports.requestFullScreen = requestFullScreen;
        exports.cancelFullScreen = cancelFullScreen;


        _mejs2.default.Features = _mejs2.default.Features || {};
        _mejs2.default.Features.isiPad = IS_IPAD;
        _mejs2.default.Features.isiPod = IS_IPOD;
        _mejs2.default.Features.isiPhone = IS_IPHONE;
        _mejs2.default.Features.isiOS = _mejs2.default.Features.isiPhone || _mejs2.default.Features.isiPad;
        _mejs2.default.Features.isAndroid = IS_ANDROID;
        _mejs2.default.Features.isIE = IS_IE;
        _mejs2.default.Features.isEdge = IS_EDGE;
        _mejs2.default.Features.isChrome = IS_CHROME;
        _mejs2.default.Features.isFirefox = IS_FIREFOX;
        _mejs2.default.Features.isSafari = IS_SAFARI;
        _mejs2.default.Features.isStockAndroid = IS_STOCK_ANDROID;
        _mejs2.default.Features.hasMSE = HAS_MSE;
        _mejs2.default.Features.supportsNativeHLS = SUPPORTS_NATIVE_HLS;
        _mejs2.default.Features.supportsPointerEvents = SUPPORT_POINTER_EVENTS;
        _mejs2.default.Features.supportsPassiveEvent = SUPPORT_PASSIVE_EVENT;
        _mejs2.default.Features.hasiOSFullScreen = HAS_IOS_FULLSCREEN;
        _mejs2.default.Features.hasNativeFullscreen = HAS_NATIVE_FULLSCREEN;
        _mejs2.default.Features.hasWebkitNativeFullScreen = HAS_WEBKIT_NATIVE_FULLSCREEN;
        _mejs2.default.Features.hasMozNativeFullScreen = HAS_MOZ_NATIVE_FULLSCREEN;
        _mejs2.default.Features.hasMsNativeFullScreen = HAS_MS_NATIVE_FULLSCREEN;
        _mejs2.default.Features.hasTrueNativeFullScreen = HAS_TRUE_NATIVE_FULLSCREEN;
        _mejs2.default.Features.nativeFullScreenEnabled = HAS_NATIVE_FULLSCREEN_ENABLED;
        _mejs2.default.Features.fullScreenEventName = FULLSCREEN_EVENT_NAME;
        _mejs2.default.Features.isFullScreen = isFullScreen;
        _mejs2.default.Features.requestFullScreen = requestFullScreen;
        _mejs2.default.Features.cancelFullScreen = cancelFullScreen;

    }, { "2": 2, "3": 3, "7": 7 }], 26: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.removeClass = exports.addClass = exports.hasClass = undefined;
        exports.loadScript = loadScript;
        exports.offset = offset;
        exports.toggleClass = toggleClass;
        exports.fadeOut = fadeOut;
        exports.fadeIn = fadeIn;
        exports.siblings = siblings;
        exports.visible = visible;
        exports.ajax = ajax;

        var _window = _dereq_(3);

        var _window2 = _interopRequireDefault(_window);

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function loadScript(url) {
            return new Promise(function (resolve, reject) {
                var script = _document2.default.createElement('script');
                script.src = url;
                script.async = true;
                script.onload = function () {
                    script.remove();
                    resolve();
                };
                script.onerror = function () {
                    script.remove();
                    reject();
                };
                _document2.default.head.appendChild(script);
            });
        }

        function offset(el) {
            var rect = el.getBoundingClientRect(),
                scrollLeft = _window2.default.pageXOffset || _document2.default.documentElement.scrollLeft,
                scrollTop = _window2.default.pageYOffset || _document2.default.documentElement.scrollTop;
            return { top: rect.top + scrollTop, left: rect.left + scrollLeft };
        }

        var hasClassMethod = void 0,
            addClassMethod = void 0,
            removeClassMethod = void 0;

        if ('classList' in _document2.default.documentElement) {
            hasClassMethod = function hasClassMethod(el, className) {
                return el.classList !== undefined && el.classList.contains(className);
            };
            addClassMethod = function addClassMethod(el, className) {
                return el.classList.add(className);
            };
            removeClassMethod = function removeClassMethod(el, className) {
                return el.classList.remove(className);
            };
        } else {
            hasClassMethod = function hasClassMethod(el, className) {
                return new RegExp('\\b' + className + '\\b').test(el.className);
            };
            addClassMethod = function addClassMethod(el, className) {
                if (!hasClass(el, className)) {
                    el.className += ' ' + className;
                }
            };
            removeClassMethod = function removeClassMethod(el, className) {
                el.className = el.className.replace(new RegExp('\\b' + className + '\\b', 'g'), '');
            };
        }

        var hasClass = exports.hasClass = hasClassMethod;
        var addClass = exports.addClass = addClassMethod;
        var removeClass = exports.removeClass = removeClassMethod;

        function toggleClass(el, className) {
            hasClass(el, className) ? removeClass(el, className) : addClass(el, className);
        }

        function fadeOut(el) {
            var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
            var callback = arguments[2];

            if (!el.style.opacity) {
                el.style.opacity = 1;
            }

            var start = null;
            _window2.default.requestAnimationFrame(function animate(timestamp) {
                start = start || timestamp;
                var progress = timestamp - start;
                var opacity = parseFloat(1 - progress / duration, 2);
                el.style.opacity = opacity < 0 ? 0 : opacity;
                if (progress > duration) {
                    if (callback && typeof callback === 'function') {
                        callback();
                    }
                } else {
                    _window2.default.requestAnimationFrame(animate);
                }
            });
        }

        function fadeIn(el) {
            var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
            var callback = arguments[2];

            if (!el.style.opacity) {
                el.style.opacity = 0;
            }

            var start = null;
            _window2.default.requestAnimationFrame(function animate(timestamp) {
                start = start || timestamp;
                var progress = timestamp - start;
                var opacity = parseFloat(progress / duration, 2);
                el.style.opacity = opacity > 1 ? 1 : opacity;
                if (progress > duration) {
                    if (callback && typeof callback === 'function') {
                        callback();
                    }
                } else {
                    _window2.default.requestAnimationFrame(animate);
                }
            });
        }

        function siblings(el, filter) {
            var siblings = [];
            el = el.parentNode.firstChild;
            do {
                if (!filter || filter(el)) {
                    siblings.push(el);
                }
            } while (el = el.nextSibling);
            return siblings;
        }

        function visible(elem) {
            if (elem.getClientRects !== undefined && elem.getClientRects === 'function') {
                return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
            }
            return !!(elem.offsetWidth || elem.offsetHeight);
        }

        function ajax(url, dataType, success, error) {
            var xhr = _window2.default.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');

            var type = 'application/x-www-form-urlencoded; charset=UTF-8',
                completed = false,
                accept = '*/'.concat('*');

            switch (dataType) {
                case 'text':
                    type = 'text/plain';
                    break;
                case 'json':
                    type = 'application/json, text/javascript';
                    break;
                case 'html':
                    type = 'text/html';
                    break;
                case 'xml':
                    type = 'application/xml, text/xml';
                    break;
            }

            if (type !== 'application/x-www-form-urlencoded') {
                accept = type + ', */*; q=0.01';
            }

            if (xhr) {
                xhr.open('GET', url, true);
                xhr.setRequestHeader('Accept', accept);
                xhr.onreadystatechange = function () {
                    if (completed) {
                        return;
                    }

                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            completed = true;
                            var data = void 0;
                            switch (dataType) {
                                case 'json':
                                    data = JSON.parse(xhr.responseText);
                                    break;
                                case 'xml':
                                    data = xhr.responseXML;
                                    break;
                                default:
                                    data = xhr.responseText;
                                    break;
                            }
                            success(data);
                        } else if (typeof error === 'function') {
                            error(xhr.status);
                        }
                    }
                };

                xhr.send();
            }
        }

        _mejs2.default.Utils = _mejs2.default.Utils || {};
        _mejs2.default.Utils.offset = offset;
        _mejs2.default.Utils.hasClass = hasClass;
        _mejs2.default.Utils.addClass = addClass;
        _mejs2.default.Utils.removeClass = removeClass;
        _mejs2.default.Utils.toggleClass = toggleClass;
        _mejs2.default.Utils.fadeIn = fadeIn;
        _mejs2.default.Utils.fadeOut = fadeOut;
        _mejs2.default.Utils.siblings = siblings;
        _mejs2.default.Utils.visible = visible;
        _mejs2.default.Utils.ajax = ajax;
        _mejs2.default.Utils.loadScript = loadScript;

    }, { "2": 2, "3": 3, "7": 7 }], 27: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.escapeHTML = escapeHTML;
        exports.debounce = debounce;
        exports.isObjectEmpty = isObjectEmpty;
        exports.splitEvents = splitEvents;
        exports.createEvent = createEvent;
        exports.isNodeAfter = isNodeAfter;
        exports.isString = isString;

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function escapeHTML(input) {

            if (typeof input !== 'string') {
                throw new Error('Argument passed must be a string');
            }

            var map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;'
            };

            return input.replace(/[&<>"]/g, function (c) {
                return map[c];
            });
        }

        function debounce(func, wait) {
            var _this = this,
                _arguments = arguments;

            var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;


            if (typeof func !== 'function') {
                throw new Error('First argument must be a function');
            }

            if (typeof wait !== 'number') {
                throw new Error('Second argument must be a numeric value');
            }

            var timeout = void 0;
            return function () {
                var context = _this,
                    args = _arguments;
                var later = function later() {
                    timeout = null;
                    if (!immediate) {
                        func.apply(context, args);
                    }
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);

                if (callNow) {
                    func.apply(context, args);
                }
            };
        }

        function isObjectEmpty(instance) {
            return Object.getOwnPropertyNames(instance).length <= 0;
        }

        function splitEvents(events, id) {
            var rwindow = /^((after|before)print|(before)?unload|hashchange|message|o(ff|n)line|page(hide|show)|popstate|resize|storage)\b/;

            var ret = { d: [], w: [] };
            (events || '').split(' ').forEach(function (v) {
                var eventName = '' + v + (id ? '.' + id : '');

                if (eventName.startsWith('.')) {
                    ret.d.push(eventName);
                    ret.w.push(eventName);
                } else {
                    ret[rwindow.test(v) ? 'w' : 'd'].push(eventName);
                }
            });

            ret.d = ret.d.join(' ');
            ret.w = ret.w.join(' ');
            return ret;
        }

        function createEvent(eventName, target) {

            if (typeof eventName !== 'string') {
                throw new Error('Event name must be a string');
            }

            var eventFrags = eventName.match(/([a-z]+\.([a-z]+))/i),
                detail = {
                    target: target
                };

            if (eventFrags !== null) {
                eventName = eventFrags[1];
                detail.namespace = eventFrags[2];
            }

            return new window.CustomEvent(eventName, {
                detail: detail
            });
        }

        function isNodeAfter(sourceNode, targetNode) {

            return !!(sourceNode && targetNode && sourceNode.compareDocumentPosition(targetNode) & 2);
        }

        function isString(value) {
            return typeof value === 'string';
        }

        _mejs2.default.Utils = _mejs2.default.Utils || {};
        _mejs2.default.Utils.escapeHTML = escapeHTML;
        _mejs2.default.Utils.debounce = debounce;
        _mejs2.default.Utils.isObjectEmpty = isObjectEmpty;
        _mejs2.default.Utils.splitEvents = splitEvents;
        _mejs2.default.Utils.createEvent = createEvent;
        _mejs2.default.Utils.isNodeAfter = isNodeAfter;
        _mejs2.default.Utils.isString = isString;

    }, { "7": 7 }], 28: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.typeChecks = undefined;
        exports.absolutizeUrl = absolutizeUrl;
        exports.formatType = formatType;
        exports.getMimeFromType = getMimeFromType;
        exports.getTypeFromFile = getTypeFromFile;
        exports.getExtension = getExtension;
        exports.normalizeExtension = normalizeExtension;

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        var _general = _dereq_(27);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var typeChecks = exports.typeChecks = [];

        function absolutizeUrl(url) {

            if (typeof url !== 'string') {
                throw new Error('`url` argument must be a string');
            }

            var el = document.createElement('div');
            el.innerHTML = '<a href="' + (0, _general.escapeHTML)(url) + '">x</a>';
            return el.firstChild.href;
        }

        function formatType(url) {
            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

            return url && !type ? getTypeFromFile(url) : type;
        }

        function getMimeFromType(type) {

            if (typeof type !== 'string') {
                throw new Error('`type` argument must be a string');
            }

            return type && type.indexOf(';') > -1 ? type.substr(0, type.indexOf(';')) : type;
        }

        function getTypeFromFile(url) {

            if (typeof url !== 'string') {
                throw new Error('`url` argument must be a string');
            }

            for (var i = 0, total = typeChecks.length; i < total; i++) {
                var type = typeChecks[i](url);

                if (type) {
                    return type;
                }
            }

            var ext = getExtension(url),
                normalizedExt = normalizeExtension(ext);

            var mime = 'video/mp4';

            if (normalizedExt) {
                if (~['mp4', 'm4v', 'ogg', 'ogv', 'webm', 'flv', 'mpeg', 'mov'].indexOf(normalizedExt)) {
                    mime = 'video/' + normalizedExt;
                } else if (~['mp3', 'oga', 'wav', 'mid', 'midi'].indexOf(normalizedExt)) {
                    mime = 'audio/' + normalizedExt;
                }
            }

            return mime;
        }

        function getExtension(url) {

            if (typeof url !== 'string') {
                throw new Error('`url` argument must be a string');
            }

            var baseUrl = url.split('?')[0],
                baseName = baseUrl.split('\\').pop().split('/').pop();
            return ~baseName.indexOf('.') ? baseName.substring(baseName.lastIndexOf('.') + 1) : '';
        }

        function normalizeExtension(extension) {

            if (typeof extension !== 'string') {
                throw new Error('`extension` argument must be a string');
            }

            switch (extension) {
                case 'mp4':
                case 'm4v':
                    return 'mp4';
                case 'webm':
                case 'webma':
                case 'webmv':
                    return 'webm';
                case 'ogg':
                case 'oga':
                case 'ogv':
                    return 'ogg';
                default:
                    return extension;
            }
        }

        _mejs2.default.Utils = _mejs2.default.Utils || {};
        _mejs2.default.Utils.typeChecks = typeChecks;
        _mejs2.default.Utils.absolutizeUrl = absolutizeUrl;
        _mejs2.default.Utils.formatType = formatType;
        _mejs2.default.Utils.getMimeFromType = getMimeFromType;
        _mejs2.default.Utils.getTypeFromFile = getTypeFromFile;
        _mejs2.default.Utils.getExtension = getExtension;
        _mejs2.default.Utils.normalizeExtension = normalizeExtension;

    }, { "27": 27, "7": 7 }], 29: [function (_dereq_, module, exports) {
        'use strict';

        var _document = _dereq_(2);

        var _document2 = _interopRequireDefault(_document);

        var _promisePolyfill = _dereq_(4);

        var _promisePolyfill2 = _interopRequireDefault(_promisePolyfill);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        (function (arr) {
            arr.forEach(function (item) {
                if (item.hasOwnProperty('remove')) {
                    return;
                }
                Object.defineProperty(item, 'remove', {
                    configurable: true,
                    enumerable: true,
                    writable: true,
                    value: function remove() {
                        this.parentNode.removeChild(this);
                    }
                });
            });
        })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);

        (function () {

            if (typeof window.CustomEvent === 'function') {
                return false;
            }

            function CustomEvent(event, params) {
                params = params || { bubbles: false, cancelable: false, detail: undefined };
                var evt = _document2.default.createEvent('CustomEvent');
                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
                return evt;
            }

            CustomEvent.prototype = window.Event.prototype;
            window.CustomEvent = CustomEvent;
        })();

        if (typeof Object.assign !== 'function') {
            Object.assign = function (target) {

                if (target === null || target === undefined) {
                    throw new TypeError('Cannot convert undefined or null to object');
                }

                var to = Object(target);

                for (var index = 1, total = arguments.length; index < total; index++) {
                    var nextSource = arguments[index];

                    if (nextSource !== null) {
                        for (var nextKey in nextSource) {
                            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                                to[nextKey] = nextSource[nextKey];
                            }
                        }
                    }
                }
                return to;
            };
        }

        if (!String.prototype.startsWith) {
            String.prototype.startsWith = function (searchString, position) {
                position = position || 0;
                return this.substr(position, searchString.length) === searchString;
            };
        }

        if (!Element.prototype.matches) {
            Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {
                var matches = (this.document || this.ownerDocument).querySelectorAll(s),
                    i = matches.length - 1;
                while (--i >= 0 && matches.item(i) !== this) { }
                return i > -1;
            };
        }

        if (window.Element && !Element.prototype.closest) {
            Element.prototype.closest = function (s) {
                var matches = (this.document || this.ownerDocument).querySelectorAll(s),
                    i = void 0,
                    el = this;
                do {
                    i = matches.length;
                    while (--i >= 0 && matches.item(i) !== el) { }
                } while (i < 0 && (el = el.parentElement));
                return el;
            };
        }

        (function () {
            var lastTime = 0;
            var vendors = ['ms', 'moz', 'webkit', 'o'];
            for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
                window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
                window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
            }

            if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function () {
                    callback(currTime + timeToCall);
                }, timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };

            if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {
                clearTimeout(id);
            };
        })();

        if (/firefox/i.test(navigator.userAgent)) {
            var getComputedStyle = window.getComputedStyle;
            window.getComputedStyle = function (el, pseudoEl) {
                var t = getComputedStyle(el, pseudoEl);
                return t === null ? { getPropertyValue: function getPropertyValue() { } } : t;
            };
        }

        if (!window.Promise) {
            window.Promise = _promisePolyfill2.default;
        }

        (function (constructor) {
            if (constructor && constructor.prototype && constructor.prototype.children === null) {
                Object.defineProperty(constructor.prototype, 'children', {
                    get: function get() {
                        var i = 0,
                            node = void 0,
                            nodes = this.childNodes,
                            children = [];
                        while (node = nodes[i++]) {
                            if (node.nodeType === 1) {
                                children.push(node);
                            }
                        }
                        return children;
                    }
                });
            }
        })(window.Node || window.Element);

    }, { "2": 2, "4": 4 }], 30: [function (_dereq_, module, exports) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.isDropFrame = isDropFrame;
        exports.secondsToTimeCode = secondsToTimeCode;
        exports.timeCodeToSeconds = timeCodeToSeconds;
        exports.calculateTimeFormat = calculateTimeFormat;
        exports.convertSMPTEtoSeconds = convertSMPTEtoSeconds;

        var _mejs = _dereq_(7);

        var _mejs2 = _interopRequireDefault(_mejs);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function isDropFrame() {
            var fps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 25;

            return !(fps % 1 === 0);
        }
        function secondsToTimeCode(time) {
            var forceHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var showFrameCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var fps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 25;
            var secondsDecimalLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
            var timeFormat = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'hh:mm:ss';


            time = !time || typeof time !== 'number' || time < 0 ? 0 : time;

            var dropFrames = Math.round(fps * 0.066666),
                timeBase = Math.round(fps),
                framesPer24Hours = Math.round(fps * 3600) * 24,
                framesPer10Minutes = Math.round(fps * 600),
                frameSep = isDropFrame(fps) ? ';' : ':',
                hours = void 0,
                minutes = void 0,
                seconds = void 0,
                frames = void 0,
                f = Math.round(time * fps);

            if (isDropFrame(fps)) {

                if (f < 0) {
                    f = framesPer24Hours + f;
                }

                f = f % framesPer24Hours;

                var d = Math.floor(f / framesPer10Minutes);
                var m = f % framesPer10Minutes;
                f = f + dropFrames * 9 * d;
                if (m > dropFrames) {
                    f = f + dropFrames * Math.floor((m - dropFrames) / Math.round(timeBase * 60 - dropFrames));
                }

                var timeBaseDivision = Math.floor(f / timeBase);

                hours = Math.floor(Math.floor(timeBaseDivision / 60) / 60);
                minutes = Math.floor(timeBaseDivision / 60) % 60;

                if (showFrameCount) {
                    seconds = timeBaseDivision % 60;
                } else {
                    seconds = Math.floor(f / timeBase % 60).toFixed(secondsDecimalLength);
                }
            } else {
                hours = Math.floor(time / 3600) % 24;
                minutes = Math.floor(time / 60) % 60;
                if (showFrameCount) {
                    seconds = Math.floor(time % 60);
                } else {
                    seconds = Math.floor(time % 60).toFixed(secondsDecimalLength);
                }
            }
            hours = hours <= 0 ? 0 : hours;
            minutes = minutes <= 0 ? 0 : minutes;
            seconds = seconds <= 0 ? 0 : seconds;

            seconds = seconds === 60 ? 0 : seconds;
            minutes = minutes === 60 ? 0 : minutes;

            var timeFormatFrags = timeFormat.split(':');
            var timeFormatSettings = {};
            for (var i = 0, total = timeFormatFrags.length; i < total; ++i) {
                var unique = '';
                for (var j = 0, t = timeFormatFrags[i].length; j < t; j++) {
                    if (unique.indexOf(timeFormatFrags[i][j]) < 0) {
                        unique += timeFormatFrags[i][j];
                    }
                }
                if (~['f', 's', 'm', 'h'].indexOf(unique)) {
                    timeFormatSettings[unique] = timeFormatFrags[i].length;
                }
            }

            var result = forceHours || hours > 0 ? (hours < 10 && timeFormatSettings.h > 1 ? '0' + hours : hours) + ':' : '';
            result += (minutes < 10 && timeFormatSettings.m > 1 ? '0' + minutes : minutes) + ':';
            result += '' + (seconds < 10 && timeFormatSettings.s > 1 ? '0' + seconds : seconds);

            if (showFrameCount) {
                frames = (f % timeBase).toFixed(0);
                frames = frames <= 0 ? 0 : frames;
                result += frames < 10 && timeFormatSettings.f ? frameSep + '0' + frames : '' + frameSep + frames;
            }

            return result;
        }

        function timeCodeToSeconds(time) {
            var fps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 25;


            if (typeof time !== 'string') {
                throw new TypeError('Time must be a string');
            }

            if (time.indexOf(';') > 0) {
                time = time.replace(';', ':');
            }

            if (!/\d{2}(\:\d{2}){0,3}/i.test(time)) {
                throw new TypeError('Time code must have the format `00:00:00`');
            }

            var parts = time.split(':');

            var output = void 0,
                hours = 0,
                minutes = 0,
                seconds = 0,
                frames = 0,
                totalMinutes = 0,
                dropFrames = Math.round(fps * 0.066666),
                timeBase = Math.round(fps),
                hFrames = timeBase * 3600,
                mFrames = timeBase * 60;

            switch (parts.length) {
                default:
                case 1:
                    seconds = parseInt(parts[0], 10);
                    break;
                case 2:
                    minutes = parseInt(parts[0], 10);
                    seconds = parseInt(parts[1], 10);
                    break;
                case 3:
                    hours = parseInt(parts[0], 10);
                    minutes = parseInt(parts[1], 10);
                    seconds = parseInt(parts[2], 10);
                    break;
                case 4:
                    hours = parseInt(parts[0], 10);
                    minutes = parseInt(parts[1], 10);
                    seconds = parseInt(parts[2], 10);
                    frames = parseInt(parts[3], 10);
                    break;
            }

            if (isDropFrame(fps)) {
                totalMinutes = 60 * hours + minutes;
                output = hFrames * hours + mFrames * minutes + timeBase * seconds + frames - dropFrames * (totalMinutes - Math.floor(totalMinutes / 10));
            } else {
                output = (hFrames * hours + mFrames * minutes + fps * seconds + frames) / fps;
            }

            return parseFloat(output.toFixed(3));
        }

        function calculateTimeFormat(time, options) {
            var fps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 25;


            time = !time || typeof time !== 'number' || time < 0 ? 0 : time;

            var hours = Math.floor(time / 3600) % 24,
                minutes = Math.floor(time / 60) % 60,
                seconds = Math.floor(time % 60),
                frames = Math.floor((time % 1 * fps).toFixed(3)),
                lis = [[frames, 'f'], [seconds, 's'], [minutes, 'm'], [hours, 'h']];

            var format = options.timeFormat,
                firstTwoPlaces = format[1] === format[0],
                separatorIndex = firstTwoPlaces ? 2 : 1,
                separator = format.length < separatorIndex ? format[separatorIndex] : ':',
                firstChar = format[0],
                required = false;

            for (var i = 0, len = lis.length; i < len; i++) {
                if (~format.indexOf(lis[i][1])) {
                    required = true;
                } else if (required) {
                    var hasNextValue = false;
                    for (var j = i; j < len; j++) {
                        if (lis[j][0] > 0) {
                            hasNextValue = true;
                            break;
                        }
                    }

                    if (!hasNextValue) {
                        break;
                    }

                    if (!firstTwoPlaces) {
                        format = firstChar + format;
                    }
                    format = lis[i][1] + separator + format;
                    if (firstTwoPlaces) {
                        format = lis[i][1] + format;
                    }
                    firstChar = lis[i][1];
                }
            }

            options.timeFormat = format;
        }

        function convertSMPTEtoSeconds(SMPTE) {

            if (typeof SMPTE !== 'string') {
                throw new TypeError('Argument must be a string value');
            }

            SMPTE = SMPTE.replace(',', '.');

            var decimalLen = ~SMPTE.indexOf('.') ? SMPTE.split('.')[1].length : 0;

            var secs = 0,
                multiplier = 1;

            SMPTE = SMPTE.split(':').reverse();

            for (var i = 0, total = SMPTE.length; i < total; i++) {
                multiplier = 1;
                if (i > 0) {
                    multiplier = Math.pow(60, i);
                }
                secs += Number(SMPTE[i]) * multiplier;
            }
            return Number(secs.toFixed(decimalLen));
        }

        _mejs2.default.Utils = _mejs2.default.Utils || {};
        _mejs2.default.Utils.secondsToTimeCode = secondsToTimeCode;
        _mejs2.default.Utils.timeCodeToSeconds = timeCodeToSeconds;
        _mejs2.default.Utils.calculateTimeFormat = calculateTimeFormat;
        _mejs2.default.Utils.convertSMPTEtoSeconds = convertSMPTEtoSeconds;

    }, { "7": 7 }]
}, {}, [29, 6, 5, 15, 23, 20, 19, 21, 22, 24, 16, 18, 17, 9, 10, 11, 12, 13, 14]);
;
var MsSc = MsSc || {};
MsSc.MediaElementModalHelper = MsSc.MediaElementModalHelper || {};
var jq2143 = jQuery;

MsSc.MediaElementModalHelper.initMediaElementModalHelper = function ($elem) {

    $elem.on('click', function () {
        var $mediaElement = $('mediaelementwrapper video');
        $mediaElement.addClass('hidden');

        $mediaElement.on('loadeddata', function () {
            $mediaElement.removeClass('hidden');
        });
    });

};

jQuery(document).ready(function () {
    var $MediaElementModalHelperElem = jq2143('.video-thumbnail.cboxElement');

    if ($MediaElementModalHelperElem.length > 0) {
        MsSc.MediaElementModalHelper.initMediaElementModalHelper($MediaElementModalHelperElem);
    }
});;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Catalan
 *
 * @author
 * 	Tongro
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.ca === undefined) {
		exports.ca = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Descarregar arxiu',			
			'mejs.install-flash': 'Esteu utilitzant un navegador que no tingui Flash Player activat o instal·lat. Activeu el vostre complement Flash Player o descarregueu la versió més recent de https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Pantalla completa',			
			'mejs.play': 'Reproducció',
			'mejs.pause': 'Pausa',			
			'mejs.time-slider': 'Control lliscant de temps',
			'mejs.time-help-text': 'Utilitzeu les tecles de fletxa esquerra / dreta per avançar un segon, fletxes amunt / avall per avançar deu segons.',
			'mejs.live-broadcast' : 'Transmissió en directe',			
			'mejs.volume-help-text': 'Utilitzeu les tecles de fletxa amunt / avall per augmentar o disminuir el volum.',
			'mejs.unmute': 'Reactivar silenci',
			'mejs.mute': 'Silenci',
			'mejs.volume-slider': 'Control deslizador de volum',			
			'mejs.video-player': 'Reproductor de vídeo',
			'mejs.audio-player': 'Reproductor d\'àudio',			
			'mejs.captions-subtitles': 'Llegendes/Subtítols',
			'mejs.captions-chapters': 'Capítols',
			'mejs.none': 'Ningú',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albanès',
			'mejs.arabic': 'Àrab',
			'mejs.belarusian': 'Bielorús',
			'mejs.bulgarian': 'Búlgar',
			'mejs.catalan': 'Català',
			'mejs.chinese': 'Xinès',
			'mejs.chinese-simplified': 'Xinès (Simplificat)',
			'mejs.chinese-traditional': 'Xinès (Tradicional)',
			'mejs.croatian': 'Croat',
			'mejs.czech': 'Txec',
			'mejs.danish': 'Danès',
			'mejs.dutch': 'Holandès',
			'mejs.english': 'Anglès',
			'mejs.estonian': 'Estonià',
			'mejs.filipino': 'Filipí',
			'mejs.finnish': 'Finlandès',
			'mejs.french': 'Francès',
			'mejs.galician': 'Gallec',
			'mejs.german': 'Alemany',
			'mejs.greek': 'Grec',
			'mejs.haitian-creole': 'Crioll haitià',
			'mejs.hebrew': 'Hebreu',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Hongarès',
			'mejs.icelandic': 'Islandès',
			'mejs.indonesian': 'Indonesi',
			'mejs.irish': 'Irlandès',
			'mejs.italian': 'Italià',
			'mejs.japanese': 'Japonès',
			'mejs.korean': 'Coreà',
			'mejs.latvian': 'Letó',
			'mejs.lithuanian': 'Lituà',
			'mejs.macedonian': 'Macedoni',
			'mejs.malay': 'Malai',
			'mejs.maltese': 'Maltès',
			'mejs.norwegian': 'Noruec',
			'mejs.persian': 'Persa',
			'mejs.polish': 'Polonès',
			'mejs.portuguese': 'Portuguès',
			'mejs.romanian': 'Romanès',
			'mejs.russian': 'Rus',
			'mejs.serbian': 'Serbi',
			'mejs.slovak': 'Eslovac',
			'mejs.slovenian': 'Eslovè',
			'mejs.spanish': 'Espanyol',
			'mejs.swahili': 'Suahili',
			'mejs.swedish': 'Suec',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thai',
			'mejs.turkish': 'Turc',
			'mejs.ukrainian': 'Ucraïnès',
			'mejs.vietnamese': 'Vietnamita',
			'mejs.welsh': 'Gal·lès',
			'mejs.yiddish': 'Yiddish'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Czech
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.cs === undefined) {
		exports.cs = {
			'mejs.plural-form': 8,			
			'mejs.download-file': 'Stáhnout soubor',			
			'mejs.install-flash': 'Používáte prohlížeč, který nemá Flash Player povolen nebo nainstalován. Zapněte plugin Flash Player nebo stáhněte nejnovější verzi z adresy https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Celá obrazovka',			
			'mejs.play': 'Přehrát',
			'mejs.pause': 'Pozastavit',			
			'mejs.time-slider': 'Posuvný běžec nastavení času',
			'mejs.time-help-text': 'Použijte tlačítka se šipkami doleva / doprava pro posun o jednu vteřinu, tlačítka se šipkami nahoru / dolů pro posun o deset vteřin.',
			'mejs.live-broadcast' : 'Živé vysílání',			
			'mejs.volume-help-text': 'Použijte tlačítka se šipkami nahoru / dolů pro zesílení nebo zeslabení hlasitosti.',
			'mejs.unmute': 'Zapnout zvuk',
			'mejs.mute': 'Vypnout zvuk',
			'mejs.volume-slider': 'Posuvný běžec nastavení hlasitosti',			
			'mejs.video-player': 'Přehrávač videa',
			'mejs.audio-player': 'Přehrávač hudby',			
			'mejs.captions-subtitles': 'Titulky',
			'mejs.captions-chapters': 'Kapitoly',
			'mejs.none': 'Žádný',
			'mejs.afrikaans': 'Afrikánština',
			'mejs.albanian': 'Albánský',
			'mejs.arabic': 'Arabština',
			'mejs.belarusian': 'Běloruské',
			'mejs.bulgarian': 'Bulharský',
			'mejs.catalan': 'Katalánština',
			'mejs.chinese': 'čínština',
			'mejs.chinese-simplified': 'Zjednodušená čínština)',
			'mejs.chinese-traditional': 'Čínština (tradiční)',
			'mejs.croatian': 'Chorvatský',
			'mejs.czech': 'čeština',
			'mejs.danish': 'Dánština',
			'mejs.dutch': 'Holandský',
			'mejs.english': 'Angličtina',
			'mejs.estonian': 'Estonština',
			'mejs.filipino': 'Filipino',
			'mejs.finnish': 'Finština',
			'mejs.french': 'Francouzština',
			'mejs.galician': 'Galicijština',
			'mejs.german': 'Němec',
			'mejs.greek': 'řecký',
			'mejs.haitian-creole': 'Haitian kreolský',
			'mejs.hebrew': 'Hebrejština',
			'mejs.hindi': 'Hindština',
			'mejs.hungarian': 'Maďarský',
			'mejs.icelandic': 'Islandský',
			'mejs.indonesian': 'Indonéština',
			'mejs.irish': 'Irština',
			'mejs.italian': 'Italština',
			'mejs.japanese': 'Japonský',
			'mejs.korean': 'Korejština',
			'mejs.latvian': 'Lotyšský',
			'mejs.lithuanian': 'Lithuanian',
			'mejs.macedonian': 'Makedonština',
			'mejs.malay': 'Malay',
			'mejs.maltese': 'Maltština',
			'mejs.norwegian': 'Norština',
			'mejs.persian': 'Peršan',
			'mejs.polish': 'Polština',
			'mejs.portuguese': 'Portugalština',
			'mejs.romanian': 'Rumunština',
			'mejs.russian': 'Ruština',
			'mejs.serbian': 'Srbština',
			'mejs.slovak': 'Slovák',
			'mejs.slovenian': 'Slovinský',
			'mejs.spanish': 'španělština',
			'mejs.swahili': 'Svahilský',
			'mejs.swedish': 'švédský',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thajština',
			'mejs.turkish': 'Turečtina',
			'mejs.ukrainian': 'Ukrajinština',
			'mejs.vietnamese': 'Vietnamština',
			'mejs.welsh': 'Velština',
			'mejs.yiddish': 'Jidiš'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * German
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.de === undefined) {
		exports.de = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Datei herunterladen',			
			'mejs.install-flash': 'Ihr Browser unterstützt kein Flash. Bitte aktivieren Sie Flash bzw. laden Sie die aktuellste Flash-Version herunter unter https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Vollbild',			
			'mejs.play': 'Abspielen',
			'mejs.pause': 'Pause',			
			'mejs.time-slider': 'Zeitschieberegler',
			'mejs.time-help-text': 'Verwende die Pfeiltaste nach links/rechts, um eine Sekunde zu spulen, hoch/runter um zehn Sekunden zu spulen.',
			'mejs.live-broadcast' : 'Live-Übertragung',			
			'mejs.volume-help-text': 'Verwende die Pfeiltaste nach oben/nach unten um die Lautstärke zu erhöhen oder zu verringern.',
			'mejs.unmute': 'Stummschaltung aufheben',
			'mejs.mute': 'Stummschalten',
			'mejs.volume-slider': 'Lautstärkeregler',			
			'mejs.video-player': 'Video-Player',
			'mejs.audio-player': 'Audio-Player',			
			'mejs.captions-subtitles': 'Überschriften/Untertitel',
			'mejs.captions-chapters': 'Kapitel',
			'mejs.none': 'Keine',
			'mejs.afrikaans': 'Afrikanisch',
			'mejs.albanian': 'Albanisch',
			'mejs.arabic': 'Arabisch',
			'mejs.belarusian': 'Weißrussisch',
			'mejs.bulgarian': 'Bulgarisch',
			'mejs.catalan': 'Katalanisch',
			'mejs.chinese': 'Chinesisch',
			'mejs.chinese-simplified': 'Chinesisch (Vereinfacht)',
			'mejs.chinese-traditional': 'Chinesisch (Traditionell)',
			'mejs.croatian': 'Kroatisch',
			'mejs.czech': 'Tschechisch',
			'mejs.danish': 'Dänisch',
			'mejs.dutch': 'Niederländisch',
			'mejs.english': 'Englisch',
			'mejs.estonian': 'Estnisch',
			'mejs.filipino': 'Filipino',
			'mejs.finnish': 'Finnisch',
			'mejs.french': 'Französisch',
			'mejs.galician': 'Galicisch',
			'mejs.german': 'Deutsch',
			'mejs.greek': 'Griechisch',
			'mejs.haitian-creole': 'Haitianisch',
			'mejs.hebrew': 'Hebräisch',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Ungarisch',
			'mejs.icelandic': 'Isländisch',
			'mejs.indonesian': 'Indonesisch',
			'mejs.irish': 'Irisch',
			'mejs.italian': 'Italienisch',
			'mejs.japanese': 'Japanisch',
			'mejs.korean': 'Koreanisch',
			'mejs.latvian': 'Lettisch',
			'mejs.lithuanian': 'Litauisch',
			'mejs.macedonian': 'Mazedonisch',
			'mejs.malay': 'Malaysisch',
			'mejs.maltese': 'Maltesisch',
			'mejs.norwegian': 'Norwegisch',
			'mejs.persian': 'Persisch',
			'mejs.polish': 'Polnisch',
			'mejs.portuguese': 'Portugiesisch',
			'mejs.romanian': 'Rumänisch',
			'mejs.russian': 'Russisch',
			'mejs.serbian': 'Serbisch',
			'mejs.slovak': 'Slovakisch',
			'mejs.slovenian': 'Slovenisch',
			'mejs.spanish': 'Spanisch',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'Schwedisch',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thailändisch',
			'mejs.turkish': 'Türkisch',
			'mejs.ukrainian': 'Ukrainisch',
			'mejs.vietnamese': 'Vietnamnesisch',
			'mejs.welsh': 'Walisisch',
			'mejs.yiddish': 'Jiddisch',

            // Added by Russ
            'mejs.time-elapsed': 'Verstrichene Zeit',
            'mejs.duration-timer': 'Zeitmesser',
            'mejs.current-video-quality': 'Aktuelle Videoqualität'
		};
	}
})(mejs.i18n);
;
/*!
 * This is a `i18n` language object.
 *
 * Spanish
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *   Rafael Miranda (GitHub: @rafa8626)
 *
 * @see core/i18n.js
 */(function (exports) {
	if (exports.es === undefined) {
		exports.es = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Descargar archivo',			
			'mejs.install-flash': 'Esta usando un navegador que no tiene activado o instalado el reproductor de Flash. Por favor active el plugin del reproductor de Flash o descargue la versión más reciente en https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Pantalla completa',			
			'mejs.play': 'Reproducción',
			'mejs.pause': 'Pausa',			
			'mejs.time-slider': 'Control deslizante de tiempo',
			'mejs.time-help-text': 'Use las flechas Izquierda/Derecha para avanzar un segundo y las flechas Arriba/Abajo para avanzar diez segundos.',
			'mejs.live-broadcast': 'Transmisión en Vivo',			
			'mejs.volume-help-text': 'Use las flechas Arriba/Abajo para subir o bajar el volumen.',
			'mejs.unmute': 'Reactivar silencio',
			'mejs.mute': 'Silencio',
			'mejs.volume-slider': 'Control deslizante de volumen',			
			'mejs.video-player': 'Reproductor de video',
			'mejs.audio-player': 'Reproductor de audio',			
			'mejs.captions-subtitles': 'Leyendas/Subtítulos',
			'mejs.captions-chapters': 'Capítulos',
			'mejs.none': 'Ninguno',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albano',
			'mejs.arabic': 'Árabe',
			'mejs.belarusian': 'Bielorruso',
			'mejs.bulgarian': 'Búlgaro',
			'mejs.catalan': 'Catalán',
			'mejs.chinese': 'Chino',
			'mejs.chinese-simplified': 'Chino (Simplificado)',
			'mejs.chinese-traditional': 'Chino (Tradicional)',
			'mejs.croatian': 'Croata',
			'mejs.czech': 'Checo',
			'mejs.danish': 'Danés',
			'mejs.dutch': 'Holandés',
			'mejs.english': 'Inglés',
			'mejs.estonian': 'Estoniano',
			'mejs.filipino': 'Filipino',
			'mejs.finnish': 'Finlandés',
			'mejs.french': 'Francés',
			'mejs.galician': 'Gallego',
			'mejs.german': 'Alemán',
			'mejs.greek': 'Griego',
			'mejs.haitian-creole': 'Haitiano Criollo',
			'mejs.hebrew': 'Hebreo',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Húngaro',
			'mejs.icelandic': 'Islandés',
			'mejs.indonesian': 'Indonesio',
			'mejs.irish': 'Irlandés',
			'mejs.italian': 'Italiano',
			'mejs.japanese': 'Japonés',
			'mejs.korean': 'Coreano',
			'mejs.latvian': 'Letón',
			'mejs.lithuanian': 'Lituano',
			'mejs.macedonian': 'Macedonio',
			'mejs.malay': 'Malayo',
			'mejs.maltese': 'Maltés',
			'mejs.norwegian': 'Noruego',
			'mejs.persian': 'Persa',
			'mejs.polish': 'Polaco',
			'mejs.portuguese': 'Portugués',
			'mejs.romanian': 'Rumano',
			'mejs.russian': 'Ruso',
			'mejs.serbian': 'Serbio',
			'mejs.slovak': 'Eslovaco',
			'mejs.slovenian': 'Eslovenio',
			'mejs.spanish': 'Español',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'Suizo',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Tailandés',
			'mejs.turkish': 'Turco',
			'mejs.ukrainian': 'Ucraniano',
			'mejs.vietnamese': 'Vietnamita',
			'mejs.welsh': 'Galés',
			'mejs.yiddish': 'Yiddish',

            // Added by Russ
            'mejs.time-elapsed': 'Tiempo transcurrido',
            'mejs.duration-timer': 'Temporizador de la duración',
            'mejs.current-video-quality': 'Calidad del vídeo actual'
		};
	}
})(mejs.i18n);;
/*!
 * This is a `i18n` language object.
 *
 * Persian
 *
 * @author
 *   wmateam (GitHub: @wmateam)
 *
 * @see core/i18n.js
 */(function (exports) {
    'use strict';
    
    if (exports.fa === undefined) {
        exports.fa = {
            'mejs.plural-form': 0,
            'mejs.download-file': 'دریافت فایل',
            'mejs.install-flash': 'افزونه فلش پلیر روی مرورگر شما نصب نیست یا غیر فعال است.افزونه را فعال کنید و یا از https://get.adobe.com/flashplayer/ دریافت و نصب کنید.',
            'mejs.fullscreen': 'تمام صفحه',
            'mejs.play': 'پخش',
            'mejs.pause': 'توقف',
            'mejs.time-slider': 'تغییر زمان',
            'mejs.time-help-text': 'از کلید های چپ و راست کیبورد برای جا به جایی به میزان یک ثانیه استفاده کنید.همچنین کلید های بالا و پایین 10 ثانیه زمان را جا به جا می کند.',
            'mejs.live-broadcast': 'پخش زنده',
            'mejs.volume-help-text': 'از دکمه های بالا و پایین برای کم و زیاد کردن حجم صدا استفاده کنید.',
            'mejs.unmute': 'صدا دار',
            'mejs.mute': 'بی صدا',
            'mejs.volume-slider': 'تغییر حجم صدا',
            'mejs.video-player': 'پخش کننده ویدیو',
            'mejs.audio-player': 'پخش کننده صدا',
            'mejs.captions-subtitles': 'زیرنویس',
            'mejs.captions-chapters': 'قسمت',
            'mejs.none': 'هیچ',
            'mejs.afrikaans': 'آفریقایی',
            'mejs.albanian': 'آلبانیایی',
            'mejs.arabic': 'عربی',
            'mejs.belarusian': 'بلاروس',
            'mejs.bulgarian': 'بلغاری',
            'mejs.catalan': 'کاتالان',
            'mejs.chinese': 'چینی',
            'mejs.chinese-simplified': 'چینی (ساده شده)',
            'mejs.chinese-traditional': 'چینی (سنتی)',
            'mejs.croatian': 'کروات',
            'mejs.czech': 'چک',
            'mejs.danish': 'دانمارکی',
            'mejs.dutch': 'هلندی',
            'mejs.english': 'انگلیسی',
            'mejs.estonian': 'استونی',
            'mejs.filipino': 'فیلیپینی',
            'mejs.finnish': 'فنلاندری',
            'mejs.french': 'فرانسوی',
            'mejs.galician': 'گالیسی',
            'mejs.german': 'آلمانی',
            'mejs.greek': 'یونانی',
            'mejs.haitian-creole': 'کریول هائیتی',
            'mejs.hebrew': 'عبری',
            'mejs.hindi': 'هندی',
            'mejs.hungarian': 'مجارستانی',
            'mejs.icelandic': 'ایسلندی',
            'mejs.indonesian': 'اندونزی',
            'mejs.irish': 'ایرلندی',
            'mejs.italian': 'ایتالیایی',
            'mejs.japanese': 'ژاپنی',
            'mejs.korean': 'کره ای',
            'mejs.latvian': 'لتونی',
            'mejs.lithuanian': 'لیتوانی',
            'mejs.macedonian': 'مقدونی',
            'mejs.malay': 'مالایی',
            'mejs.maltese': 'مالتی',
            'mejs.norwegian': 'نروژی',
            'mejs.persian': 'فارسی',
            'mejs.polish': 'لهستانی',
            'mejs.portuguese': 'پرتغالی',
            'mejs.romanian': 'روانی',
            'mejs.russian': 'روسی',
            'mejs.serbian': 'صرب',
            'mejs.slovak': 'اسلواکی',
            'mejs.slovenian': 'اسلوونیایی',
            'mejs.spanish': 'اسپانیایی',
            'mejs.swahili': 'سواحیلی',
            'mejs.swedish': 'سوئد',
            'mejs.tagalog': 'تاگالوگ',
            'mejs.thai': 'تایلندی',
            'mejs.turkish': 'ترکی',
            'mejs.ukrainian': 'اوکراین',
            'mejs.vietnamese': 'ویتنامی',
            'mejs.welsh': 'ولزی',
            'mejs.yiddish': 'ییدیش'
        };
    }
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * French
 *
 * @author
 *   Luc Poupard (Twitter: @klohFR)
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.fr === undefined) {
		exports.fr = {
			'mejs.plural-form': 2,			
			'mejs.download-file': 'Télécharger le fichier',			
			'mejs.install-flash': 'Vous utilisez un navigateur sur lequel Flash ne semble pas installé ou activé. Veuillez activer le plugin Flash ou télécharger la dernière version sur https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Plein écran',			
			'mejs.play': 'Lecture',
			'mejs.pause': 'Pause',			
			'mejs.time-slider': 'Curseur temporel',
			'mejs.time-help-text': 'Utilisez les flèches Gauche/Droite du clavier pour avancer d\'une seconde, les flèches Haut/Bas pour avancer de 10 secondes.',
			'mejs.live-broadcast' : 'Diffusion en direct',			
			'mejs.volume-help-text': 'Utilisez les flèches Haut/Bas du clavier pour augmenter ou diminuer le volume.',
			'mejs.unmute': 'Activer le son',
			'mejs.mute': 'Désactiver le son',
			'mejs.volume-slider': 'Volume',			
			'mejs.video-player': 'Lecteur Vidéo',
			'mejs.audio-player': 'Lecteur Audio',			
			'mejs.captions-subtitles': 'Sous-titres',
			'mejs.captions-chapters': 'Chapitres',
			'mejs.none': 'Aucun',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albanais',
			'mejs.arabic': 'Arabe',
			'mejs.belarusian': 'Biélorusse',
			'mejs.bulgarian': 'Bulgare',
			'mejs.catalan': 'Catalan',
			'mejs.chinese': 'Chinois',
			'mejs.chinese-simplified': 'Chinois (simplifié)',
			'mejs.chinese-traditional': 'Chinois (traditionnel)',
			'mejs.croatian': 'Croate',
			'mejs.czech': 'Tchèque',
			'mejs.danish': 'Danois',
			'mejs.dutch': 'Néerlandais',
			'mejs.english': 'Anglais',
			'mejs.estonian': 'Estonien',
			'mejs.filipino': 'Filipino',
			'mejs.finnish': 'Finnois',
			'mejs.french': 'Français',
			'mejs.galician': 'Galicien',
			'mejs.german': 'Allemand',
			'mejs.greek': 'Grec',
			'mejs.haitian-creole': 'Créole haïtien',
			'mejs.hebrew': 'Hébreu',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Hongrois',
			'mejs.icelandic': 'Islandais',
			'mejs.indonesian': 'Indonésien',
			'mejs.irish': 'Irlandais',
			'mejs.italian': 'Italien',
			'mejs.japanese': 'Japonais',
			'mejs.korean': 'Coréen',
			'mejs.latvian': 'Letton',
			'mejs.lithuanian': 'Lituanien',
			'mejs.macedonian': 'Macédonien',
			'mejs.malay': 'Malais',
			'mejs.maltese': 'Maltais',
			'mejs.norwegian': 'Norvégien',
			'mejs.persian': 'Perse',
			'mejs.polish': 'Polonais',
			'mejs.portuguese': 'Portugais',
			'mejs.romanian': 'Roumain',
			'mejs.russian': 'Russe',
			'mejs.serbian': 'Serbe',
			'mejs.slovak': 'Slovaque',
			'mejs.slovenian': 'Slovène',
			'mejs.spanish': 'Espagnol',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'Suédois',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thaï',
			'mejs.turkish': 'Turque',
			'mejs.ukrainian': 'Ukrainien',
			'mejs.vietnamese': 'Vietnamien',
			'mejs.welsh': 'Gallois',
			'mejs.yiddish': 'Yiddish',

            // Added by Russ
            'mejs.time-elapsed': 'Période écoulée',
            'mejs.duration-timer': 'Minuteur de durée',
            'mejs.current-video-quality': 'Qualité de la vidéo en cours'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Croatian
 *
 * @author
 *   Hrvoj3e (hrvoj3e@gmail.com) * @see core/i18n.js
 */
(function (exports) {
	if (exports.hr === undefined) {
		exports.hr = {
			'mejs.plural-form': 7,			
			'mejs.download-file': 'Preuzmi datoteku',			
			'mejs.install-flash': 'Koristite preglednik koji nema omogućen ili instaliran Flash preglednik. Molimo Vas uključite Flash dodatak ili preuzmite najnoviju verziju s https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Puni zaslon',			
			'mejs.play': 'Pokreni',
			'mejs.pause': 'Zaustavi',			
			'mejs.time-slider': 'Vremenska traka',
			'mejs.time-help-text': 'Koristi strelice lijevo/desno za pomak naprijed za 1 sekundu te gore/dolje za pomak od 10 sekundi.',
			'mejs.live-broadcast' : 'Prijenos uživo',			
			'mejs.volume-help-text': 'Koristi strelice gore/dolje za pojačavanje ili stišavanje.',
			'mejs.unmute': 'Uključi zvuk',
			'mejs.mute': 'Isključi zvuk',
			'mejs.volume-slider': 'Pokazivač razine zvuka',			
			'mejs.video-player': 'Video preglednik',
			'mejs.audio-player': 'Audio preglednik',			
			'mejs.captions-subtitles': 'Opisi/Prijevodi',
			'mejs.captions-chapters': 'Poglavlja',
			'mejs.none': 'Ništa',
			'mejs.afrikaans': 'Afrički',
			'mejs.albanian': 'Albanski',
			'mejs.arabic': 'Arapski',
			'mejs.belarusian': 'Bjeloruski',
			'mejs.bulgarian': 'Bugarski',
			'mejs.catalan': 'Katalonski',
			'mejs.chinese': 'Kineski',
			'mejs.chinese-simplified': 'Kineski (jednostavni)',
			'mejs.chinese-traditional': 'Kineski (tradicionalni)',
			'mejs.croatian': 'Hrvatski',
			'mejs.czech': 'Češki',
			'mejs.danish': 'Danski',
			'mejs.dutch': 'Nizozemski',
			'mejs.english': 'Engleski',
			'mejs.estonian': 'Estonski',
			'mejs.filipino': 'Filipinski',
			'mejs.finnish': 'Finski',
			'mejs.french': 'Francuski',
			'mejs.galician': 'Galicijski',
			'mejs.german': 'Njemački',
			'mejs.greek': 'Grčki',
			'mejs.haitian-creole': 'Haićanski kreolski',
			'mejs.hebrew': 'Hebrejski',
			'mejs.hindi': 'Hindski',
			'mejs.hungarian': 'Mađarski',
			'mejs.icelandic': 'Islandski',
			'mejs.indonesian': 'Indonezijski',
			'mejs.irish': 'Irski',
			'mejs.italian': 'Talijanski',
			'mejs.japanese': 'Japanski',
			'mejs.korean': 'Korejski',
			'mejs.latvian': 'Latvijski',
			'mejs.lithuanian': 'Litvanski',
			'mejs.macedonian': 'Makedonski',
			'mejs.malay': 'Malajski',
			'mejs.maltese': 'Malteški',
			'mejs.norwegian': 'Norveški',
			'mejs.persian': 'Perzijski',
			'mejs.polish': 'Poljski',
			'mejs.portuguese': 'Portugalski',
			'mejs.romanian': 'Rumunjski',
			'mejs.russian': 'Ruski',
			'mejs.serbian': 'Srpski',
			'mejs.slovak': 'Slovački',
			'mejs.slovenian': 'Slovenski',
			'mejs.spanish': 'Španjolski',
			'mejs.swahili': 'Svahili',
			'mejs.swedish': 'Švedski',
			'mejs.tagalog': 'Tagaloški',
			'mejs.thai': 'Tajski',
			'mejs.turkish': 'Turski',
			'mejs.ukrainian': 'Ukrajinski',
			'mejs.vietnamese': 'Vijetnamski',
			'mejs.welsh': 'Velški',
			'mejs.yiddish': 'Jidiški'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Hungarian
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.hu === undefined) {
		exports.hu = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Fájl letöltése',			
			'mejs.install-flash': 'Olyan böngészőt használ, amelyhez nincs engedélyezve vagy telepítve a Flash player. Kérjük, kapcsolja be a Flash-lejátszó bővítményét, vagy töltse le a legfrissebb verziót a https://get.adobe.com/flashplayer/ címen',			
			'mejs.fullscreen': 'Teljes képernyő',			
			'mejs.play': 'Lejátszás',
			'mejs.pause': 'Szünet',			
			'mejs.time-slider': 'Idő csúszka',
			'mejs.time-help-text': 'Használja a Bal/Jobb nyíl gombokat az egy másodperces léptetéshez, a Fel/Le nyíl gombokat a tíz másodperces léptetéshez.',
			'mejs.live-broadcast' : 'Élő közvetítés',			
			'mejs.volume-help-text': 'Használja a Fel/Le nyíl gombokat a hangerő növeléséhez vagy csökkentéséhez.',
			'mejs.unmute': 'Némítás feloldása',
			'mejs.mute': 'Némítás',
			'mejs.volume-slider': 'Hangerőcsúszka',			
			'mejs.video-player': 'Videolejátszó',
			'mejs.audio-player': 'Audiolejátszó',			
			'mejs.captions-subtitles': 'Képaláírás/Feliratok',
			'mejs.captions-chapters': 'Fejezetek',
			'mejs.none': 'Nincs',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albán',
			'mejs.arabic': 'Arab',
			'mejs.belarusian': 'Belorusz',
			'mejs.bulgarian': 'Bolgár',
			'mejs.catalan': 'Katalán',
			'mejs.chinese': 'Kínai',
			'mejs.chinese-simplified': 'Kínai (Egyszerűsített)',
			'mejs.chinese-traditional': 'Kínai (Hagyományos)',
			'mejs.croatian': 'Horvát',
			'mejs.czech': 'Cseh',
			'mejs.danish': 'Dán',
			'mejs.dutch': 'Holland',
			'mejs.english': 'Angol',
			'mejs.estonian': 'Észt',
			'mejs.filipino': 'Filippínó',
			'mejs.finnish': 'Finn',
			'mejs.french': 'Francia',
			'mejs.galician': 'Galíciai',
			'mejs.german': 'Német',
			'mejs.greek': 'Görög',
			'mejs.haitian-creole': 'Haiti Kreol',
			'mejs.hebrew': 'Héber',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Magyar',
			'mejs.icelandic': 'Izlandi',
			'mejs.indonesian': 'Indonéz',
			'mejs.irish': 'Ír',
			'mejs.italian': 'Olasz',
			'mejs.japanese': 'Japán',
			'mejs.korean': 'Koreai',
			'mejs.latvian': 'Lett',
			'mejs.lithuanian': 'Litván',
			'mejs.macedonian': 'Macedóniai',
			'mejs.malay': 'Maláj',
			'mejs.maltese': 'Máltai',
			'mejs.norwegian': 'Norvég',
			'mejs.persian': 'Perzsa',
			'mejs.polish': 'Lengyel',
			'mejs.portuguese': 'Portugál',
			'mejs.romanian': 'Román',
			'mejs.russian': 'Orosz',
			'mejs.serbian': 'Szerb',
			'mejs.slovak': 'Szlovák',
			'mejs.slovenian': 'Szlovén',
			'mejs.spanish': 'Spanyol',
			'mejs.swahili': 'Szuahéli',
			'mejs.swedish': 'Svéd',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thai',
			'mejs.turkish': 'Török',
			'mejs.ukrainian': 'Ukrán',
			'mejs.vietnamese': 'Vietnami',
			'mejs.welsh': 'Walesi',
			'mejs.yiddish': 'Jiddis'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Italian
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha 'SoftCreatR' Greuel
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.it === undefined) {
		exports.it = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Scaricare il file',			
			'mejs.install-flash': 'Stai utilizzando un browser che non dispone di Flash Player abilitato o installato. Accenda il tuo plug-in Flash Player o scarica la versione più recente da https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Schermo intero',			
			'mejs.play': 'Eseguire',
			'mejs.pause': 'Pausa',			
			'mejs.time-slider': 'Barra di scorrimento',
			'mejs.time-help-text': 'Utilizzare i tasti Freccia sinistra/Freccia destra per avanzare di un secondo, Freccia Su/Giù per avanzare dieci secondi.',
			'mejs.live-broadcast' : 'Trasmissione in diretta',			
			'mejs.volume-help-text': 'Utilizzare i tasti Freccia Su/Giù per aumentare o diminuire il volume.',
			'mejs.unmute': 'Disattivare muto',
			'mejs.mute': 'Muto',
			'mejs.volume-slider': 'Barra del volume',			
			'mejs.video-player': 'Lettore Video',
			'mejs.audio-player': 'Lettore Audio',			
			'mejs.captions-subtitles': 'Acquisizioni/sottotitoli',
			'mejs.captions-chapters': 'Capitoli',
			'mejs.none': 'Nessuno',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albanese',
			'mejs.arabic': 'Arabo',
			'mejs.belarusian': 'Bielorusso',
			'mejs.bulgarian': 'Bulgaro',
			'mejs.catalan': 'Catalano',
			'mejs.chinese': 'Cinese',
			'mejs.chinese-semplificato': 'Cinese (Semplificato)',
			'mejs.chinese-traditional': 'Cinese (Tradizionale)',
			'mejs.croatian': 'Croato',
			'mejs.czech': 'Ceco',
			'mejs.danish': 'Danese',
			'mejs.dutch': 'Olandese',
			'mejs.english': 'Inglese',
			'mejs.estonian': 'Estone',
			'mejs.filipino': 'Filippino',
			'mejs.finnish': 'Finlandese',
			'mejs.french': 'Francese',
			'mejs.galician': 'Galiziano',
			'mejs.german': 'Tedesco',
			'mejs.greek': 'Greco',
			'mejs.haitian-creole': 'Creolo Haitiano',
			'mejs.hebrew': 'Ebraico',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Ungherese',
			'mejs.icelandic': 'Islandese',
			'mejs.indonesian': 'Indonesiano',
			'mejs.irish': 'Irlandese',
			'mejs.italian': 'Italiano',
			'mejs.japanese': 'Giapponese',
			'mejs.korean': 'Coreano',
			'mejs.latvian': 'Lettone',
			'mejs.lithuanian': 'Lituano',
			'mejs.macedonian': 'Macedone',
			'mejs.malay': 'Malay',
			'mejs.maltese': 'Maltese',
			'mejs.norwegian': 'Norvegese',
			'mejs.persian': 'Persiano',
			'mejs.polish': 'Polacco',
			'mejs.portuguese': 'Portoghese',
			'mejs.romanian': 'Rumeno',
			'mejs.russian': 'Russo',
			'mejs.serbian': 'Serbo',
			'mejs.slovak': 'Slovacco',
			'mejs.slovenian': 'Sloveno',
			'mejs.spanish': 'Spagnolo',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'Svedese',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thai',
			'mejs.turkish': 'Turco',
			'mejs.ukrainian': 'Ucraino',
			'mejs.vietnamese': 'Vietnamita',
			'mejs.welsh': 'Gallese',
			'mejs.yiddish': 'Yiddish',

            // Added by Russ
            'mejs.time-elapsed': 'Tempo trascorso',
            'mejs.duration-timer': 'Timer durata',
            'mejs.current-video-quality': 'Qualità video corrente'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Japanese
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha 'SoftCreatR' Greuel
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.ja === undefined) {
		exports.ja = {
			'mejs.plural-form': 0,			
			'mejs.download-file': 'ファイルをダウンロードする',			
			'mejs.install-flash': 'Flash Playerが有効またはインストールされていないブラウザを使用しています。Flash Playerプラグインをオンにするか,https://get.adobe.com/flashplayer/から最新バージョンをダウンロードしてください。',			
			'mejs.fullscreen': '全画面',			
			'mejs.play': '再生',
			'mejs.pause': '一時停止',			
			'mejs.time-slider': 'タイムスライダー',
			'mejs.time-help-text': '1秒進めるには左/右矢印をキーを,10秒進めるには上/下矢印を使います。',
			'mejs.live-broadcast': 'ライブブロードキャスト',			
			'mejs.volume-help-text': '音量を上げたり下げたりするには,上/下矢印を使います。',
			'mejs.unmute': 'ミュートを解除',
			'mejs.mute': 'ミュート',
			'mejs.volume-slider': '音量スライダー',			
			'mejs.video-player': 'ビデオプレーヤー',
			'mejs.audio-player': 'オーディオプレーヤー',			
			'mejs.captions-subtitles': 'キャプション/字幕',
			'mejs.captions-chapters': '章',
			'mejs.none': 'なし',
			'mejs.afrikaans': 'アフリカーンス語',
			'mejs.albanian': 'アルバニア語',
			'mejs.arabic': 'アラビア語',
			'mejs.belarusian': 'ベラルーシ語',
			'mejs.bulgarian': 'ブルガリア語',
			'mejs.catalan': 'カタロニア語',
			'mejs.chinese': '中国語',
			'mejs.chinese-simplified': '中国語（簡体字）',
			'mejs.chinese-traditional': '中国語（繁体字）',
			'mejs.croatian': 'クロアチア語',
			'mejs.czech': 'チェコ語',
			'mejs.danish': 'デンマーク語',
			'mejs.dutch': 'オランダの',
			'mejs.english': '英語',
			'mejs.estonian': 'エストニア語',
			'mejs.filipino': 'フィリピン人',
			'mejs.finnish': 'フィンランド語',
			'mejs.french': 'フランス語',
			'mejs.galician': 'ガリシア人',
			'mejs.german': 'ドイツ語',
			'mejs.greek': 'ギリシャ語',
			'mejs.haitian-creole': 'ハイチクレオール',
			'mejs.hebrew': 'ヘブライ語',
			'mejs.hindi': 'ヒンディー語',
			'mejs.hungarian': 'ハンガリー語',
			'mejs.icelandic': 'アイスランド語',
			'mejs.indonesian': 'インドネシア語',
			'mejs.irish': 'アイルランド',
			'mejs.italian': 'イタリア語',
			'mejs.japanese': '日本語',
			'mejs.korean': '韓国語',
			'mejs.latvian': 'ラトビア語',
			'mejs.lithuanian': 'リトアニア語',
			'mejs.macedonian': 'マケドニアの',
			'mejs.malay': 'マレー語',
			'mejs.maltese': 'マルタ',
			'mejs.norwegian': 'ノルウェー語',
			'mejs.persian': 'ペルシア語',
			'mejs.polish': 'ポーランド語',
			'mejs.portuguese': 'ポルトガル語',
			'mejs.romanian': 'ルーマニア語',
			'mejs.russian': 'ロシア語',
			'mejs.serbian': 'セルビア語',
			'mejs.slovak': 'スロバキア語',
			'mejs.slovenian': 'スロベニア語',
			'mejs.spanish': 'スペイン語',
			'mejs.swahili': 'スワヒリ語',
			'mejs.swedish': 'スウェーデン語',
			'mejs.tagalog': 'タガログ',
			'mejs.thai': 'タイ',
			'mejs.turkish': 'トルコ語',
			'mejs.ukrainian': 'ウクライナ語',
			'mejs.vietnamese': 'ベトナム語',
			'mejs.welsh': 'ウェールズ',
			'mejs.yiddish': 'イディッシュ',

            // Added by Russ
            'mejs.time-elapsed': '経過時間',
            'mejs.duration-timer': '継続タイマー',
            'mejs.current-video-quality': '現行ビデオ品質'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Korean
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha 'SoftCreatR' Greuel
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.ko === undefined) {
		exports.ko = {
			'mejs.plural-form': 0,			
			'mejs.download-file': '파일 다운로드',			
			'mejs.install-flash': 'Flash Player가 활성화되거나 설치되지 않은 브라우저를 사용 중입니다. 플래시 플레이어 플러그인을 켜거나 https://get.adobe.com/flashplayer/에서 최신 버전을 다운로드하십시오.',			
			'mejs.fullscreen': '전체화면',			
			'mejs.play': '작동',
			'mejs.pause': '정지',			
			'mejs.time-slider': '시간 슬라이더',
			'mejs.time-help-text': '1초 전진하려면 좌/우측 화살표를 사용하시고 10초 전진하려면 위/아래 화살표를 사용하세요.',
			'mejs.live-broadcast' : '생방송',			
			'mejs.volume-help-text': '볼륨을 높이거나 낮추려면 위/아래 화살표를 이용하세요.',
			'mejs.unmute': '음소거 해제',
			'mejs.mute': '말 없는',
			'mejs.volume-slider': '볼륨 슬라이더',			
			'mejs.video-player': '비디오 플레이어',
			'mejs.audio-player': '오디오 플레이어',			
			'mejs.captions-subtitles': '캡션/자막',
			'mejs.captions-chapters': '챕터',
			'mejs.none': '없음',
			'mejs.afrikaans': '아프리칸스어',
			'mejs.albanian': '알바니아',
			'mejs.arabic': '아랍어',
			'mejs.belarusian': '벨로루시 어',
			'mejs.bulgarian': '불가리아',
			'mejs.catalan': '카탈로니아 어',
			'mejs.chinese': '중국어',
			'mejs.chinese-simplified': '중국어 (간체)',
			'mejs.chinese-traditional': '중국어 (번체)',
			'mejs.croatian': '크로아티아어',
			'mejs.czech': '체코 어',
			'mejs.danish': '덴마크어',
			'mejs.dutch': '네덜란드어',
			'mejs.english': '영어',
			'mejs.estonian': '에스토니아',
			'mejs.filipino': '필리핀',
			'mejs.finnish': '핀란드어',
			'mejs.french': '프랑스어',
			'mejs.galician': '갈리시아인',
			'mejs.german': '독일어',
			'mejs.greek': '그리스어',
			'mejs.haitian-creole': '아이티 크리올',
			'mejs.hebrew': '히브리어',
			'mejs.hindi': '힌디어',
			'mejs.hungarian': '헝가리어',
			'mejs.icelandic': '아이슬란드 어',
			'mejs.indonesian': '인도네시아어',
			'mejs.irish': '아일랜드어',
			'mejs.italian': '이탈리아어',
			'mejs.japanese': '일본어',
			'mejs.korean': '한국어',
			'mejs.latvian': '라트비아어',
			'mejs.lithuanian': '리투아니아어',
			'mejs.macedonian': '마케도니아인',
			'mejs.malay': '말레이',
			'mejs.maltese': '몰타어',
			'mejs.norwegian': '노르웨이어',
			'mejs.persian': '페르시아어',
			'mejs.polish': '폴란드어',
			'mejs.portuguese': '포르투갈어',
			'mejs.romanian': '루마니아어',
			'mejs.russian': '러시아어',
			'mejs.serbian': '세르비아어',
			'mejs.slovak': '슬로바키아어',
			'mejs.slovenian': '슬로베니아어',
			'mejs.spanish': '스페인어',
			'mejs.swahili': '스와힐리어',
			'mejs.swedish': '스웨덴어',
			'mejs.tagalog': '타갈로그어',
			'mejs.thai': '태국어',
			'mejs.turkish': '터키어',
			'mejs.ukrainian': '우크라이나어',
			'mejs.vietnamese': '베트남인',
			'mejs.welsh': '웨일스 어',
			'mejs.yiddish': '이디시어',

            // Added by Russ
            'mejs.time-elapsed': '경과 시간',
            'mejs.duration-timer': '타이머',
            'mejs.current-video-quality': '비디오 화질'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Malay (for inter-country use - see the countries mentioned in infobox`s `native to` at https://en.wikipedia.org/wiki/Malay_language)
 *
 * @author
 *   muhdnurhidayat (Twitter: @mnh48com)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.ms === undefined) {
		exports.ms = {
			'mejs.plural-form': 0,			
			'mejs.download-file': 'Muat Turun Fail',			
			'mejs.install-flash': 'Anda sedang menggunakan pelayar internet yang tidak mempunyai pemain Flash. Sila aktifkan pemalam pemain Flash anda atau muat turun versi terbaru dari https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Skrin penuh',			
			'mejs.play': 'Main',
			'mejs.pause': 'Jeda',			
			'mejs.time-slider': 'Lungsur Masa',
			'mejs.time-help-text': 'Gunakan kekunci Anak Panah Kiri/Kanan untuk bergerak satu saat, Anak Panah Atas/Bawah untuk bergerak sepuluh saat.',
			'mejs.live-broadcast' : 'Siaran Langsung',			
			'mejs.volume-help-text': 'Gunakan kekunci Anak Panah Atas/Bawah untuk menguatkan atau memperlahankan bunyi.',
			'mejs.unmute': 'Nyahsenyap',
			'mejs.mute': 'Senyap',
			'mejs.volume-slider': 'Lungsur Bunyi',			
			'mejs.video-player': 'Pemain Video',
			'mejs.audio-player': 'Pemain Audio',			
			'mejs.captions-subtitles': 'Sarikata',
			'mejs.captions-chapters': 'Bab',
			'mejs.none': 'Tiada',
			'mejs.afrikaans': 'Bahasa Afrikaans',
			'mejs.albanian': 'Bahasa Albania',
			'mejs.arabic': 'Bahasa Arab',
			'mejs.belarusian': 'Bahasa Belarus',
			'mejs.bulgarian': 'Bahasa Bulgaria',
			'mejs.catalan': 'Bahasa Catalonia',
			'mejs.chinese': 'Bahasa Cina',
			'mejs.chinese-simplified': 'Bahasa Cina (Ringkas)',
			'mejs.chinese-traditional': 'Bahasa Cina (Tradisional)',
			'mejs.croatian': 'Bahasa Croatia',
			'mejs.czech': 'Bahasa Czech',
			'mejs.danish': 'Bahasa Denmark',
			'mejs.dutch': 'Bahasa Belanda',
			'mejs.english': 'Bahasa Inggeris',
			'mejs.estonian': 'Bahasa Estonia',
			'mejs.filipino': 'Bahasa Filipino',
			'mejs.finnish': 'Bahasa Finland',
			'mejs.french': 'Bahasa Perancis',
			'mejs.galician': 'Bahasa Galicia',
			'mejs.german': 'Bahasa Jerman',
			'mejs.greek': 'Bahasa Greek',
			'mejs.haitian-creole': 'Bahasa Kreol Haiti',
			'mejs.hebrew': 'Bahasa Ibrani',
			'mejs.hindi': 'Bahasa Hindi',
			'mejs.hungarian': 'Bahasa Hungary',
			'mejs.icelandic': 'Bahasa Iceland',
			'mejs.indonesian': 'Bahasa Indonesia',
			'mejs.irish': 'Bahasa Ireland',
			'mejs.italian': 'Bahasa Itali',
			'mejs.japanese': 'Bahasa Jepun',
			'mejs.korean': 'Bahasa Korea',
			'mejs.latvian': 'Bahasa Latvia',
			'mejs.lithuanian': 'Bahasa Lithuania',
			'mejs.macedonian': 'Bahasa Macedonia',
			'mejs.malay': 'Bahasa Melayu',
			'mejs.maltese': 'Bahasa Malta',
			'mejs.norwegian': 'Bahasa Norway',
			'mejs.persian': 'Bahasa Parsi',
			'mejs.polish': 'Bahasa Poland',
			'mejs.portuguese': 'Bahasa Portugis',
			'mejs.romanian': 'Bahasa Romania',
			'mejs.russian': 'Bahasa Rusia',
			'mejs.serbian': 'Bahasa Serbia',
			'mejs.slovak': 'Bahasa Slovak',
			'mejs.slovenian': 'Bahasa Slovene',
			'mejs.spanish': 'Bahasa Sepanyol',
			'mejs.swahili': 'Bahasa Swahili',
			'mejs.swedish': 'Bahasa Sweden',
			'mejs.tagalog': 'Bahasa Tagalog',
			'mejs.thai': 'Bahasa Thai',
			'mejs.turkish': 'Bahasa Turki',
			'mejs.ukrainian': 'Bahasa Ukraine',
			'mejs.vietnamese': 'Bahasa Vietnam',
			'mejs.welsh': 'Bahasa Wales',
			'mejs.yiddish': 'Bahasa Yiddish'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Dutch
 *
 * @author
 *   Leonard de Ruijter, Twitter: @LeonarddR
 *   Jalios (Twitter: @Jalios)
 *   Sascha 'SoftCreatR' Greuel
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.nl === undefined) {
		exports.nl = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Bestand downloaden',			
			'mejs.install-flash': 'U gebruikt een browser die geen Flash Player heeft ingeschakeld of geïnstalleerd. Zet de Flash Player plug-in of download de nieuwste versie van https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Volledig scherm',			
			'mejs.play': 'Afspelen',
			'mejs.pause': 'Pauzeren',			
			'mejs.time-slider': 'Tijd schuifbalk',
			'mejs.time-help-text': 'Gebruik pijl naar links/rechts om per seconde te springen, pijl omhoog/omlaag om per tien seconden te springen.',
			'mejs.live-broadcast' : 'Live uitzending',			
			'mejs.volume-help-text': 'Gebruik pijl omhoog/omlaag om het volume te verhogen/verlagen.',
			'mejs.unmute': 'Dempen opheffen',
			'mejs.mute': 'Dempen',
			'mejs.volume-slider': 'Volume schuifbalk',			
			'mejs.video-player': 'Videospeler',
			'mejs.audio-player': 'Audiospeler',			
			'mejs.captions-subtitles': 'Bijschriften/ondertiteling',
			'mejs.captions-chapters': 'Hoofdstukken',
			'mejs.none': 'Geen',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albanees',
			'mejs.arabic': 'Arabisch',
			'mejs.belarusian': 'Wit-Russisch',
			'mejs.bulgarian': 'Bulgaars',
			'mejs.catalan': 'Catalaans',
			'mejs.chinese': 'Chinees',
			'mejs.chinese-simplified': 'Chinees (Vereenvoudigd)',
			'mejs.chinese-traditional': 'Chinees (Traditioneel)',
			'mejs.croatian': 'Kroatisch',
			'mejs.czech': 'Tsjechisch',
			'mejs.danish': 'Deens',
			'mejs.dutch': 'Nederlands',
			'mejs.english': 'Engels',
			'mejs.estonian': 'Estlands',
			'mejs.filipino': 'Filipijns',
			'mejs.finnish': 'Finse',
			'mejs.french': 'Frans',
			'mejs.galician': 'Galicisch',
			'mejs.german': 'Duits',
			'mejs.greek': 'Grieks',
			'mejs.haitian-creole': 'Haïtiaanse Creoolse',
			'mejs.hebrew': 'Hebreeuws',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Hongaars',
			'mejs.icelandic': 'Icelandic',
			'mejs.indonesian': 'Indonesisch',
			'mejs.irish': 'Iers',
			'mejs.italian': 'Italiaans',
			'mejs.japanese': 'Japans',
			'mejs.korean': 'Koreaans',
			'mejs.latvian': 'Letlands',
			'mejs.lithuanian': 'Litouws',
			'mejs.macedonian': 'Macedonisch',
			'mejs.malay': 'Maleis',
			'mejs.maltese': 'Maltese',
			'mejs.norwegian': 'Noors',
			'mejs.persian': 'Perzisch',
			'mejs.polish': 'Pools',
			'mejs.portuguese': 'Portugees',
			'mejs.romanian': 'Roemeens',
			'mejs.russian': 'Russisch',
			'mejs.serbian': 'Servisch',
			'mejs.slovak': 'Slowaaks',
			'mejs.slovenian': 'Sloveens',
			'mejs.spanish': 'Spaans',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'Zweeds',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thai',
			'mejs.turkish': 'Turks',
			'mejs.ukrainian': 'Oekraïens',
			'mejs.vietnamese': 'Vietnamese',
			'mejs.welsh': 'Welsh',
			'mejs.yiddish': 'Jiddisch'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Polish
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.pl === undefined) {
		exports.pl = {
			'mejs.plural-form': 9,			
			'mejs.download-file': 'Pobierz plik',			
			'mejs.install-flash': 'Twoja przeglądarka nie ma włączonej lub zainstalowanej wtyczki Flash Player. Prosimy ją włączyć lub pobrać najnowszą wersję ze strony https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Pełny ekran',			
			'mejs.play': 'Odtwarzaj',
			'mejs.pause': 'Wstrzymaj',			
			'mejs.time-slider': 'Suwak czasu',
			'mejs.time-help-text': 'Strzałki w lewo/w prawo powodują przewijanie o sekundę, strzałki w górę/w dół o dziesięć sekund.',
			'mejs.live-broadcast': 'Transmisja na żywo',			
			'mejs.volume-help-text': 'Aby zwiększyć lub zmniejszyć głośność, użyj strzałek w górę/w dół.',
			'mejs.unmute': 'Wyłącz wyciszenie',
			'mejs.mute': 'Wycisz',
			'mejs.volume-slider': 'Suwak głośności',			
			'mejs.video-player': 'Odtwarzacz wideo',
			'mejs.audio-player': 'Odtwarzacz audio',			
			'mejs.captions-subtitles': 'Podpisy/napisy',
			'mejs.captions-chapters': 'Rozdziały',
			'mejs.none': 'Brak',
			'mejs.afrikaans': 'Afrykański',
			'mejs.albanian': 'Albański',
			'mejs.arabic': 'Arabski',
			'mejs.belarusian': 'Białoruski',
			'mejs.bulgarian': 'Bułgarski',
			'mejs.catalan': 'Kataloński',
			'mejs.chinese': 'Chiński',
			'mejs.chinese-simplified': 'Chiński (uproszczony)',
			'mejs.chinese-traditional': 'Chiński (tradycyjny)',
			'mejs.croatian': 'Chorwacki',
			'mejs.czech': 'Czeski',
			'mejs.danish': 'Duński',
			'mejs.dutch': 'Holenderski',
			'mejs.english': 'Angielski',
			'mejs.estonian': 'Estoński',
			'mejs.filipino': 'Filipiński',
			'mejs.finnish': 'Fiński',
			'mejs.french': 'Francuski',
			'mejs.galician': 'Galicyjski',
			'mejs.german': 'Niemiecki',
			'mejs.greek': 'Grecki',
			'mejs.haitian-creole': 'Haitański',
			'mejs.hebrew': 'Hebrajski',
			'mejs.hindi': 'Hinduski',
			'mejs.hungarian': 'Węgierski',
			'mejs.icelandic': 'Islandzki',
			'mejs.indonesian': 'Indonezyjski',
			'mejs.irish': 'Irlandzki',
			'mejs.italian': 'Włoski',
			'mejs.japanese': 'Japoński',
			'mejs.korean': 'Koreański',
			'mejs.latvian': 'Łotewski',
			'mejs.lithuanian': 'Litewski',
			'mejs.macedonian': 'Macedoński',
			'mejs.malay': 'Malajski',
			'mejs.maltese': 'Maltański',
			'mejs.norwegian': 'Norweski',
			'mejs.persian': 'Perski',
			'mejs.polish': 'Polski',
			'mejs.portuguese': 'Portugalski',
			'mejs.romanian': 'Rumuński',
			'mejs.russian': 'Rosyjski',
			'mejs.serbian': 'Serbski',
			'mejs.slovak': 'Słowacki',
			'mejs.slovenian': 'Słoweński',
			'mejs.spanish': 'Hiszpański',
			'mejs.swahili': 'Suahili',
			'mejs.swedish': 'Szwedzki',
			'mejs.tagalog': 'Tagalski',
			'mejs.thai': 'Tajski',
			'mejs.turkish': 'Turecki',
			'mejs.ukrainian': 'Ukraiński',
			'mejs.vietnamese': 'Wietnamski',
			'mejs.welsh': 'Walijski',
			'mejs.yiddish': 'Jidysz'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Portuguese
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.pt === undefined) {
		exports.pt = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Descarregar o ficheiro',			
			'mejs.install-flash': 'Você está usando um navegador que não possui o player Flash ativado ou instalado. Por favor, ligue o plugin do Flash Player ou baixe a versão mais recente de https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Ecrã completo',			
			'mejs.play': 'Reprodução',
			'mejs.pause': 'Pausa',			
			'mejs.time-slider': 'Deslizador do tempo',
			'mejs.time-help-text': 'Use as teclas das setas para a esquerda/direita para avançar um segundo, e as setas para cima/baixo para avançar dez segundos.',
			'mejs.live-broadcast' : 'Transmissão ao vivo',
			
			
			'mejs.volume-help-text': 'Use as teclas das setas para cima/baixo para aumentar ou diminuir o volume.',
			'mejs.unmute': 'Voltar ao som',
			'mejs.mute': 'Silêncio',
			'mejs.volume-slider': 'Deslizador do volume',			
			'mejs.video-player': 'Leitor de vídeo',
			'mejs.audio-player': 'Leitor de áudio',			
			'mejs.captions-subtitles': 'Legendas',
			'mejs.captions-chapters': 'Capítulos',
			'mejs.none': 'Nenhum',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albanês',
			'mejs.arabic': 'Árabe',
			'mejs.belarusian': 'Bielorrusso',
			'mejs.bulgarian': 'Búlgaro',
			'mejs.catalan': 'Catalão',
			'mejs.chinese': 'Chinês',
			'mejs.chinese-simplified': 'Chinese (Simplified)',
			'mejs.chinese-traditional': 'Chinese (Traditional)',
			'mejs.croatian': 'Croata',
			'mejs.czech': 'Checo',
			'mejs.danish': 'Danish',
			'mejs.dutch': 'Dutch',
			'mejs.english': 'Inglês',
			'mejs.estonian': 'Estoniano',
			'mejs.filipino': 'Filipino',
			'mejs.finnish': 'Finlandês',
			'mejs.french': 'French',
			'mejs.galician': 'Galego',
			'mejs.german': 'Alemão',
			'mejs.greek': 'Grego',
			'mejs.haitian-creole': 'Crioulo Haitiano',
			'mejs.hebrew': 'Hebraico',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Húngaro',
			'mejs.icelandic': 'Islandês',
			'mejs.indonesian': 'Indonésio',
			'mejs.irish': 'Irish',
			'mejs.italian': 'Italiano',
			'mejs.japanese': 'Japonês',
			'mejs.korean': 'Coreano',
			'mejs.latvian': 'Letão',
			'mejs.lithuanian': 'Lithuanian',
			'mejs.macedonian': 'Macedônio',
			'mejs.malay': 'Malaio',
			'mejs.maltese': 'Maltês',
			'mejs.norwegian': 'Norwegian',
			'mejs.persian': 'Persa',
			'mejs.polish': 'Polish',
			'mejs.portuguese': 'Português',
			'mejs.romanian': 'Romanian',
			'mejs.russian': 'Russian',
			'mejs.serbian': 'Sérvio',
			'mejs.slovak': 'Slovak',
			'mejs.slovenian': 'Slovenian',
			'mejs.spanish': 'Espanhol',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'sueco',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thai',
			'mejs.turkish': 'Turco',
			'mejs.ukrainian': 'Ucraniano',
			'mejs.vietnamese': 'Vietnamita',
			'mejs.welsh': 'Welsh',
			'mejs.yiddish': 'Iídiche',

            // Added by Russ
            'mejs.time-elapsed': 'Tempo decorrido',
            'mejs.duration-timer': 'Temporizador de duração',
            'mejs.current-video-quality': 'Qualidade do vídeo atual'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Romanian
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.ro === undefined) {
		exports.ro = {
			'mejs.plural-form': 5,			
			'mejs.download-file': 'Descarcă fişierul',			
			'mejs.install-flash': 'Utilizați un browser care nu are activat sau instalat playerul Flash. Porniți pluginul Flash player sau descărcați cea mai recentă versiune de la https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Ecran complet',			
			'mejs.play': 'Redare',
			'mejs.pause': 'Pauză',			
			'mejs.time-slider': 'Cursor timp',
			'mejs.time-help-text': 'Utilizează tastele săgeată Stânga/Dreapta pentru a avansa o secundă şi săgeţile Sus/Jos pentru a avansa zece secunde.',
			'mejs.live-broadcast' : 'Difuzare în direct',			
			'mejs.volume-help-text': 'Utilizează tastele de săgeată Sus/Jos pentru a creşte/micşora volumul',
			'mejs.unmute': 'Cu sunet',
			'mejs.mute': 'Fără sunet',
			'mejs.volume-slider': 'Cursor volum',			
			'mejs.video-player': 'Player video',
			'mejs.audio-player': 'Player audio',			
			'mejs.captions-subtitles': 'Legende/Subtitrări',
			'mejs.captions-chapters': 'Capitolele',
			'mejs.none': 'Niciunul',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albanez',
			'mejs.arabic': 'Arabă',
			'mejs.belarusian': 'Belarusian',
			'mejs.bulgarian': 'Bulgară',
			'mejs.catalan': 'Catalană',
			'mejs.chinese': 'Chinezesc',
			'mejs.chinese-simplified': 'Chineză (Simplificată)',
			'mejs.chinese-traditional': 'Chineză (Tradițională)',
			'mejs.croatian': 'Croată',
			'mejs.czech': 'Cehă',
			'mejs.danish': 'Daneză',
			'mejs.dutch': 'Olandeză',
			'mejs.english': 'Engleză',
			'mejs.estonian': 'Estonă',
			'mejs.filipino': 'Filipinez',
			'mejs.finnish': 'Finlandeză',
			'mejs.french': 'Franceză',
			'mejs.galician': 'Galiciană',
			'mejs.german': 'Germană',
			'mejs.greek': 'Greacă',
			'mejs.haitian-creole': 'Creolele Haitiene',
			'mejs.hebrew': 'Ebraică',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Maghiar',
			'mejs.icelandic': 'Islandeză',
			'mejs.indonesian': 'Indonezian',
			'mejs.irish': 'Irlandeză',
			'mejs.italian': 'Italiană',
			'mejs.japanese': 'Japoneză',
			'mejs.korean': 'Coreeană',
			'mejs.latvian': 'Letonă',
			'mejs.lithuanian': 'Lituanian',
			'mejs.macedonian': 'Macedonean',
			'mejs.malay': 'Malay',
			'mejs.maltese': 'Malteză',
			'mejs.norwegian': 'Norvegiană',
			'mejs.persian': 'Persană',
			'mejs.polish': 'Polonez',
			'mejs.portuguese': 'Portugheză',
			'mejs.romanian': 'Română',
			'mejs.russian': 'Rusă',
			'mejs.serbian': 'Sârbă',
			'mejs.slovak': 'Slovacă',
			'mejs.slovenian': 'Slovenă',
			'mejs.spanish': 'Spaniolă',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'Suedeză',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thai',
			'mejs.turkish': 'Turcă',
			'mejs.ukrainian': 'Ucrainean',
			'mejs.vietnamese': 'Vietnamez',
			'mejs.welsh': 'Welsh',
			'mejs.yiddish': 'Idiș'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Russian
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.ru === undefined) {
		exports.ru = {
			'mejs.plural-form': 7,			
			'mejs.download-file': 'Скачать файл',			
			'mejs.install-flash': 'Flash player в вашем браузере не установлен или отключен. Пожалуйста включите ваш Flash player или скачайте последнюю версию с https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Полноэкранный режим',			
			'mejs.play': 'Воспроизвести',
			'mejs.pause': 'Пауза',			
			'mejs.time-slider': 'Слайдер времени',
			'mejs.time-help-text': 'Используйте Левую/Правую клавиши со стрелками, чтобы продвинуться на одну секунду, клавиши со стрелками Вверх/Вниз, чтобы продвинуться на десять секунд.',
			'mejs.live-broadcast' : 'Прямая трансляция',			
			'mejs.volume-help-text': 'Используйте клавиши со стрелками Вверх/Вниз, чтобы увеличить или уменьшить громкость.',
			'mejs.unmute': 'Включить звук',
			'mejs.mute': 'Отключить звук',
			'mejs.volume-slider': 'Слайдер громкости',			
			'mejs.video-player': 'Видеоплеер',
			'mejs.audio-player': 'Аудиоплеер',			
			'mejs.captions-subtitles': 'Титры/Субтитры',
			'mejs.captions-chapters': 'Главы',
			'mejs.none': 'Нет',
			'mejs.afrikaans': 'Африканский',
			'mejs.albanian': 'Албанский',
			'mejs.arabic': 'Арабский',
			'mejs.belarusian': 'Белорусский',
			'mejs.bulgarian': 'Болгарский',
			'mejs.catalan': 'Каталонский',
			'mejs.chinese': 'Китайский',
			'mejs.chinese-simplified': 'Китайский (упрощенный)',
			'mejs.chinese-traditional': 'Chinese (традиционный)',
			'mejs.croatian': 'Хорватский',
			'mejs.czech': 'Чешский',
			'mejs.danish': 'Датский',
			'mejs.dutch': 'Голландский',
			'mejs.english': 'Английский',
			'mejs.estonian': 'Эстонский',
			'mejs.filipino': 'Филиппинский',
			'mejs.finnish': 'Финский',
			'mejs.french': 'Французский',
			'mejs.galician': 'Галисийский',
			'mejs.german': 'Немецкий',
			'mejs.greek': 'Греческий',
			'mejs.haitian-creole': 'Гаитянский креольский',
			'mejs.hebrew': 'Иврит',
			'mejs.hindi': 'Хинди',
			'mejs.hungarian': 'Венгерский',
			'mejs.icelandic': 'Исландский',
			'mejs.indonesian': 'Индонезийский',
			'mejs.irish': 'Ирландский',
			'mejs.italian': 'Итальянский',
			'mejs.japanese': 'Японский',
			'mejs.korean': 'Корейский',
			'mejs.latvian': 'Латышский',
			'mejs.lithuanian': 'Литовский',
			'mejs.macedonian': 'Македонский',
			'mejs.malay': 'Малайский',
			'mejs.maltese': 'Мальтийский',
			'mejs.norwegian': 'Норвежский',
			'mejs.persian': 'Персидский',
			'mejs.polish': 'Польский',
			'mejs.portuguese': 'Португальский',
			'mejs.romanian': 'Румынский',
			'mejs.russian': 'Русский',
			'mejs.serbian': 'Сербский',
			'mejs.slovak': 'Словацкий',
			'mejs.slovenian': 'Словенский',
			'mejs.spanish': 'Испанский',
			'mejs.swahili': 'Суахили',
			'mejs.swedish': 'Шведский',
			'mejs.tagalog': 'Тагальский',
			'mejs.thai': 'Тайский',
			'mejs.turkish': 'Турецкий',
			'mejs.ukrainian': 'Украинский',
			'mejs.vietnamese': 'Вьетнамский',
			'mejs.welsh': 'Валлийский',
			'mejs.yiddish': 'Идиш',

            // Added by Russ
            'mejs.time-elapsed': 'Прошло времени',
            'mejs.duration-timer': 'Таймер',
            'mejs.current-video-quality': 'Текущее качество видео'
		};
	}
})(mejs.i18n);
;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Slovak
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.sk === undefined) {
		exports.sk = {
			'mejs.plural-form': 8,			
			'mejs.download-file': 'Prevziať súbor',			
			'mejs.install-flash': 'Používate prehliadač, ktorý nemá povolený alebo nainštalovaný prehrávač Flash. Zapnite doplnok prehrávača Flash alebo si prevezmite najnovšiu verziu zo stránky https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Celá obrazovka',			
			'mejs.play': 'Prehrať',
			'mejs.pause': 'Pozastaviť',			
			'mejs.time-slider': 'Posúvač času',
			'mejs.time-help-text': 'Klávesmi so šípkou doľava/doprava posuniete o jednu sekundu, šípkami nahor/ nadol posuniete o desať sekúnd.',
			'mejs.live-broadcast' : 'Živé vysielanie',			
			'mejs.volume-help-text': 'Klávesmi so šípkou nahor/nadol zvýšite alebo znížite hlasitosť.',
			'mejs.unmute': 'Zrušiť stlmenie',
			'mejs.mute': 'Stlmiť',
			'mejs.volume-slider': 'Posúvač hlasitosti',			
			'mejs.video-player': 'Prehrávač videa',
			'mejs.audio-player': 'Prehrávač zvuku',			
			'mejs.captions-subtitles': 'Skryté titulky/Titulky',
			'mejs.captions-chapters': 'Kapitoly',
			'mejs.none': 'Žiadne',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albánsky',
			'mejs.arabic': 'Arabčina',
			'mejs.belarusian': 'Bieloruský',
			'mejs.bulgarian': 'Bulharčina',
			'mejs.catalan': 'Katalánsky',
			'mejs.chinese': 'čínština',
			'mejs.chinese-simplified': 'Čínsky (Zjednodušený)',
			'mejs.chinese-traditional': 'čínsky (Tradičný)',
			'mejs.croatian': 'Chorvátčina',
			'mejs.czech': 'čeština',
			'mejs.danish': 'Dánsky',
			'mejs.dutch': 'Holandský',
			'mejs.english': 'Angličtina',
			'mejs.estonian': 'Estónčina',
			'mejs.filipino': 'Filipínsky',
			'mejs.finnish': 'Fínčina',
			'mejs.french': 'Francúzština',
			'mejs.galician': 'Galicijčan',
			'mejs.german': 'Nemčina',
			'mejs.greek': 'Gréčtina',
			'mejs.haitian-creole': 'Haitian Kreolský',
			'mejs.hebrew': 'Hebrejčina',
			'mejs.hindi': 'Hindčina',
			'mejs.hungarian': 'Maďarčina',
			'mejs.icelandic': 'Islandský',
			'mejs.indonesian': 'Indonézsky',
			'mejs.irish': 'Írsky',
			'mejs.italian': 'Taliančina',
			'mejs.japanese': 'Japonský',
			'mejs.korean': 'Kórejský',
			'mejs.latvian': 'Lotyština',
			'mejs.lithuanian': 'Litovský',
			'mejs.macedonian': 'Macedónsky',
			'mejs.malay': 'Malajský',
			'mejs.maltese': 'Maltčina',
			'mejs.norwegian': 'Nórsky',
			'mejs.persian': 'Perzský',
			'mejs.polish': 'poľština',
			'mejs.portuguese': 'Portugalčina',
			'mejs.romanian': 'Rumunčina',
			'mejs.russian': 'Ruský',
			'mejs.serbian': 'Srbský',
			'mejs.slovak': 'Slovenský',
			'mejs.slovenian': 'Slovinský',
			'mejs.spanish': 'španielčina',
			'mejs.swahili': 'Swahili',
			'mejs.swedish': 'švédčina',
			'mejs.tagalog': 'Tagalog',
			'mejs.thai': 'Thai',
			'mejs.turkish': 'Turecký',
			'mejs.ukrainian': 'Ukrajinský',
			'mejs.vietnamese': 'Vietnamčina',
			'mejs.welsh': 'Welsh',
			'mejs.yiddish': 'Jidiš'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Swedish
 *
 * @author
 *   Petter (Twitter: @petter_j)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.sv === undefined) {
		exports.sv = {
			'mejs.plural-form': 1,			
			'mejs.download-file': 'Ladda ner fil',			
			'mejs.install-flash': 'Du använder en webbläsare som inte har Flash Player aktiverat eller installerad. Aktivera Flash Player eller hämta den senaste versionen från https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Fullskärm',			
			'mejs.play': 'Spela',
			'mejs.pause': 'Pausa',			
			'mejs.time-slider': 'Tidslinje',
			'mejs.time-help-text': 'Använd Vänster/Höger piltangent för att spola en sekund, Upp/Ner piltangent spola tio sekunder.',
			'mejs.live-broadcast': 'Livesändning',			
			'mejs.volume-help-text': 'Använd Upp/Ner piltangent för att öka eller minska volymen.',
			'mejs.unmute': 'Ljud på',
			'mejs.mute': 'Ljud av',
			'mejs.volume-slider': 'Volymkontroll',			
			'mejs.video-player': 'Videospelare',
			'mejs.audio-player': 'Ljudspelare',			
			'mejs.captions-subtitles': 'Textning/Undertexter',
			'mejs.captions-chapters': 'Kapitel',
			'mejs.none': 'Ingen',
			'mejs.afrikaans': 'Afrikaans',
			'mejs.albanian': 'Albanska',
			'mejs.arabic': 'Arabiska',
			'mejs.belarusian': 'Nederländska',
			'mejs.bulgarian': 'Bulgariska',
			'mejs.catalan': 'Katalanska',
			'mejs.chinese': 'Kinesiska',
			'mejs.chinese-simplified': 'Kinesiska (Förenklad)',
			'mejs.chinese-traditional': 'Kinesiska (Traditionell)',
			'mejs.croatian': 'Kroatiska',
			'mejs.czech': 'Tjeckiska',
			'mejs.danish': 'Danska',
			'mejs.dutch': 'Holländska',
			'mejs.english': 'Engelska',
			'mejs.estonian': 'Estniska',
			'mejs.filipino': 'Filipinska',
			'mejs.finnish': 'Finska',
			'mejs.french': 'Franska',
			'mejs.galician': 'Galiciska',
			'mejs.german': 'Tyska',
			'mejs.greek': 'Grekiska',
			'mejs.haitian-creole': 'Haitisk kreolsk',
			'mejs.hebrew': 'Hebreiska',
			'mejs.hindi': 'Hindi',
			'mejs.hungarian': 'Ungerska',
			'mejs.icelandic': 'Isländska',
			'mejs.indonesian': 'Indonesiska',
			'mejs.irish': 'Irländska',
			'mejs.italian': 'Italienska',
			'mejs.japanese': 'Japanska',
			'mejs.korean': 'Koreanska',
			'mejs.latvian': 'Lettiska',
			'mejs.lithuanian': 'Litauiska',
			'mejs.macedonian': 'Makedonska',
			'mejs.malay': 'Malaysiska',
			'mejs.maltese': 'Maltesiska',
			'mejs.norwegian': 'Norska',
			'mejs.persian': 'Persiska',
			'mejs.polish': 'Polska',
			'mejs.portuguese': 'Portugisiska',
			'mejs.romanian': 'Romänska',
			'mejs.russian': 'Ryska',
			'mejs.serbian': 'Serbiska',
			'mejs.slovak': 'Slovakiska',
			'mejs.slovenian': 'Slovenska',
			'mejs.spanish': 'Spanska',
			'mejs.swahili': 'Swahiliska',
			'mejs.swedish': 'Svenska',
			'mejs.tagalog': 'Tagalogiska',
			'mejs.thai': 'Thailänska',
			'mejs.turkish': 'Turkiska',
			'mejs.ukrainian': 'Ukrainska',
			'mejs.vietnamese': 'Vietnamesiska',
			'mejs.welsh': 'Skotska',
			'mejs.yiddish': 'Jiddisch'
		};
	}
})(mejs.i18n);
;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Ukrainian
 *
 * @author
 *   Dmitry Krekota (dmitry.krekota@gmail.com)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.uk === undefined) {
		exports.uk = {
			'mejs.plural-form': 7,			
			'mejs.download-file': 'Завантажити файл',			
			'mejs.install-flash': 'Flash Player у вашому браузері не встановлений або відключений. Будь ласка включіть Flash Player або скачайте останню версію із https://get.adobe.com/flashplayer/',			
			'mejs.fullscreen': 'Повноекранний режим',			
			'mejs.play': 'Пуск',
			'mejs.pause': 'Пауза',			
			'mejs.time-slider': 'Повзунок часу',
			'mejs.time-help-text': 'Використовуйте ліву/праву клавіші зі стрілками, щоб переміститися на одну секунду, або клавіші вверх/вниз, щоб переміститися на десять секунд.',
			'mejs.live-broadcast' : 'Пряма трансляція',			
			'mejs.volume-help-text': 'Використовуйте клавіші зі стрілками вверх/вниз, щоб збільшити або зменшити звук.',
			'mejs.unmute': 'Включити звук',
			'mejs.mute': 'Відключити звук',
			'mejs.volume-slider': 'Повзунок звуку',			
			'mejs.video-player': 'Відеоплеєр',
			'mejs.audio-player': 'Аудіоплеєр',			
			'mejs.captions-subtitles': 'Титри/Субтитри',
			'mejs.captions-chapters': 'Глави',
			'mejs.none': 'Немає',
			'mejs.afrikaans': 'Африкаанс',
			'mejs.albanian': 'Албанська',
			'mejs.arabic': 'Арабська',
			'mejs.belarusian': 'Білоруська',
			'mejs.bulgarian': 'Болгарська',
			'mejs.catalan': 'Каталонська',
			'mejs.chinese': 'Китайська',
			'mejs.chinese-simplified': 'Китайська (спрощена)',
			'mejs.chinese-traditional': 'Китайська (традиційна)',
			'mejs.croatian': 'Хорватска',
			'mejs.czech': 'Чеська',
			'mejs.danish': 'Дацька',
			'mejs.dutch': 'Голландська',
			'mejs.english': 'Английська',
			'mejs.estonian': 'Естонська',
			'mejs.filipino': 'Філіппінська',
			'mejs.finnish': 'Фінська',
			'mejs.french': 'Французька',
			'mejs.galician': 'Галісійська',
			'mejs.german': 'Німецька',
			'mejs.greek': 'Грецька',
			'mejs.haitian-creole': 'Гаїтянська креольська',
			'mejs.hebrew': 'Іврит',
			'mejs.hindi': 'Хінді',
			'mejs.hungarian': 'Угорська',
			'mejs.icelandic': 'Ісландська',
			'mejs.indonesian': 'Індонезійська',
			'mejs.irish': 'Ірландська',
			'mejs.italian': 'Італійська',
			'mejs.japanese': 'Японська',
			'mejs.korean': 'Корейська',
			'mejs.latvian': 'Латвійська',
			'mejs.lithuanian': 'Литовська',
			'mejs.macedonian': 'Македонська',
			'mejs.malay': 'Малайська',
			'mejs.maltese': 'Мальтійська',
			'mejs.norwegian': 'Норвезька',
			'mejs.persian': 'Перська',
			'mejs.polish': 'Польська',
			'mejs.portuguese': 'Португальська',
			'mejs.romanian': 'Румунська',
			'mejs.russian': 'Російська',
			'mejs.serbian': 'Сербська',
			'mejs.slovak': 'Словацька',
			'mejs.slovenian': 'Словенська',
			'mejs.spanish': 'Іспанська',
			'mejs.swahili': 'Суахілі',
			'mejs.swedish': 'Шведська',
			'mejs.tagalog': 'Тагальська',
			'mejs.thai': 'Тайська',
			'mejs.turkish': 'Турецька',
			'mejs.ukrainian': 'Українська',
			'mejs.vietnamese': 'В\'єтнамська',
			'mejs.welsh': 'Валлійська',
			'mejs.yiddish': 'Ідиш'
		};
	}
})(mejs.i18n);
;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Chinese (Simplified)
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports['zh-cn'] === undefined) {
		exports['zh-cn'] = {
			'mejs.plural-form': 0,			
			'mejs.download-file': '下载文件',			
			'mejs.install-flash': '您正在使用未启用或安装Flash播放器的浏览器。请打开您的Flash Player插件，或从https://get.adobe.com/flashplayer/下载最新版本',			
			'mejs.fullscreen': '全屏',			
			'mejs.play': '播放',
			'mejs.pause': '暂停',			
			'mejs.time-slider': '时间滑动棒',
			'mejs.time-help-text': '使用作/右箭头快进1秒,使用上/下箭头快进10秒。',
			'mejs.live-broadcast' : '现场直播',			
			'mejs.volume-help-text': '使用上/下箭头提高或降低音量。',
			'mejs.unmute': '取消静音',
			'mejs.mute': '静音',
			'mejs.volume-slider': '音量选择键',			
			'mejs.video-player': '视频播放器',
			'mejs.audio-player': '音频播放器',			
			'mejs.captions-subtitles': '字幕/标题',
			'mejs.captions-chapters': '章',
			'mejs.none': '无',
			'mejs.afrikaans': '南非荷兰语',
			'mejs.albanian': '阿尔巴尼亚人',
			'mejs.arabic': '阿拉伯语',
			'mejs.belarusian': '白俄罗斯',
			'mejs.bulgarian': '保加利亚语',
			'mejs.catalan': '加泰罗尼亚语',
			'mejs.chinese': '中国',
			'mejs.chinese-simplified': '中文（简体）',
			'mejs.chinese-traditional': '中国（传统）',
			'mejs.croatian': '克罗地亚语',
			'mejs.czech': '捷克',
			'mejs.danish': '丹麦语',
			'mejs.dutch': '荷兰人',
			'mejs.english': '英语',
			'mejs.estonian': '爱沙尼亚语',
			'mejs.filipino': '菲律宾',
			'mejs.finnish': '芬兰语',
			'mejs.french': '法语',
			'mejs.galician': '加利西亚',
			'mejs.german': '德语',
			'mejs.greek': '希腊语',
			'mejs.haitian-creole': '海地克里奥尔人',
			'mejs.hebrew': '希伯来语',
			'mejs.hindi': '印地语',
			'mejs.hungarian': '匈牙利',
			'mejs.icelandic': '冰岛',
			'mejs.indonesian': '印尼语',
			'mejs.irish': '爱尔兰',
			'mejs.italian': '意大利语',
			'mejs.japanese': '日本',
			'mejs.korean': '韩国人',
			'mejs.latvian': '拉脱维亚人',
			'mejs.lithuanian': '立陶宛语',
			'mejs.macedonian': '马其顿',
			'mejs.malay': '马来语',
			'mejs.maltese': '马耳他',
			'mejs.norwegian': '挪威语',
			'mejs.persian': '波斯人',
			'mejs.polish': '波兰语',
			'mejs.portuguese': '葡萄牙语',
			'mejs.romanian': '罗马尼亚语',
			'mejs.russian': '俄罗斯',
			'mejs.serbian': '塞尔维亚人',
			'mejs.slovak': '斯洛伐克语',
			'mejs.slovenian': '斯洛文尼亚语',
			'mejs.spanish': '西班牙语',
			'mejs.swahili': '斯瓦希里语',
			'mejs.swedish': '瑞典语',
			'mejs.tagalog': '他加禄语',
			'mejs.thai': '泰国',
			'mejs.turkish': '土耳其语',
			'mejs.ukrainian': '乌克兰',
			'mejs.vietnamese': '越南人',
			'mejs.welsh': '威尔士',
			'mejs.yiddish': '意第绪语',

            // Added by Russ
            'mejs.time-elapsed': '已经过时间',
            'mejs.duration-timer': '持续时间计时器',
            'mejs.current-video-quality': '当前视频质量'
		};
	}
})(mejs.i18n);;
'use strict';/*!
 * This is a `i18n` language object.
 *
 * Chinese (Traditional)
 *
 * @author
 *   Jalios (Twitter: @Jalios)
 *   Sascha Greuel (Twitter: @SoftCreatR)
 *   Peter Dave Hello (Twitter: @PeterDaveHello)
 *
 * @see core/i18n.js
 */
(function (exports) {
	if (exports.zh === undefined) {
		exports.zh = {
			'mejs.plural-form': 0,			
			'mejs.download-file': '下載檔案',			
			'mejs.install-flash': '您正在使用未啟用或安裝Flash播放器的瀏覽器。請打開您的Flash Player插件,或從https://get.adobe.com/flashplayer/下載最新版本',			
			'mejs.fullscreen': '全螢幕',			
			'mejs.play': '播放',
			'mejs.pause': '暫停',			
			'mejs.time-slider': '時間軸',
			'mejs.time-help-text': '使用左/右箭頭快轉1秒,上/下箭頭快轉10秒。',
			'mejs.live-broadcast' : '現場直播',			
			'mejs.volume-help-text': '使用上/下箭頭提高或降低音量。',
			'mejs.unmute': '取消靜音',
			'mejs.mute': '靜音',
			'mejs.volume-slider': '音量控制鍵',			
			'mejs.video-player': '影片播放器',
			'mejs.audio-player': '音樂播放器',			
			'mejs.captions-subtitles': '字幕/標題',
			'mejs.captions-chapters': '章節',
			'mejs.none': '無',
			'mejs.afrikaans': '南非荷蘭語',
			'mejs.albanian': '阿爾巴尼亞人',
			'mejs.arabic': '阿拉伯語',
			'mejs.belarusian': '白俄羅斯',
			'mejs.bulgarian': '保加利亞語',
			'mejs.catalan': '加泰羅尼亞語',
			'mejs.chinese': '中文',
			'mejs.chinese-simplified': '简体中文',
			'mejs.chinese-traditional': '正體中文',
			'mejs.croatian': '克羅地亞語',
			'mejs.czech': '捷克',
			'mejs.danish': '丹麥語',
			'mejs.dutch': '荷蘭人',
			'mejs.english': '英語',
			'mejs.estonian': '愛沙尼亞語',
			'mejs.filipino': '菲律賓',
			'mejs.finnish': '芬蘭語',
			'mejs.french': '法語',
			'mejs.galician': '加利西亞',
			'mejs.german': '德語',
			'mejs.greek': '希臘語',
			'mejs.haitian-creole': '海地克里奧爾人',
			'mejs.hebrew': '希伯來語',
			'mejs.hindi': '印地語',
			'mejs.hungarian': '匈牙利',
			'mejs.icelandic': '冰島',
			'mejs.indonesian': '印尼語',
			'mejs.irish': '愛爾蘭',
			'mejs.italian': '意大利語',
			'mejs.japanese': '日本',
			'mejs.korean': '韓國人',
			'mejs.latvian': '拉脫維亞人',
			'mejs.lithuanian': '立陶宛語',
			'mejs.macedonian': '馬其頓',
			'mejs.malay': '馬來語',
			'mejs.maltese': '馬耳他',
			'mejs.norwegian': '挪威語',
			'mejs.persian': '波斯人',
			'mejs.polish': '波蘭語',
			'mejs.portuguese': '葡萄牙語',
			'mejs.romanian': '羅馬尼亞語',
			'mejs.russian': '俄羅斯',
			'mejs.serbian': '塞爾維亞人',
			'mejs.slovak': '斯洛伐克語',
			'mejs.slovenian': '斯洛文尼亞語',
			'mejs.spanish': '西班牙語',
			'mejs.swahili': '斯瓦希里語',
			'mejs.swedish': '瑞典語',
			'mejs.tagalog': '他加祿語',
			'mejs.thai': '泰國',
			'mejs.turkish': '土耳其語',
			'mejs.ukrainian': '烏克蘭',
			'mejs.vietnamese': '越南人',
			'mejs.welsh': '威爾士',
			'mejs.yiddish': '意第緒語',

            // Added by Russ
            'mejs.time-elapsed': '經過時間',
            'mejs.duration-timer': '持續時間計時器',
            'mejs.current-video-quality': '目前視訊品質'
		};
	}
})(mejs.i18n);
;
/*!
 * MediaElement.js
 * http://www.mediaelementjs.com/
 *
 * Wrapper that mimics native HTML5 MediaElement (audio and video)
 * using a variety of technologies (pure JavaScript, Flash, iframe)
 *
 * Copyright 2010-2017, John Dyer (http://j.hn/)
 * License: MIT
 *
 */(function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == "function" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error("Cannot find module '" + o + "'"); throw f.code = "MODULE_NOT_FOUND", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function (e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == "function" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({
    1: [function (_dereq_, module, exports) {
        'use strict';

        mejs.i18n.en['mejs.quality-chooser'] = 'Quality Chooser';

        // Added by Russ
        mejs.i18n.en['mejs.current-video-quality'] = 'Current Video Quality';

        Object.assign(mejs.MepDefaults, {
            defaultQuality: 'auto',

            qualityText: null
        });

        Object.assign(MediaElementPlayer.prototype, {
            buildquality: function buildquality(player, controls, layers, media) {
                var t = this,
                    children = t.mediaFiles ? t.mediaFiles : t.node.children,
                    qualityMap = new Map();

                for (var i = 0, total = children.length; i < total; i++) {
                    var mediaNode = children[i];
                    var quality = mediaNode instanceof HTMLElement ? mediaNode.getAttribute('data-quality') : mediaNode['data-quality'];

                    if (t.mediaFiles) {
                        var source = document.createElement('source');
                        source.src = mediaNode['src'];
                        source.type = mediaNode['type'];

                        t.addValueToKey(qualityMap, quality, source);
                    } else if (mediaNode.nodeName === 'SOURCE') {
                        t.addValueToKey(qualityMap, quality, mediaNode);
                    }
                }

                if (qualityMap.size <= 1) {
                    return;
                }

                t.cleanquality(player);

                var qualityTitle = mejs.Utils.isString(t.options.qualityText) ? t.options.qualityText : mejs.i18n.t('mejs.current-video-quality'),
                    getQualityNameFromValue = function getQualityNameFromValue(value) {
                        var label = void 0;
                        if (value === 'auto') {
                            var keyExist = t.keyExist(qualityMap, value);
                            if (keyExist) {
                                label = value;
                            } else {
                                var keyValue = t.getMapIndex(qualityMap, 0);
                                label = keyValue.key;
                            }
                        } else {
                            label = value;
                        }
                        return label;
                    },
                    defaultValue = getQualityNameFromValue(t.options.defaultQuality);

                player.qualitiesButton = document.createElement('div');
                player.qualitiesButton.className = t.options.classPrefix + 'button ' + t.options.classPrefix + 'qualities-button';
                player.qualitiesButton.innerHTML = '<button type="button" aria-controls="' + t.id + '" title="' + qualityTitle + '" ' + ('aria-label="' + qualityTitle + '" tabindex="0">' + defaultValue + '</button>') + ('<div class="' + t.options.classPrefix + 'qualities-selector ' + 'hidden">') + ('<ul class="' + t.options.classPrefix + 'qualities-selector-list"></ul>') + '</div>';

                t.addControlElement(player.qualitiesButton, 'qualities');

                media.setSrc(qualityMap.get(defaultValue)[0].src);
                media.load();

                qualityMap.forEach(function (value, key) {
                    if (key !== 'map_keys_1') {
                        var src = value[0],
                            _quality = key,
                            inputId = t.id + '-qualities-' + _quality;
                        player.qualitiesButton.querySelector('ul').innerHTML += '<li class="' + t.options.classPrefix + 'qualities-selector-list-item">' +
                            ('<label for="' + inputId + '" class="' + t.options.classPrefix + 'qualities-selector-label') + ((_quality === defaultValue ? ' ' + t.options.classPrefix + 'qualities-selected' : '') + '">') +
                            ('<input class="' + t.options.classPrefix + 'qualities-selector-input" name="' + t.options.classPrefix + 'qualities-selector-input" type="radio" name="' + t.id + '_qualities"') + ('disabled="disabled" value="Video Quality ' + _quality + '" id="' + inputId + '"  ') + ((_quality === defaultValue ? ' checked="checked"' : '') + '/>') +
                            ((src.title || _quality)) +
                            '</label>' +
                            '</li>';
                    }
                });
                var inEvents = ['mouseenter', 'click'],
                    outEvents = ['mouseleave', 'focusout'],
                    radios = player.qualitiesButton.querySelectorAll('input[type="radio"]'),
                    labels = player.qualitiesButton.querySelectorAll('.' + t.options.classPrefix + 'qualities-selector-label'),
                    selector = player.qualitiesButton.querySelector('.' + t.options.classPrefix + 'qualities-selector'),
                    qualitiesButton = player.qualitiesButton.querySelector('button'),
                    closeSelector = function () {
                        mejs.Utils.addClass(selector, 'hidden');
                        mejs.Utils.removeClass(selector, 'focused');
                        qualitiesButton.setAttribute('aria-expanded', false);
                        // qualitiesButton.setAttribute('title', 'Quality Closed');
                        // qualitiesButton.setAttribute('aria-label', 'Quality Closed');
                    };

                for (var _i = 0, _total = inEvents.length; _i < _total; _i++) {
                    player.qualitiesButton.addEventListener(inEvents[_i], function (e) {
                        // Disabled by Russ - prevents the use of up/down keys to make choices!
                        //
                        /*
                        //for screen readers: if open then close when clicked
                        if (e.type === 'click' && !selector.classList.contains('hidden')) {
                            closeSelector();
                            return;
                        }
                        */

                        mejs.Utils.removeClass(selector, 'hidden');
                        selector.style.height = selector.querySelector('ul').offsetHeight + 'px';
                        selector.style.top = -1 * parseFloat(selector.offsetHeight) + 'px';
                        qualitiesButton.setAttribute('aria-expanded', true);
                        // qualitiesButton.setAttribute('title', 'Quality Open');
                        // qualitiesButton.setAttribute('aria-label', 'Quality Open');
                    });
                }

                for (var _i2 = 0, _total2 = outEvents.length; _i2 < _total2; _i2++) {
                    player.qualitiesButton.addEventListener(outEvents[_i2], function () {
                        //give us a chance to see if focus is on 'selector'
                        setTimeout(function () {
                            //if focus is on a 'selector' item then we tabbed here on purpose, so leave open
                            if (document.activeElement.classList.contains(t.options.classPrefix + 'qualities-selector-input'))
                                return;

                            // Added by Russ: start
                            var elements = document.querySelectorAll(':hover');
                            for (var iElement = 0, totalElements = elements.length; iElement < totalElements; iElement++) {
                                var element = elements[iElement];
                                var temp = element;
                                while ((temp != null) && (temp !== document.body)) {
                                    if ((temp === qualitiesButton) || (temp === selector)) {
                                        return;
                                    }
                                    temp = temp.parentNode;
                                }
                            }
                            // Added by Russ: end

                            closeSelector();
                        }, 200);
                    });
                }

                for (var _i3 = 0, _total3 = radios.length; _i3 < _total3; _i3++) {
                    var radio = radios[_i3];
                    radio.disabled = false;
                    radio.addEventListener('change', function () {
                        var self = this,
                            newQuality = self.parentNode.textContent;

                        var selected = player.qualitiesButton.querySelectorAll('.' + t.options.classPrefix + 'qualities-selected');
                        for (var _i4 = 0, _total4 = selected.length; _i4 < _total4; _i4++) {
                            mejs.Utils.removeClass(selected[_i4], t.options.classPrefix + 'qualities-selected');
                        }

                        self.checked = true;

                        var siblings = self.closest('.' + t.options.classPrefix + 'qualities-selector-list')
                            .querySelectorAll('.' + t.options.classPrefix + 'qualities-selector-label');

                        for (var j = 0, _total5 = siblings.length; j < _total5; j++) {
                            if (siblings[j].firstChild.checked) {
                                siblings[j].classList.add(t.options.classPrefix + 'qualities-selected');
                            }
                        }

                        var currentTime = media.currentTime;

                        var paused = media.paused;

                        player.qualitiesButton.querySelector('button').innerHTML = newQuality;
                        if (!paused) {
                            media.pause();
                        }
                        t.updateVideoSource(media, qualityMap, newQuality);
                        media.setSrc(qualityMap.get(newQuality)[0].src);
                        media.load();
                        media.dispatchEvent(mejs.Utils.createEvent('seeking', media));
                        if (!paused) {
                            media.play();
                        }
                        media.addEventListener('canplay', function canPlayAfterSourceSwitchHandler() {
                            media.setCurrentTime(currentTime);
                            media.removeEventListener('canplay', canPlayAfterSourceSwitchHandler);
                        });
                    });
                }
                for (var _i5 = 0, _total6 = labels.length; _i5 < _total6; _i5++) {
                    labels[_i5].addEventListener('click', function () {
                        var radio = this.firstChild,
                            event = mejs.Utils.createEvent('click', radio);

                        radio.dispatchEvent(event);

                        // Added by Russ
                        setTimeout(function () { closeSelector(); }, 100);
                    });
                }

                selector.addEventListener('keydown', function (e) {
                    e.stopPropagation();
                });
                media.setSrc(qualityMap.get(defaultValue)[0].src);
            },
            cleanquality: function cleanquality(player) {
                if (player) {
                    if (player.qualitiesButton) {
                        player.qualitiesButton.remove();
                    }
                }
            },
            addValueToKey: function addValueToKey(map, key, value) {
                if (map.has('map_keys_1')) {
                    map.get('map_keys_1').push(key.toLowerCase());
                } else {
                    map.set('map_keys_1', []);
                }
                if (map.has(key)) {
                    map.get(key).push(value);
                } else {
                    map.set(key, []);
                    map.get(key).push(value);
                }
            },
            updateVideoSource: function updateVideoSource(media, map, key) {
                this.cleanMediaSource(media);
                var sources = map.get(key);

                var _loop = function _loop(i) {
                    var mediaNode = media.children[i];
                    if (mediaNode.tagName === 'VIDEO') {
                        sources.forEach(function (sourceElement) {
                            mediaNode.appendChild(sourceElement);
                        });
                    }
                };

                for (var i = 0; i < media.children.length; i++) {
                    _loop(i);
                }
            },
            cleanMediaSource: function cleanMediaSource(media) {
                for (var i = 0; i < media.children.length; i++) {
                    var _mediaNode = media.children[i];
                    if (_mediaNode.tagName === 'VIDEO') {
                        while (_mediaNode.firstChild) {
                            _mediaNode.removeChild(_mediaNode.firstChild);
                        }
                    }
                }
            },
            getMapIndex: function getMapIndex(map, index) {
                var counter = -1;
                var keyValue = {};
                map.forEach(function (value, key) {

                    if (counter === index) {
                        keyValue.key = key;
                        keyValue.value = value;
                    }
                    counter++;
                });
                return keyValue;
            },
            keyExist: function keyExist(map, searchKey) {
                return -1 < map.get('map_keys_1').indexOf(searchKey.toLowerCase());
            }
        });

    }, {}]
}, {}, [1]);
;
document.addEventListener('DOMContentLoaded', function () {

    var findBestLocalization = function() {
        var result = "en";
        var locales = ["ca", "cs", "de", "es", "fa", "fr", "hr", "hu", "it", "ja", "ko", "ms", "nl", "pl", "pt", "ro", "ru", "sk", "sv", "uk", "zh-cn", "zh"];
        var urlParts = window.location.href.split("/");
        if (urlParts.length > 3) {
            var urlLocale = urlParts[3].toLowerCase();
            var localeIndex = locales.indexOf(urlLocale);
            if (localeIndex > -1) {
                result = locales[localeIndex];
            }
            else {
                var localeParts = urlLocale.split("-");
                if (localeParts.length == 2) {
                    var language = localeParts[0];
                    var languageIndex = locales.indexOf(language);
                    if (languageIndex > -1) {
                        result = locales[languageIndex];
                    }
                }
            }
        }

        return result;
    }

    mejs.i18n.language(findBestLocalization());

    $('.mejs__qualities-selector-input').on('focus', function (e) {
        $(e.target.closest('.mejs__qualities-selector')).addClass('focused');
    });

    $('html').on('keydown', function (e) {

        if (!e.ctrlKey && !e.altKey)
            return;

        if ((e.keyCode == 17 /* ctrl */) || (e.keyCode == 18 /* alt */))
            return;

        if ((typeof (mejs) == "undefined") || (mejs == null)) {
            return;
        }

        var player = null;
        for (var playerIndex in mejs.players) {
            if (mejs.players.hasOwnProperty(playerIndex)) {
                var p = mejs.players[playerIndex];
                if (p.hasFocus) {
                    player = p;
                    break;
                }
            }
        }

        if ((player == null) || !$(player.container).is(":visible") || ($(player.container).parent().height() == 0)) {
            return;
        }

        var playOrPause = function () {
            if (!player.paused) {
                player.pause();
            }
            else {
                player.play();
            }
        };

        var getPercentage = function (percentParam) {
            return player.duration / 100 * percentParam;
        };

        switch (e.keyCode) {
            //play/position
            case 80: // p
                playOrPause();
                break;
            case 32: // [space]
                playOrPause();
                break;
            case 83: // s
                player.currentTime = 0;
                break;
            case 82: // r
                var percentToRewind = 5;
                var percentOfTotalTime = getPercentage(percentToRewind);

                if (player.currentTime > percentOfTotalTime) {
                    player.currentTime -= percentOfTotalTime;
                }
                else {
                    player.currentTime = 0;
                }
                break;
            case 70: // f
                if (player.currentTime === player.duration)
                    return;

                var percentToForward = 5;
                var percentOfTotalTime = getPercentage(percentToForward);

                if (player.currentTime + percentOfTotalTime > player.duration) {
                    player.currentTime = player.duration;
                }
                else if (player.currentTime + percentOfTotalTime < player.duration) {
                    player.currentTime += percentOfTotalTime;
                }
                break;
            // volume
            case 49: // 1
                player.volume = 0.1;
                break;
            case 50: // 2
                player.volume = 0.2;
                break;
            case 51: // 3
                player.volume = 0.3;
                break;
            case 52: // 4
                player.volume = 0.4;
                break;
            case 53: // 5
                player.volume = 0.5;
                break;
            case 54: // 6
                player.volume = 0.6;
                break;
            case 55: // 7
                player.volume = 0.7;
                break;
            case 56: // 8 
                player.volume = 0.8;
                break;
            case 57: // 9
                player.volume = 0.9;
                break;
            case 77: // m
                if (player.muted) {
                    player.muted = false;
                }
                else {
                    player.muted = true;
                }
                break;
        }
    });

    // Our video player is always shown within a colorbox. Here's how to dynamically resize both.
    // See:
    // https://stackoverflow.com/a/18543166
    //
    $(function () {
        $(window).bind('resize', function () {

            var HEIGHT_PERCENTAGE = .80; // '1' would set the height to 100%
            var h = "innerHeight" in window
                ? window.innerHeight
                : document.documentElement.offsetHeight;
            h *= HEIGHT_PERCENTAGE;

            var WIDTH_PERCENTAGE = .80; // '1' would set the width to 100%
            var w = "innerHeight" in window
                ? window.innerWidth
                : document.documentElement.offsetWidth;
            w *= WIDTH_PERCENTAGE;

            $.colorbox.resize({ width: w, height: h });
        }).trigger('resize');
    });
});;
/*declared and using this variable to fix jQuery conflict in experince editor explore*/
var tempVideoLinkHrefAttrName = 'data-orig-href';
var mediaCloseControl = "#cboxClose";
var isCustomTooltipsNeeded = true;

var jq2141 = jQuery;

jq2141(document).ready(function (e) {
    if ((typeof (gmositecore) != "undefined") &&
        (typeof (gmositecore._useAccessibleVideoPlayer) != "undefined") && (gmositecore._useAccessibleVideoPlayer.toLowerCase() === "true") &&
        (typeof (gmositecore._contextItemId) != "undefined") && (typeof (gmositecore._contextItemId.length) != "undefined") && (gmositecore._contextItemId.length > 0)) {
        EmbedAccessibleVideoPlayer();
    }
    else {
        jq2141('a.video-connect').colorbox({ iframe: true, innerWidth: "80%", innerHeight: "80%" });
    }

    function getVimeoIdFromQueryString() {
        var match = RegExp('[?&]videoid=([^&]*)').exec(window.location.search.toLocaleLowerCase());
        return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
    }

    var vimeoId = getVimeoIdFromQueryString();
    if (vimeoId) {
        $.colorbox({ iframe: true, href: "https://player.vimeo.com/video/" + vimeoId, innerWidth: "80%", innerHeight: "80%" });
    }
});

function EmbedAccessibleVideoPlayer() {
    var links = jq2141('a.video-connect');
    links.attr('disabled', 'disabled');
    links.each(function (index) { jq2141(this).attr(tempVideoLinkHrefAttrName, jq2141(this).attr('href')); });
    links.removeAttr('href');

    links.each(function (index) {
        var t = jq2141(this);
        var videoId = 0;
        var href = t.attr(tempVideoLinkHrefAttrName).toLowerCase();
        var restore = true;
        if (href.indexOf("://player.vimeo.com") > 0) {
            var parts = href.split('/');
            videoId = Number(parts[parts.length - 1]);
            if (!isNaN(videoId)) {
                var url = '/api/v1/vimeo/video?videoId=' + videoId + "&datacontext=" + gmositecore._contextItemId;
                restore = false;
                jq2141.ajax(url)
                    .done(function (json) {
                        try {
                            var html = buildHtmlForVideo(json);
                            if ((html != null) && (html.length > 0)) {
                                // Build the <video> tag
                                t.after(html);
                                var theVideo = t.next();

                                new MediaElementPlayer(theVideo[0], {
                                    features: ['playpause', 'current', 'progress', 'duration', 'volume', 'tracks', 'quality', 'fullscreen'],
                                    stretching: 'fill'
                                });

                                var container = theVideo.closest('.mejs__container');
                                t.attr('href', '#' + container.attr('id'));
                                t.removeAttr('disabled');
                                t.click(function () { jq2141(container.css('display', 'block')); });
                                t.colorbox({ scrolling: false, inline: true, innerWidth: '80%', innerHeight: '80%', onCleanup: cleanUpMediaElement, onComplete: setAccessibilitySettings });
                            }
                            else {
                                restoreVideoLink(t, href);
                            }
                        }
                        catch (e) {
                            restoreVideoLink(t, href);
                        }
                    })
                    .fail(function () {
                        restoreVideoLink(t, href);
                    })
                    .always(function () {
                        t.removeAttr(tempVideoLinkHrefAttrName);
                    });
            }
        }

        if (restore) {
            restoreVideoLink(t, href);
        }
    });
}

function buildHtmlForVideo(data) {
    var result = '';

    if ((data != null) &&
        (typeof (data.Movie) != 'undefined') && (data.Movie != null) &&
        (typeof (data.Movie.files) != 'undefined') && (data.Movie.files != null) && (data.Movie.files.length > 0)) {

        var poster = '';
        if ((typeof (data.Movie.pictures) != 'undefined') && (data.Movie.pictures != null)) {
            for (var iPicture = 0; iPicture < data.Movie.pictures.length; iPicture++) {
                var picture = data.Movie.pictures[iPicture];
                if (picture.type == 'thumbnail') {
                    poster = picture.link;
                    break;
                }
            }
        }

        result += '<video poster="' + poster + '" preload="none" controls playsinline webkit-playsinline crossorigin="anonymous">';

        for (var iFile = 0; iFile < data.Movie.files.length; iFile++) {
            var file = data.Movie.files[iFile];
            result += '<source src="' + file.link_secure + '" type="' + file.type + '" data-quality="' + file.quality + (file.width > 0 ? ' ' + file.width + 'x' + file.height : '') + '" />';
        }

        if ((typeof (data.Tracks) != 'undefined') && (data.Tracks != null)) {
            for (var iTrack = 0; iTrack < data.Tracks.length; iTrack++) {
                var track = data.Tracks[iTrack];
                result += '<track src="' + track.Url + '" kind="' + track.Kind + '" srclang="' + track.Locale + '" label="' + track.Label + '" />';
            }
        }

        result += '</video>';
    }

    return result;
}

function restoreVideoLink(obj, address) {
    if (obj.attr('disabled') == 'disabled') {
        obj.attr('href', address);
        obj.removeAttr('disabled');
        obj.colorbox({ iframe: true, innerWidth: '80%', innerHeight: '80%' });
    }
    obj.removeAttr(tempVideoLinkHrefAttrName);
}

function cleanUpMediaElement() {
    var vc = jq2141('a.video-connect');
    vc.each(function (index) {
        var href = jq2141(this).attr('href');
        if (href.lastIndexOf("#", 0) === 0) {
            var container = jq2141(href).closest(".mejs__container");
            jq2141(container.css("display", "none"));
        }
    });

    if ((typeof (mejs) != "undefined") && (mejs != null)) {
        for (var playerIndex in mejs.players) {
            if (mejs.players.hasOwnProperty(playerIndex)) {
                var p = mejs.players[playerIndex];
                if (!p.paused && !p.ended) {
                    p.pause();
                    p.hasFocus = false;
                }
            }
        }
    }
}

function setTabIndex() {
    var closeControl = jq2141(mediaCloseControl);
    closeControl.focus();
}

function setAccessibilitySettings() {
    ///set close button focus
    setTabIndex();
    //set custom tooltips
    setCustomTooltips();
}


function setCustomTooltips() {


    //Validate browser, this function is not needed in ms edge
    var userAgent = navigator.userAgent;
    var isEdgeBrowser = (userAgent.match(/edg/i) != null);
    //Create Html span to show if the browser is not compatible with the keyboard navigation tooltips
    if (isCustomTooltipsNeeded && !isEdgeBrowser) {
        //   isCustomTooltipsNeeded = false;
        var elements = document.getElementsByClassName("customTooltip");
        while (elements.length > 0) {
            elements[0].parentNode.removeChild(elements[0]);
        }


        setTimeout(
            function () {

                var controlSelectors = ['button', 'span'];
                //control classes for the media player buttons with tooltip

                var Sections = ['.mejs__button.mejs__playpause-button', '.mejs__button.mejs__volume-button.mejs__mute', '.mejs__button.mejs__qualities-button', '.mejs__button.mejs__fullscreen-button'];
                jq2141(Sections).each(function (i1, e) {
                    var control = this.valueOf();
                    var controlBtn = control + ">" + controlSelectors[0];
                    var controlSpan = control + ">" + controlSelectors[1];
                    //Create the span

                    jq2141(control).append("<span id='customTooltip" + i1 + "' class='hiddenCustomTooltip customTooltip' aria-hidden='true'>" + jq2141(controlBtn).attr('title') + '</span>');


                    //Set the focus event for each control with tooltip, this action shows the tooltip
                    jq2141(controlBtn).focus(function () {
                        $(controlSpan).attr("aria-hidden", "false");
                        $(controlSpan).removeClass("hiddenCustomTooltip");
                    });
                    //Set the blur event for each control with tooltip, this action hides the tooltips
                    jq2141(controlBtn).blur(function () {
                        $(controlSpan).attr("aria-hidden", "true");
                        $(controlSpan).addClass("hiddenCustomTooltip");
                    });
                    //Set the hover event for each control with tooltip, this action hides all the custom tooltips to avoid show multiple tooltips at same time

                    jq2141(Sections).each(function (i2, hoe) {
                        jq2141(controlBtn).hover(function () {
                            $(hoe.valueOf() + ">" + controlSelectors[1]).attr("aria-hidden", "true");
                            $(hoe.valueOf() + ">" + controlSelectors[1]).addClass("hiddenCustomTooltip");
                        });
                        jq2141('#customTooltip' + i1).hover(function () {
                            $(hoe.valueOf() + ">" + controlSelectors[1]).attr("aria-hidden", "true");
                            $(hoe.valueOf() + ">" + controlSelectors[1]).addClass("hiddenCustomTooltip");
                        });
                    });
                })

            }, 2000);



    }
    else if (isEdgeBrowser) {
        isCustomTooltipsNeeded = false;
    }
}
// -------------------------------------------------------------------------------------------------
// Are the functions below called by anything? Nothing in the solution checked into source control
// seems to call these. Are they vestigial?

function screen_size() {
    var size = new Array(2);
    size[0] = jq2141(document).width();
    size[1] = jq2141(document).height();
    return size;
}

// Hides / Shows images of a blade based on screen size
function LoadBladeImages(bladename, size) {

    var imgdiv = "div." + bladename + "-imgdiv";
    var imgClass = "." + bladename + "-img";
    var imgTabletClass = "." + bladename + "-img-tab";

    var hideClass = imgClass;
    var showClass = imgTabletClass;

    if (size[0] >= 900) {
        hideClass = imgTabletClass;
        showClass = imgClass;
    }

    jq2141(imgdiv).each(function () {
        jq2141(this).find(showClass).each(function () {
            LoadImageSrcFromDataAttribute(jQuery(this));
            jq2141(this).show();
        });
        jq2141(this).find(hideClass).hide();
    });

}

// Loads image src  from data-loadimageurl
function LoadImageSrcFromDataAttribute(img) {
    var imageurl = img.data("loadimageurl");
    img.attr("src", imageurl);
};
(function(a){if(typeof define==="function"&&define.amd&&define.amd.jQuery){define(["jquery"],a)}else{a(jQuery)}}(function(f){var y="1.6.9",p="left",o="right",e="up",x="down",c="in",A="out",m="none",s="auto",l="swipe",t="pinch",B="tap",j="doubletap",b="longtap",z="hold",E="horizontal",u="vertical",i="all",r=10,g="start",k="move",h="end",q="cancel",a="ontouchstart" in window,v=window.navigator.msPointerEnabled&&!window.navigator.pointerEnabled,d=window.navigator.pointerEnabled||window.navigator.msPointerEnabled,C="TouchSwipe";var n={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,tap:null,doubleTap:null,longTap:null,hold:null,triggerOnTouchEnd:true,triggerOnTouchLeave:false,allowPageScroll:"auto",fallbackToMouseEvents:true,excludedElements:"label, button, input, select, textarea, a, .noSwipe",preventDefaultEvents:true};f.fn.swipe=function(H){var G=f(this),F=G.data(C);if(F&&typeof H==="string"){if(F[H]){return F[H].apply(this,Array.prototype.slice.call(arguments,1))}else{f.error("Method "+H+" does not exist on jQuery.swipe")}}else{if(!F&&(typeof H==="object"||!H)){return w.apply(this,arguments)}}return G};f.fn.swipe.version=y;f.fn.swipe.defaults=n;f.fn.swipe.phases={PHASE_START:g,PHASE_MOVE:k,PHASE_END:h,PHASE_CANCEL:q};f.fn.swipe.directions={LEFT:p,RIGHT:o,UP:e,DOWN:x,IN:c,OUT:A};f.fn.swipe.pageScroll={NONE:m,HORIZONTAL:E,VERTICAL:u,AUTO:s};f.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,ALL:i};function w(F){if(F&&(F.allowPageScroll===undefined&&(F.swipe!==undefined||F.swipeStatus!==undefined))){F.allowPageScroll=m}if(F.click!==undefined&&F.tap===undefined){F.tap=F.click}if(!F){F={}}F=f.extend({},f.fn.swipe.defaults,F);return this.each(function(){var H=f(this);var G=H.data(C);if(!G){G=new D(this,F);H.data(C,G)}})}function D(a5,aw){var aA=(a||d||!aw.fallbackToMouseEvents),K=aA?(d?(v?"MSPointerDown":"pointerdown"):"touchstart"):"mousedown",az=aA?(d?(v?"MSPointerMove":"pointermove"):"touchmove"):"mousemove",V=aA?(d?(v?"MSPointerUp":"pointerup"):"touchend"):"mouseup",T=aA?null:"mouseleave",aE=(d?(v?"MSPointerCancel":"pointercancel"):"touchcancel");var ah=0,aQ=null,ac=0,a2=0,a0=0,H=1,ar=0,aK=0,N=null;var aS=f(a5);var aa="start";var X=0;var aR=null;var U=0,a3=0,a6=0,ae=0,O=0;var aX=null,ag=null;try{aS.bind(K,aO);aS.bind(aE,ba)}catch(al){f.error("events not supported "+K+","+aE+" on jQuery.swipe")}this.enable=function(){aS.bind(K,aO);aS.bind(aE,ba);return aS};this.disable=function(){aL();return aS};this.destroy=function(){aL();aS.data(C,null);aS=null};this.option=function(bd,bc){if(aw[bd]!==undefined){if(bc===undefined){return aw[bd]}else{aw[bd]=bc}}else{f.error("Option "+bd+" does not exist on jQuery.swipe.options")}return null};function aO(be){if(aC()){return}if(f(be.target).closest(aw.excludedElements,aS).length>0){return}var bf=be.originalEvent?be.originalEvent:be;var bd,bg=bf.touches,bc=bg?bg[0]:bf;aa=g;if(bg){X=bg.length}else{be.preventDefault()}ah=0;aQ=null;aK=null;ac=0;a2=0;a0=0;H=1;ar=0;aR=ak();N=ab();S();if(!bg||(X===aw.fingers||aw.fingers===i)||aY()){aj(0,bc);U=au();if(X==2){aj(1,bg[1]);a2=a0=av(aR[0].start,aR[1].start)}if(aw.swipeStatus||aw.pinchStatus){bd=P(bf,aa)}}else{bd=false}if(bd===false){aa=q;P(bf,aa);return bd}else{if(aw.hold){ag=setTimeout(f.proxy(function(){aS.trigger("hold",[bf.target]);if(aw.hold){bd=aw.hold.call(aS,bf,bf.target)}},this),aw.longTapThreshold)}ap(true)}return null}function a4(bf){var bi=bf.originalEvent?bf.originalEvent:bf;if(aa===h||aa===q||an()){return}var be,bj=bi.touches,bd=bj?bj[0]:bi;var bg=aI(bd);a3=au();if(bj){X=bj.length}if(aw.hold){clearTimeout(ag)}aa=k;if(X==2){if(a2==0){aj(1,bj[1]);a2=a0=av(aR[0].start,aR[1].start)}else{aI(bj[1]);a0=av(aR[0].end,aR[1].end);aK=at(aR[0].end,aR[1].end)}H=a8(a2,a0);ar=Math.abs(a2-a0)}if((X===aw.fingers||aw.fingers===i)||!bj||aY()){aQ=aM(bg.start,bg.end);am(bf,aQ);ah=aT(bg.start,bg.end);ac=aN();aJ(aQ,ah);if(aw.swipeStatus||aw.pinchStatus){be=P(bi,aa)}if(!aw.triggerOnTouchEnd||aw.triggerOnTouchLeave){var bc=true;if(aw.triggerOnTouchLeave){var bh=aZ(this);bc=F(bg.end,bh)}if(!aw.triggerOnTouchEnd&&bc){aa=aD(k)}else{if(aw.triggerOnTouchLeave&&!bc){aa=aD(h)}}if(aa==q||aa==h){P(bi,aa)}}}else{aa=q;P(bi,aa)}if(be===false){aa=q;P(bi,aa)}}function M(bc){var bd=bc.originalEvent?bc.originalEvent:bc,be=bd.touches;if(be){if(be.length){G();return true}}if(an()){X=ae}a3=au();ac=aN();if(bb()||!ao()){aa=q;P(bd,aa)}else{if(aw.triggerOnTouchEnd||(aw.triggerOnTouchEnd==false&&aa===k)){bc.preventDefault();aa=h;P(bd,aa)}else{if(!aw.triggerOnTouchEnd&&a7()){aa=h;aG(bd,aa,B)}else{if(aa===k){aa=q;P(bd,aa)}}}}ap(false);return null}function ba(){X=0;a3=0;U=0;a2=0;a0=0;H=1;S();ap(false)}function L(bc){var bd=bc.originalEvent?bc.originalEvent:bc;if(aw.triggerOnTouchLeave){aa=aD(h);P(bd,aa)}}function aL(){aS.unbind(K,aO);aS.unbind(aE,ba);aS.unbind(az,a4);aS.unbind(V,M);if(T){aS.unbind(T,L)}ap(false)}function aD(bg){var bf=bg;var be=aB();var bd=ao();var bc=bb();if(!be||bc){bf=q}else{if(bd&&bg==k&&(!aw.triggerOnTouchEnd||aw.triggerOnTouchLeave)){bf=h}else{if(!bd&&bg==h&&aw.triggerOnTouchLeave){bf=q}}}return bf}function P(be,bc){var bd,bf=be.touches;if((J()||W())||(Q()||aY())){if(J()||W()){bd=aG(be,bc,l)}if((Q()||aY())&&bd!==false){bd=aG(be,bc,t)}}else{if(aH()&&bd!==false){bd=aG(be,bc,j)}else{if(aq()&&bd!==false){bd=aG(be,bc,b)}else{if(ai()&&bd!==false){bd=aG(be,bc,B)}}}}if(bc===q){ba(be)}if(bc===h){if(bf){if(!bf.length){ba(be)}}else{ba(be)}}return bd}function aG(bf,bc,be){var bd;if(be==l){aS.trigger("swipeStatus",[bc,aQ||null,ah||0,ac||0,X,aR]);if(aw.swipeStatus){bd=aw.swipeStatus.call(aS,bf,bc,aQ||null,ah||0,ac||0,X,aR);if(bd===false){return false}}if(bc==h&&aW()){aS.trigger("swipe",[aQ,ah,ac,X,aR]);if(aw.swipe){bd=aw.swipe.call(aS,bf,aQ,ah,ac,X,aR);if(bd===false){return false}}switch(aQ){case p:aS.trigger("swipeLeft",[aQ,ah,ac,X,aR]);if(aw.swipeLeft){bd=aw.swipeLeft.call(aS,bf,aQ,ah,ac,X,aR)}break;case o:aS.trigger("swipeRight",[aQ,ah,ac,X,aR]);if(aw.swipeRight){bd=aw.swipeRight.call(aS,bf,aQ,ah,ac,X,aR)}break;case e:aS.trigger("swipeUp",[aQ,ah,ac,X,aR]);if(aw.swipeUp){bd=aw.swipeUp.call(aS,bf,aQ,ah,ac,X,aR)}break;case x:aS.trigger("swipeDown",[aQ,ah,ac,X,aR]);if(aw.swipeDown){bd=aw.swipeDown.call(aS,bf,aQ,ah,ac,X,aR)}break}}}if(be==t){aS.trigger("pinchStatus",[bc,aK||null,ar||0,ac||0,X,H,aR]);if(aw.pinchStatus){bd=aw.pinchStatus.call(aS,bf,bc,aK||null,ar||0,ac||0,X,H,aR);if(bd===false){return false}}if(bc==h&&a9()){switch(aK){case c:aS.trigger("pinchIn",[aK||null,ar||0,ac||0,X,H,aR]);if(aw.pinchIn){bd=aw.pinchIn.call(aS,bf,aK||null,ar||0,ac||0,X,H,aR)}break;case A:aS.trigger("pinchOut",[aK||null,ar||0,ac||0,X,H,aR]);if(aw.pinchOut){bd=aw.pinchOut.call(aS,bf,aK||null,ar||0,ac||0,X,H,aR)}break}}}if(be==B){if(bc===q||bc===h){clearTimeout(aX);clearTimeout(ag);if(Z()&&!I()){O=au();aX=setTimeout(f.proxy(function(){O=null;aS.trigger("tap",[bf.target]);if(aw.tap){bd=aw.tap.call(aS,bf,bf.target)}},this),aw.doubleTapThreshold)}else{O=null;aS.trigger("tap",[bf.target]);if(aw.tap){bd=aw.tap.call(aS,bf,bf.target)}}}}else{if(be==j){if(bc===q||bc===h){clearTimeout(aX);O=null;aS.trigger("doubletap",[bf.target]);if(aw.doubleTap){bd=aw.doubleTap.call(aS,bf,bf.target)}}}else{if(be==b){if(bc===q||bc===h){clearTimeout(aX);O=null;aS.trigger("longtap",[bf.target]);if(aw.longTap){bd=aw.longTap.call(aS,bf,bf.target)}}}}}return bd}function ao(){var bc=true;if(aw.threshold!==null){bc=ah>=aw.threshold}return bc}function bb(){var bc=false;if(aw.cancelThreshold!==null&&aQ!==null){bc=(aU(aQ)-ah)>=aw.cancelThreshold}return bc}function af(){if(aw.pinchThreshold!==null){return ar>=aw.pinchThreshold}return true}function aB(){var bc;if(aw.maxTimeThreshold){if(ac>=aw.maxTimeThreshold){bc=false}else{bc=true}}else{bc=true}return bc}function am(bc,bd){if(aw.preventDefaultEvents===false){return}if(aw.allowPageScroll===m){bc.preventDefault()}else{var be=aw.allowPageScroll===s;switch(bd){case p:if((aw.swipeLeft&&be)||(!be&&aw.allowPageScroll!=E)){bc.preventDefault()}break;case o:if((aw.swipeRight&&be)||(!be&&aw.allowPageScroll!=E)){bc.preventDefault()}break;case e:if((aw.swipeUp&&be)||(!be&&aw.allowPageScroll!=u)){bc.preventDefault()}break;case x:if((aw.swipeDown&&be)||(!be&&aw.allowPageScroll!=u)){bc.preventDefault()}break}}}function a9(){var bd=aP();var bc=Y();var be=af();return bd&&bc&&be}function aY(){return !!(aw.pinchStatus||aw.pinchIn||aw.pinchOut)}function Q(){return !!(a9()&&aY())}function aW(){var bf=aB();var bh=ao();var be=aP();var bc=Y();var bd=bb();var bg=!bd&&bc&&be&&bh&&bf;return bg}function W(){return !!(aw.swipe||aw.swipeStatus||aw.swipeLeft||aw.swipeRight||aw.swipeUp||aw.swipeDown)}function J(){return !!(aW()&&W())}function aP(){return((X===aw.fingers||aw.fingers===i)||!a)}function Y(){return aR[0].end.x!==0}function a7(){return !!(aw.tap)}function Z(){return !!(aw.doubleTap)}function aV(){return !!(aw.longTap)}function R(){if(O==null){return false}var bc=au();return(Z()&&((bc-O)<=aw.doubleTapThreshold))}function I(){return R()}function ay(){return((X===1||!a)&&(isNaN(ah)||ah<aw.threshold))}function a1(){return((ac>aw.longTapThreshold)&&(ah<r))}function ai(){return !!(ay()&&a7())}function aH(){return !!(R()&&Z())}function aq(){return !!(a1()&&aV())}function G(){a6=au();ae=event.touches.length+1}function S(){a6=0;ae=0}function an(){var bc=false;if(a6){var bd=au()-a6;if(bd<=aw.fingerReleaseThreshold){bc=true}}return bc}function aC(){return !!(aS.data(C+"_intouch")===true)}function ap(bc){if(bc===true){aS.bind(az,a4);aS.bind(V,M);if(T){aS.bind(T,L)}}else{aS.unbind(az,a4,false);aS.unbind(V,M,false);if(T){aS.unbind(T,L,false)}}aS.data(C+"_intouch",bc===true)}function aj(bd,bc){var be=bc.identifier!==undefined?bc.identifier:0;aR[bd].identifier=be;aR[bd].start.x=aR[bd].end.x=bc.pageX||bc.clientX;aR[bd].start.y=aR[bd].end.y=bc.pageY||bc.clientY;return aR[bd]}function aI(bc){var be=bc.identifier!==undefined?bc.identifier:0;var bd=ad(be);bd.end.x=bc.pageX||bc.clientX;bd.end.y=bc.pageY||bc.clientY;return bd}function ad(bd){for(var bc=0;bc<aR.length;bc++){if(aR[bc].identifier==bd){return aR[bc]}}}function ak(){var bc=[];for(var bd=0;bd<=5;bd++){bc.push({start:{x:0,y:0},end:{x:0,y:0},identifier:0})}return bc}function aJ(bc,bd){bd=Math.max(bd,aU(bc));N[bc].distance=bd}function aU(bc){if(N[bc]){return N[bc].distance}return undefined}function ab(){var bc={};bc[p]=ax(p);bc[o]=ax(o);bc[e]=ax(e);bc[x]=ax(x);return bc}function ax(bc){return{direction:bc,distance:0}}function aN(){return a3-U}function av(bf,be){var bd=Math.abs(bf.x-be.x);var bc=Math.abs(bf.y-be.y);return Math.round(Math.sqrt(bd*bd+bc*bc))}function a8(bc,bd){var be=(bd/bc)*1;return be.toFixed(2)}function at(){if(H<1){return A}else{return c}}function aT(bd,bc){return Math.round(Math.sqrt(Math.pow(bc.x-bd.x,2)+Math.pow(bc.y-bd.y,2)))}function aF(bf,bd){var bc=bf.x-bd.x;var bh=bd.y-bf.y;var be=Math.atan2(bh,bc);var bg=Math.round(be*180/Math.PI);if(bg<0){bg=360-Math.abs(bg)}return bg}function aM(bd,bc){var be=aF(bd,bc);if((be<=45)&&(be>=0)){return p}else{if((be<=360)&&(be>=315)){return p}else{if((be>=135)&&(be<=225)){return o}else{if((be>45)&&(be<135)){return x}else{return e}}}}}function au(){var bc=new Date();return bc.getTime()}function aZ(bc){bc=f(bc);var be=bc.offset();var bd={left:be.left,right:be.left+bc.outerWidth(),top:be.top,bottom:be.top+bc.outerHeight()};return bd}function F(bc,bd){return(bc.x>bd.left&&bc.x<bd.right&&bc.y>bd.top&&bc.y<bd.bottom)}}}));;
var sourceURL;
$(document).ready(function () {
    if ($(window).width() < 680) {
        // do something here
        $('.lfc-left-bg-img, .lfc-bg-img').each(function () {
            sourceURL = $(this).attr('data-image-source');
            sourceURL = 'url("' + sourceURL + '")';
            $(this).css('background-image', '');
        });
    }
    else {
        $('.lfc-left-bg-img, .lfc-bg-img').each(function () {
            sourceURL = $(this).attr('data-image-source');
            sourceURL = 'url("' + sourceURL + '")';
            $(this).css('background-image', sourceURL);
        });
    }
    $('.threecol').each(function () {
        var current3Col = this;
        if ($(current3Col).attr("data-threecol-page-editor-mode") == "True") {
            var divs = $(current3Col).children();
            for (var i = 0; i < divs.length; i += 9) {
                divs.slice(i, i + 9).wrapAll("<div class='row no-margin'></div>");
            }
        }
        else {
            var divs = $(current3Col).children().not('.accordion-merger-section');
            for (var i = 0; i < divs.length; i += 3) {
                divs.slice(i, i + 3).wrapAll("<div class='row no-margin'></div>");
            }
        }
    });

    $('.twocol').each(function () {
        var current2Col = this;
        if ($(current2Col).attr("data-twocol-page-editor-mode") == "True") {
            var divs = $(current2Col).children().not('link');
            for (var i = 0; i < divs.length; i += 6) {
                divs.slice(i, i + 6).wrapAll("<div class='row no-margin'></div>");
            }
        }
        else {
            var divs = $(current2Col).children().not('.accordion-merger-section').not('link');
            for (var i = 0; i < divs.length; i += 2) {
                divs.slice(i, i + 2).wrapAll("<div class='row no-margin'></div>");
            }
        }
    });

    $('.fourcol').each(function () {
        var current4Col = this;
        var divs = $(current4Col).find('.four-col-grid');
        if ($(current4Col).attr("data-fourcol-page-editor-mode") == "True") {
            for (var i = 0; i < divs.length; i += 12) {
                divs.slice(i, i + 12).wrapAll("<div class='row no-margin'></div>");
            }
        }
        else {
            for (var i = 0; i < divs.length; i += 4) {
                divs.slice(i, i + 4).wrapAll("<div class='row no-margin'></div>");
            }
        }
    });
});

$(window).resize(function () {
    if ($(window).width() < 680) {
        // do something here
        $('.lfc-left-bg-img, .lfc-bg-img').each(function () {
            sourceURL = $(this).attr('data-image-source');
            sourceURL = 'url("' + sourceURL + '")';
            $(this).css('background-image', '');
        });
    }
    else {
        $('.lfc-left-bg-img, .lfc-bg-img').each(function () {
            sourceURL = $(this).attr('data-image-source');
            sourceURL = 'url("' + sourceURL + '")';
            $(this).css('background-image', sourceURL);
        });
    }
});;
function AjaxCallBingTranslation() {
    var languageCode = $.cookie("MPN_TranslatorLangSelected");


    if (languageCode != undefined) {
        // Only translate via the hidden control if there actually is a corresponding language in the
        // hidden control's dropdown list. We can sometimes run afoul of this requirement if the visitor
        // does something weird like choosing to translate to "English" when they first land on the page...
        // which is already shown in English!
        //clearHistory_MachineTranslation();
        selectedMachineTranslationOptionIsValid = true;
        Microsoft.Translator.Widget.Translate(null, languageCode, null, null, function () {
        });

        if ((typeof ($.cookie) == "undefined") && (typeof (jQuery) != "undefined")) {
        //    initJQueryCookie(jQuery, document);
        }

        $.cookie("MPN_TranslatorLangSelected", languageCode, { path: '/' });
        $("#WidgetFloaterPanels").css("display", "none");
        $("#lanfooter").show();
        $("#MicrosoftTranslatorWidget #MSTWGoButton").click();
    }
}

function initSearchResults($) {
    var searchResultsPerPageCookieName = "MPN_SearcheResultsPerPage";

    //Check for search results page
    var searchResultsContainers = $('div.search-results-x');
    if (!searchResultsContainers.length) return;

    //Check for Firefox for checkbox styling and accessibility differences.
    var isFirefox = navigator.userAgent.indexOf("Firefox") > 0;

    //For each instance of a search results container... (should only be 1)
    for (var i = 0; i < searchResultsContainers.length; i++) {
        var $searchResults = $(searchResultsContainers[i]);
        var clearResultsLinks = $searchResults.find('.clear-search-results');
        var filterCheckboxes = $searchResults.find('input.filter-checkbox');
        var listHeaders = $searchResults.find('li.list-header');
        var $mobileFilterCTA = $searchResults.find('a.mobile-filter-cta');

        if (isFirefox) {
            $searchResults.addClass('firefox');
        }

        //Add click handler to mobile filters button
        $mobileFilterCTA.on('click', function (e) {
            $searchResults.addClass('mobile-filters');
            $('h2.mobile-filter-header').focus();
            var $filterResult = $('.mobile-filters').find('.filter-list');
            if ($(window).width() <= 679) {
                $('.filter-list').addClass('expanded');
            }
            else {
                if ($('.filter-list').hasClass('expanded')) {
                    $('.filter-list').removeClass('expanded');
                }
            }
            


            //    var $ul = $this.parent();
            //if ($ul.hasClass('expanded')) {
            //    $ul.removeClass('expanded');
            //} else {
            //    $ul.addClass('expanded');
            //}

            //var $this = $(this);
            //var $mobileFilters = $this.closest('.mobile-filters');
            //if ($mobileFilters.length) {
            //    var $ul = $this.parent();
            //    if ($(window).width() <= 679) {
            //        $ul.addClass('expanded');
            //    }
            //    else {
            //        $ul.removeClass('expanded');
            //    }
            //}
        });

        //Add click handler for close mobile filters button
        $searchResults.find('a.mobile-close-results-cta').on('click', function (e) {
            $searchResults.removeClass('mobile-filters');
            $mobileFilterCTA.focus();
        });

        //Add click handler for view results buttons
        $searchResults.find('a.mobile-view-results-cta').on('click', function (e) {
            $searchResults.removeClass('mobile-filters');
            $searchResults.find('.results-displayed:first').focus();
        });

        //Add click handler to clear all checked filters when clear filters link is clicked
        clearResultsLinks.on('click', function (e) {
            filterCheckboxes.removeAttr('checked');
            filterCheckboxes.closest('li').removeClass('selected');
            handleFiltersChange(clearResultsLinks, listHeaders, $mobileFilterCTA);
        });

        //Add change handler to detected checked state changes to filter checkboxes
        filterCheckboxes.on('change', function (e) {
            var $cb = $(this);
            if (!$cb.is(':checked')) {
                $cb.attr('ariachecked', 'false');
                $cb.closest('li').removeClass('selected');
            }

            handleFiltersChange(clearResultsLinks, listHeaders, $mobileFilterCTA);
        });

        //Add click hanlder for mobile filter list headers
        listHeaders.on('click', function (e) {
            var $this = $(this);
            var $mobileFilters = $this.closest('.mobile-filters');

            //Toggle 'expanded' class to list header to show/hide the checkboxes in each list
            if ($mobileFilters.length) {
                var $ul = $this.parent();
                if ($ul.hasClass('expanded')) {
                    $ul.removeClass('expanded');
                } else {
                    $ul.addClass('expanded');
                }
            }
        });

        //Init checkmark states
        handleFiltersChange(clearResultsLinks, listHeaders, $mobileFilterCTA);
        
        $(".page-size-selector .dropdown .dropdown-menu a").on("click", function () {
            $.cookie(searchResultsPerPageCookieName, $(this).text(), { path: '/', expires: 1000 });            
            window.location.reload(true);
        });
    }
}

function handleFiltersChange(clearResultsLinks, listHeaders, $mobileFilterCTA) {
    var totalFiltersSelected = 0;

    //Update the mobile filters selected labels with number of checkboxes checked in each list.
    for (var k = 0; k < listHeaders.length; k++) {
        //Grab the checked filter checkboxes in each list
        var $listHeader = $(listHeaders[k]);
        var $checkedFilters = $listHeader.siblings('li').find('.filter-checkbox:checked');

        //Add up the total number to determine if we should hide/show the clear filter links
        //and to update the label of the filter results button in the search results section.
        totalFiltersSelected += $checkedFilters.length;

        //Update the bold label next to the list header to show number of filters checked in the list
        var $label = $listHeader.find('.mobile-num-filters-selected');
        var labelText = $checkedFilters.length + $label.attr('data-filters-selected-label');
        $label.find('strong').text(labelText);

        //Apply class to highlight list items containing the checked filters
        for (var i = 0; i < $checkedFilters.length; i++) {
            var $cb = $($checkedFilters[i]);
            $cb.attr('ariachecked', 'true');
            var $li = $cb.closest('li');
            $li.addClass('selected');
        }

        //Add class to indicate that we have check filters to apply highlight when list is colapsed.
        if ($checkedFilters.length > 0) {
            $listHeader.closest('.filter-list').addClass('filters-selected');
        } else {
            $listHeader.closest('.filter-list').removeClass('filters-selected');
        }

        //Update the label of the filter results button in the search results section
        var mobileFilterCTALabel = "";
        if (totalFiltersSelected > 0) {
            $mobileFilterCTA.find(".cta-text-span").text($mobileFilterCTA.attr('data-filters-selected-label') + totalFiltersSelected);
            $mobileFilterCTA.removeClass('bg-lighter-gray').addClass('bg-gray-results');
        } else {
            $mobileFilterCTA.find(".cta-text-span").text($mobileFilterCTA.attr('data-no-filters-selected-label'));
            $mobileFilterCTA.removeClass('bg-gray-results').addClass('bg-lighter-gray');
        }
    }

    //Show clear link if at least one is checked, else hide it
    if (totalFiltersSelected > 0) {
        clearResultsLinks.addClass('visible');
    } else {
        clearResultsLinks.removeClass('visible');
    }
}

jQuery(document).ready(function () {
    initSearchResults(jQuery);   
});

jQuery(document).ready(function ($) {
    var recentSearchesCookieName = "MPN_RecentSearches";

    var keywordsNeededPromptText = "Please enter one or more words.";
    var hdnKeywordsNeededPromptText = $("#hdnKeywordsNeededPromptText");
    if ((hdnKeywordsNeededPromptText.length > 0) && (hdnKeywordsNeededPromptText.val().trim().length > 0)) {
        keywordsNeededPromptText = hdnKeywordsNeededPromptText.val();
    }

    if ($("#hdnPagerIntialised").val() != undefined) {

        var maxnuberOfresults = 5;
        function callAjaxMethod(ParIsScopechange) {

            if (typeof (GetAjaxmethodURL) == "undefined") {
                return;
            }

            var link = GetAjaxmethodURL();
            link = link.replace("ParIsScopechange", ParIsScopechange);

            $.ajax({
                url: link,
                type: "POST",
                data: $('form').serialize(),
                success: function (data) {
                    if (jQuery.isEmptyObject(data) || !data.results) {
                        $("#spnNoResultsFound").show();
                    }
                    else {
                        var result = "";
                        $.each(data.results, function (id, BingResult) {
                            //result += '<div class="search-result-block"><a href="' + BingResult.url + '" target="_blank" class="search-result-link" ><h3 class="search-result-header light" tabindex="0">' + BingResult.name + '</h3></a><p class="search-result-content" tabindex="0">' + BingResult.snippet.replace('<script>', '') + '</p><a href="' + BingResult.url + '" target="_blank" class="search-result-link" >' + BingResult.displayUrl + '</a></div>';
                            result += '<div class="search-result-block"><h3 class="search-result-header light"><a href="' + BingResult.url + '" class="search-result-link" >' + BingResult.name + '</a></h3><a href="' + BingResult.url + '"class="search-result-link" >' + BingResult.displayUrl + '</a><p class="search-result-content">' + BingResult.snippet.replace('<script>', '') + '</p></div>';
                        });

                        $(".results-displayed").html(data.PageResultsHeader);
                        $(".results-wrapper").attr('aria-live', 'polite');
                        $(".mobile-num-results strong").html(data.TotalNumberOfResults);

                        $("#hdnTotalNumberOfResults").val(data.TotalNumberOfResults);
                        if (result == "") {
                            $("#spnNoResultsFound").show();
                            $(".divPagination").hide();
                            $('#tblGenerateBingResults').hide();
                        }
                        else {
                            $('#tblGenerateBingResults').show();
                            $('#tblGenerateBingResults').html(result);
                            $(".divPagination").show();
                            $("#spnNoResultsFound").hide();

                            if ($("#hdnPagerIntialised").val() == "false" || $(".divPagination .pagination").length==0) {
                                pagerIntialisation();
                                $("#hdnPagerIntialised").val("true");
                            }
                        }
                    }

                    if ($.cookie("MPN_TranslatorLangSelected") != undefined && $.cookie("MPN_TranslatorLangSelected") != "") {
                        AjaxCallBingTranslation();
                    }
                }
            });
        }

        $("#divBingSearch").hide();
        $("#hdnpagenumber").val("1");
        $("#btnPrevious").hide();
        $("#spnNoResultsFound").hide();
        callAjaxMethod(true);

        $("#search-results-search-box-button").click(function () {
            var searchText = $("#SearchText").val();
            $("#SearchTextInHeader").val(searchText);
            if (searchText == "" || searchText == undefined) {
                alert(keywordsNeededPromptText);
                return false;
            } 
            else {
                doSearch(searchText, true, true);
                return false;
            }
            $('.filter-checkbox-wrapper').find('input[type=checkbox]:checked').removeAttr('checked');
        });

        $(".filter-checkbox-wrapper input[type='checkbox']").click(function () {
            $("#hdnpagenumber").val(1);
            $("#btnPrevious").hide();
            $("#hdnPagerIntialised").val("false");
            callAjaxMethod(true);
        });

        $(".clear-search-results").click(function () {
            $("#hdnpagenumber").val(1);
            $("#btnPrevious").hide();
            $("#hdnPagerIntialised").val("false");
            callAjaxMethod(true);
        });

        function pagerIntialisation() {
            var totResults = parseInt($("#hdnTotalNumberOfResults").val());
            var pageNumber = parseInt($("#hdnpagenumber").val());
            var noofResultstoDisplay = parseInt($("#hdnNumberOfRecordsToDisplay").val());
            var totNumberofpages = Math.ceil(totResults / noofResultstoDisplay);

            if (pageNumber <= 1) {
                $('.divPagination').bootpag({
                    total: totNumberofpages,
                    page: 1,
                    maxVisible: maxnuberOfresults,
                    leaps: false,
                    next: '>',
                    prev: null
                });
            }
            else if (pageNumber == totNumberofpages) {
                $('.divPagination').bootpag({
                    total: totNumberofpages,
                    page: 1,
                    maxVisible: maxnuberOfresults,
                    leaps: false,
                    next: null,
                    prev: '<'
                });
            }
            else {
                $('.divPagination').bootpag({
                    total: totNumberofpages,
                    page: 1,
                    maxVisible: maxnuberOfresults,
                    leaps: false,
                    next: '>',
                    prev: '<'
                });
            }

            if (totNumberofpages == 1) {
                $('.divPagination').bootpag({
                    total: totNumberofpages,
                    page: 1,
                    maxVisible: maxnuberOfresults,
                    leaps: false,
                    next: null,
                    prev: null
                });
            }
            $('ul.bootpag > li a').attr('role', 'button');
        }

        $('.divPagination').bootpag().on('page', function (event, pagenum) {
            // $(".content3").html("Page " + num); // or some ajax content loading...
            $("#hdnpagenumber").val(pagenum);
            callAjaxMethod(false);

            var totResults = parseInt($("#hdnTotalNumberOfResults").val());
            var pageNumber = parseInt($("#hdnpagenumber").val());
            var noofResultstoDisplay = parseInt($("#hdnNumberOfRecordsToDisplay").val());
            var totNumberofpages = Math.ceil(totResults / noofResultstoDisplay);

            if (pagenum <= 1) {
                $(this).bootpag({ total: totNumberofpages, prev: null, next: '>' });
                $(".divPagination .next").show();
            }
            else if (pagenum == totNumberofpages) {
                $(".divPagination .next").hide();
                if (!$('.bootpag li').is('.prev'))
                {
                    $('.divPagination').bootpag({
                        total: totNumberofpages,
                        page: pagenum,
                        maxVisible: maxnuberOfresults,
                        leaps: false,
                        next: null,
                        prev: '<'
                    });
                }

            }
            else {
                $(this).bootpag({ total: totNumberofpages, next: '>', prev: '<' });
                $(".divPagination .next").show();
            }
            $('ul.bootpag > li a').attr('role', 'button');
        });
        
    }

    $("#search-header-icon").click(function () {
        var searchText = $("#SearchTextInHeader").val();
        if (searchText == "" || searchText == undefined) {
            alert(keywordsNeededPromptText);
            $('#SearchTextInHeader').focus()
            return false;
        }
        else {
            doSearch(searchText, true, true);
        }
    });
    $("#search-header-icon").keypress(function (event) {
        if (event.keyCode == 13) {
            var searchText = $("#SearchTextInHeader").val();
            if (searchText == "" || searchText == undefined) {
                alert(keywordsNeededPromptText);
                $('#SearchTextInHeader').focus()
                return false;
            }
            else {
                doSearch(searchText, true, true);
            }
        }
    });

    //Search funcionality for V3
    $("#search-header-icon-v3").click(function () {
        if ($("#SearchTextinHeaderV3").length == 1) {
            var searchText = $("#SearchTextinHeaderV3").val();
            if (searchText == "" || searchText == undefined) {
                alert(keywordsNeededPromptText);
                $('#SearchTextinHeaderV3').focus()
                return false;
            }
            else {
                doSearch(searchText, true, true);
            }
        }
    });

    //Search funcionality for V3 keypress
    $("#search-header-icon-v3, #SearchTextinHeaderV3").keydown(function (event) {
        if (event.keyCode == 13) {
            $("#search-header-icon-v3").trigger('click');
            return false;
        }
    });

    $("#smb-search-header-icon").click(function () {
        var searchText = $("#SearchTextInHeader").val();
        if (searchText == "" || searchText == undefined) {
            alert(keywordsNeededPromptText);
            $('#SearchTextInHeader').focus()
            return false;
        } 
        else {
            doSearch(searchText, true, false);
            return false;
        }

    });

    $("#search-icon").click(function () {
        var searchText = $("#SearchTextInHeader").val();
        if (searchText == "" || searchText == undefined) {
            $("#search-button, #search-form").toggle();
            return false;
        }
        else {
            doSearch(searchText, false, true);
        }
    });
    $("#SearchText").keypress(function (e) {
        if (e.which == 13) {
            var searchText = $("#SearchText").val();
            $("#SearchTextInHeader").val(searchText);
            if (searchText == "" || searchText == undefined) {
                alert(keywordsNeededPromptText);
                $('#SearchText').focus()
                return false;
            } 
            else {
                doSearch(searchText, true, true);
            }
        }
    });

    $("#SearchTextInHeader").keypress(function (e) {
        if (e.which == 13) {
            var searchText = $("#SearchTextInHeader").val();
            if (searchText == "" || searchText == undefined) {
                alert(keywordsNeededPromptText);
                $('#SearchTextInHeader').focus()
                return false;
            } 
            else {
                e.preventDefault();
                doSearch(searchText, true, true);
            }
        }

    });
    $("#search-button").parent().addClass("navbar-form navbar-right");

    var isFxml = typeof SCBeacon !== "undefined";
    if (!isFxml) {
        var textbox = $("#SearchTextinHeaderV3");
        configureCuratedContent(textbox);

        textbox = $("#SearchText");
        configureCuratedContent(textbox);
    }
    else {
        $(".search-dropdown-curated").hide();
    }

    function configureCuratedContent(textbox) {
        if ((typeof (textbox) != "undefined") &&
            textbox &&
            (textbox.length == 1)) {

            if ((textbox.data("enablebingsuggestions").toLowerCase() == "true") &&
                (textbox.data("bingsuggestionapitoken").length > 0) &&
                (textbox.data("bingcustomconfigurationid").length > 0)) {

                var language = "EN"; // default
                var country = "US"; // default
                var urlParts = window.location.href.split("/");
                if ((textbox.data("enablelocalesensitivityforbingsuggestions").toLowerCase() == "true") && (urlParts.length > 3)) {
                    var urlLocale = urlParts[3].toLowerCase();
                    var localeParts = urlLocale.split("-");
                    if (localeParts.length == 2) {
                        language = localeParts[0].toUpperCase();
                        country = localeParts[1].toUpperCase();
                    }
                }

                textbox.autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            dataType: "json",
                            type: 'Get',
                            data: { q: textbox.val(), customconfig: textbox.data("bingcustomconfigurationid") },
                            headers: { "Ocp-Apim-Subscription-Key": textbox.data("bingsuggestionapitoken") },
                            url: 'https://api.cognitive.microsoft.com/bingcustomsearch/v7.0/suggestions/search',
                            success: function (data) {
                                response($.map(data.suggestionGroups[0].searchSuggestions, function (item) {
                                    return item.displayText;
                                }));
                            },
                            error: function (data) {
                            }
                        });
                    },
                    minLength: 3,
                    open: function () {
                        $(".search-dropdown-curated").hide();

                        if (textbox.closest(".universal-header-v3").length > 0) {
                            var fudge = window.innerWidth < 900 ? 0 : -5; // adjustment to make the width correct... probably needed to handle borders, etc.
                            textbox.autocomplete("widget").outerWidth(textbox.outerWidth() + $("#search-header-icon-v3").outerWidth() + fudge);

                            if (window.innerWidth < 900) {
                                textbox.autocomplete("widget").css("left", textbox.autocomplete("widget").css("left").replace("px", "") - $("#search-header-icon-v3").outerWidth() + "px");
                            }
                        }
                    },
                    close: function () { },
                    focus: function (event, ui) { },
                    select: function (event, ui) {
                        doSearch(ui.item.value, true, true);
                    }
                });
            }

            if ((textbox.data("enablebingsuggestions").toLowerCase() == "true") ||
                (textbox.data("enablerecentsearchlisting").toLowerCase() == "true") ||
                (textbox.data("enabletrending").toLowerCase() == "true")) {

                textbox.attr("autocomplete", "off");

                textbox.on("focus", function () {
                    showCuratedContent(textbox);
                });

                /*textbox.focusout(function (e) {
                    if (($(e.relatedTarget).length == 1) && ($(e.relatedTarget).is(".search-dropdown-curated") || ($(e.relatedTarget).closest(".search-dropdown-curated").length == 1))) {
                        // Do nothing. We are moving focus from the search box into the panel that contains its choices.
                    }
                    else {
                        setTimeout(function () { textbox.prev(".search-dropdown-curated").hide(); }, 200);
                    }
                });*/


                textbox.on("input", function () {
                    if (textbox.val().length < 3) {
                        showCuratedContent(textbox);
                    }
                    else {
                        $(".search-dropdown-curated").hide();
                    }
                });

                $(".search-dropdown-clear-recent").on("click", function () {
                    $.removeCookie(recentSearchesCookieName, { path: '/' });
                    $(".search-dropdown-curated  .search-dropdown-recent ul").html("");
                    $(".search-dropdown-curated  .search-dropdown-recent").hide();
                    if ($(".search-dropdown-curated ul").text().trim().length == 0) {
                        $(".search-dropdown-curated").hide();
                    }
                    else {
                        textbox.focus();
                    }
                });

                $(window).resize(function () {
                    if (textbox.data("enablebingsuggestions").toLowerCase() == "true") {
                        textbox.autocomplete("close");
                    }
                    $(".search-dropdown-curated").hide();
                });
            }
        }
    }

    function autoQuoteSearchText(searchtxt) {
        var txt = searchtxt;
        if (txt == null || txt.length == 0) {
            return txt;
        }
        var autoQuote = $("#hdnEnableAutoQuote").val();
        var bQuote = -1;
        if (autoQuote == 'true') {
            if (txt.indexOf('"') === 0 && txt.lastIndexOf('"') === (txt.length - 1)) {
                bQuote = 0;
            }
            else {
                bQuote = 1;
            }
        }
        if (bQuote === 1) {
            txt = '"' + txt + '"';
        }
        return txt;
    }

    if (!String.prototype.endsWith) {
        String.prototype.endsWith = function (searchString, position) {
            var subjectString = this.toString();
            if (typeof position !== 'number' || !isFinite(position)
                || Math.floor(position) !== position || position > subjectString.length) {
                position = subjectString.length;
            }
            position -= searchString.length;
            var lastIndex = subjectString.indexOf(searchString, position);
            return lastIndex !== -1 && lastIndex === position;
        };
    };

    function doSearch(searchText, encode, quote, addToHistory) {
        var txt = searchText;

        var textbox = $("#SearchTextinHeaderV3");
        var isFxml = typeof SCBeacon !== "undefined";
        var enableRecentSearchListing = !isFxml && (textbox.length == 1) && textbox.data("enablerecentsearchlisting") && (textbox.data("enablerecentsearchlisting").toLowerCase() == "true");

        if (enableRecentSearchListing) {
            if ((typeof (addToHistory) == "undefined") || addToHistory) {
                var inRecentSearches = false;
                var recentSearches = "";
                if (typeof ($.cookie(recentSearchesCookieName)) != "undefined") {
                    recentSearches = $.cookie(recentSearchesCookieName);
                    var recentSearchesArray = recentSearches.split("\n");
                    for (var i = 0; i < recentSearchesArray.length; i++) {
                        if (recentSearchesArray[i].trim().toLowerCase() == txt.toLowerCase()) {
                            inRecentSearches = true;
                            break;
                        }
                    }
                    if (!inRecentSearches && (recentSearchesArray.length > textbox.data("numberofrecentsearchestokeep"))) {
                        recentSearches = recentSearches.substring(0, recentSearches.lastIndexOf("\n"));
                    }
                }

                if (!inRecentSearches) {
                    recentSearches = searchText + "\n" + recentSearches;
                    if (recentSearches.endsWith("\n")) {
                        recentSearches = recentSearches.substr(0, recentSearches.length - 1);
                    }
                    $.cookie(recentSearchesCookieName, recentSearches, { path: '/', expires: 1000 });
                }
            }
        }

        try {
            if ((textbox.length == 1) && (textbox.val().trim().length > 0) && searchText && (typeof (window.data_tracking_teal_do_search) == "function")) {
                window.data_tracking_teal_do_search(textbox.val(), "#SearchTextinHeaderV3");
            }
        }
        catch (teliumException) {
        }

        if ((typeof(quote) != "undefined") && quote) {
            autoQuoteSearchText(searchText);
        }
        if ((typeof(encode) != "undefined") && encode) {
            txt = encodeURI(txt);
        }
        window.location.href = $("#hdnResultsPath").val() + txt;
    }

    function showCuratedContent(textbox) {
        var isFxml = typeof SCBeacon !== "undefined";
        var enableRecentSearchListing = !isFxml && (textbox.length == 1) && textbox.data("enablerecentsearchlisting") && (textbox.data("enablerecentsearchlisting").toLowerCase() == "true");
        var curatedContentWrapper = textbox.prev(".search-dropdown-curated");

        var hasTrendingLinks = ($(".search-dropdown-trending ul li").length > 0);

        if ((curatedContentWrapper.length == 0) || (!enableRecentSearchListing && !hasTrendingLinks)) {
            $(".search-dropdown-curated").hide();
            return;
        }

        if (typeof ($.cookie(recentSearchesCookieName)) != "undefined") {
            var recentSearches = $.cookie(recentSearchesCookieName).split("\n");
            curatedContentWrapper.find(".search-dropdown-recent ul").html("").append(
                $.map(recentSearches, function (recentSearch, i) {
                    return $("<li>").append($("<a class='recent-search' href='#'>").text(recentSearch));
                })
            );
        }

        curatedContentWrapper.off("click").on("click", function (event) { event.stopPropagation(); } );

        curatedContentWrapper.find(".search-dropdown-recent ul li a.recent-search").on("click", function () {
            textbox.val($(this).text());
            doSearch($(this).text(), true, true, false);
        });

        if (textbox.val().length < 3) {
            if (!curatedContentWrapper.parent().hasClass('search-results-search-box-wrapper')) {
                if (window.innerWidth < 900) {
                    curatedContentWrapper.css("width", textbox.outerWidth() + $(".search-dropdown-button").outerWidth() + "px");
                    curatedContentWrapper.css("top", textbox.outerHeight() + "px");
                    curatedContentWrapper.css("left", "-5px");
                }
                else {
                    curatedContentWrapper.css("width", textbox.outerWidth() + $(".search-dropdown-button").outerWidth() - 5 + "px");
                    curatedContentWrapper.css("top", textbox.outerHeight() + "px");
                    curatedContentWrapper.css("left", textbox[0].offsetLeft + "px");
                }
            }

            if (curatedContentWrapper.find("ul").text().trim().length > 0) {
                curatedContentWrapper.show();

                if (curatedContentWrapper.find(".search-dropdown-recent ul").text().trim().length > 0) {
                    curatedContentWrapper.find(".search-dropdown-recent").show();
                }
                else {
                    curatedContentWrapper.find(".search-dropdown-recent").hide();
                }

                if (curatedContentWrapper.find(".search-dropdown-trending ul").text().trim().length > 0) {
                    curatedContentWrapper.find(".search-dropdown-trending").show();
                }
                else {
                    curatedContentWrapper.find(".search-dropdown-trending").hide();
                }
            }
            else {
                $(".search-dropdown-curated").hide();
            }
        }
        else {
            curatedContentWrapper.hide();
        }
    }

    if ($(".search-dropdown-curated .search-dropdown-trending ul li").length == 0)
    {
        $(".search-dropdown-curated .search-dropdown-trending").hide();
    }
});
;
/*

 bootpag - jQuery plugin for dynamic pagination

 Copyright (c) 2015 botmonster@7items.com

 Licensed under the MIT license:
   http://www.opensource.org/licenses/mit-license.php

 Project home:
   http://botmonster.com/jquery-bootpag/

 Version:  1.0.7

*/
(function(h,q){h.fn.bootpag=function(p){function m(c,b){b=parseInt(b,10);var d,e=0==a.maxVisible?1:a.maxVisible,k=1==a.maxVisible?0:1,n=Math.floor((b-1)/e)*e,f=c.find("li");a.page=b=0>b?0:b>a.total?a.total:b;f.removeClass(a.activeClass);d=1>b-1?1:a.leaps&&b-1>=a.maxVisible?Math.floor((b-1)/e)*e:b-1;a.firstLastUse&&f.first().toggleClass(a.disabledClass,1===b);e=f.first();a.firstLastUse&&(e=e.next());e.toggleClass(a.disabledClass,1===b).attr("data-lp",d).find("a").attr("href",g(d));k=1==a.maxVisible?
0:1;d=b+1>a.total?a.total:a.leaps&&b+1<a.total-a.maxVisible?n+a.maxVisible+k:b+1;e=f.last();a.firstLastUse&&(e=e.prev());e.toggleClass(a.disabledClass,b===a.total).attr("data-lp",d).find("a").attr("href",g(d));f.last().toggleClass(a.disabledClass,b===a.total);e=f.filter("[data-lp="+b+"]");k="."+[a.nextClass,a.prevClass,a.firstClass,a.lastClass].join(",.");if(!e.not(k).length){var m=b<=n?-a.maxVisible:0;f.not(k).each(function(b){d=b+1+n+m;h(this).attr("data-lp",d).toggle(d<=a.total).find("a").html(d).attr("href",
g(d))});e=f.filter("[data-lp="+b+"]")}e.not(k).addClass(a.activeClass);l.data("settings",a)}function g(c){return a.href.replace(a.hrefVariable,c)}var l=this,a=h.extend({total:0,page:1,maxVisible:null,leaps:!0,href:"javascript:void(0);",hrefVariable:"{{number}}",next:"&raquo;",prev:"&laquo;",firstLastUse:!1,first:'<span aria-hidden="true">&larr;</span>',last:'<span aria-hidden="true">&rarr;</span>',wrapClass:"pagination",activeClass:"active",disabledClass:"disabled",nextClass:"next",prevClass:"prev",
lastClass:"last",firstClass:"first"},l.data("settings")||{},p||{});if(0>=a.total)return this;h.isNumeric(a.maxVisible)||a.maxVisible||(a.maxVisible=parseInt(a.total,10));l.data("settings",a);return this.each(function(){var c,b,d=h(this);c=['<ul class="',a.wrapClass,' bootpag">'];a.firstLastUse&&(c=c.concat(['<li data-lp="1" class="',a.firstClass,'"><a href="',g(1),'">',a.first,"</a></li>"]));a.prev&&(c=c.concat(['<li data-lp="1" class="',a.prevClass,'"><a href="',g(1),'">',a.prev,"</a></li>"]));for(b=
1;b<=Math.min(a.total,a.maxVisible);b++)c=c.concat(['<li data-lp="',b,'"><a href="',g(b),'">',b,"</a></li>"]);a.next&&(b=a.leaps&&a.total>a.maxVisible?Math.min(a.maxVisible+1,a.total):2,c=c.concat(['<li data-lp="',b,'" class="',a.nextClass,'"><a href="',g(b),'">',a.next,"</a></li>"]));a.firstLastUse&&(c=c.concat(['<li data-lp="',a.total,'" class="last"><a href="',g(a.total),'">',a.last,"</a></li>"]));c.push("</ul>");d.find("ul.bootpag").remove();d.append(c.join(""));c=d.find("ul.bootpag");d.find("li").click(function(){var b=
h(this);if(!b.hasClass(a.disabledClass)&&!b.hasClass(a.activeClass)){var c=parseInt(b.attr("data-lp"),10);l.find("ul.bootpag").each(function(){m(h(this),c)});l.trigger("page",c)}});m(c,a.page)})}})(jQuery,window);;
var CTAGoal = CTAGoal || {};

CTAGoal._isFxm = false;

CTAGoal._registerdValidators = {};

CTAGoal.RegisterValidation = function(source, validationfunction) {
    CTAGoal._registerdValidators[source] = validationfunction;
}

CTAGoal._clickEventValidation = function() { return true; }

$(function () {
    if (typeof SCBeacon !== "undefined") {
        CTAGoal._isFxm = true;
        SCBeacon.push(['ready', CTAGoal.initClickEvent]);
    }
});

$(document).ready(function () {
    CTAGoal.initClickEvent();
    CTAGoal.initCDPClickEvent("CTA_CLICK");
});

CTAGoal.triggerGoal = function(goalId) {
    if (goalId != "" && goalId != undefined) {
        var link = gmositecore._triggerGoalUrl;
        link = link.replace("goalName", goalId);
        $.ajax({
            async: true,
            url: link,
            type: "POST",
            success: function (data) {
            }
        });
    }
}

CTAGoal.initClickEvent = function() {
    $("a[data-goal]").click(function () {
        var source = jq214(this).attr("data-source");

        // In order to mitigate risk we are duplicating the trigger goal call to execute early if validation is not needed
        if (source == undefined) {
            CTAGoal.ClickablePanelClickEvent(this);
            return;
        }

        var validator = CTAGoal._clickEventValidation;

        if (CTAGoal._registerdValidators[source]) {
            validator = CTAGoal._registerdValidators[source];
        }

        if (validator == undefined || validator()) {
            CTAGoal.ClickablePanelClickEvent(this);
        }
    });
}
CTAGoal.ClickablePanelClickEvent = function ($this) {
    if (!gmositecore._triggerGoalUrl) {
        var actionPath = jQuery("#smds-fxm-root").data("triggergoalurl");
        var analyticsHostName = jQuery("#smds-fxm-root").data("hostname");
        var protocol = jQuery("#smds-fxm-root").data("protocol");
        if (!actionPath)
            return;

        gmositecore._triggerGoalUrl = protocol + "://" + analyticsHostName + actionPath;
    }

    if (!CTAGoal._isFxm) {
        var goalId = $($this).data('goal');

        CTAGoal.triggerGoal(goalId);
    } else {
        var goalName = $($this).data('goalname');

        SCBeacon.trackGoal(goalName);
    }
}

CTAGoal.initCDPClickEvent = function () {
    $("a[data-goal]").click(function () {
        var goalname = jq214(this).data("goalname");
       

            var eventData = {
                channel: "WEB",
                language: window.location.pathname.split("/")[1].split("-")[0].toUpperCase(),
                browser_id: engage.getBrowserId(),
                pos: $("#hdnPOS").val(),
                page: window.location.href,

            };
            const extensionData = {

                dataGoalName: goalname

            }
            engage.event("CTA_CLICK", eventData, extensionData);
       

    });
};
/*! jCarousel - v0.3.4 - 2015-09-23
* http://sorgalla.com/jcarousel/
* Copyright (c) 2006-2015 Jan Sorgalla; Licensed MIT */
!function(a){"use strict";var b=a.jCarousel={};b.version="0.3.4";var c=/^([+\-]=)?(.+)$/;b.parseTarget=function(a){var b=!1,d="object"!=typeof a?c.exec(a):null;return d?(a=parseInt(d[2],10)||0,d[1]&&(b=!0,"-="===d[1]&&(a*=-1))):"object"!=typeof a&&(a=parseInt(a,10)||0),{target:a,relative:b}},b.detectCarousel=function(a){for(var b;a.length>0;){if(b=a.filter("[data-jcarousel]"),b.length>0)return b;if(b=a.find("[data-jcarousel]"),b.length>0)return b;a=a.parent()}return null},b.base=function(c){return{version:b.version,_options:{},_element:null,_carousel:null,_init:a.noop,_create:a.noop,_destroy:a.noop,_reload:a.noop,create:function(){return this._element.attr("data-"+c.toLowerCase(),!0).data(c,this),!1===this._trigger("create")?this:(this._create(),this._trigger("createend"),this)},destroy:function(){return!1===this._trigger("destroy")?this:(this._destroy(),this._trigger("destroyend"),this._element.removeData(c).removeAttr("data-"+c.toLowerCase()),this)},reload:function(a){return!1===this._trigger("reload")?this:(a&&this.options(a),this._reload(),this._trigger("reloadend"),this)},element:function(){return this._element},options:function(b,c){if(0===arguments.length)return a.extend({},this._options);if("string"==typeof b){if("undefined"==typeof c)return"undefined"==typeof this._options[b]?null:this._options[b];this._options[b]=c}else this._options=a.extend({},this._options,b);return this},carousel:function(){return this._carousel||(this._carousel=b.detectCarousel(this.options("carousel")||this._element),this._carousel||a.error('Could not detect carousel for plugin "'+c+'"')),this._carousel},_trigger:function(b,d,e){var f,g=!1;return e=[this].concat(e||[]),(d||this._element).each(function(){f=a.Event((c+":"+b).toLowerCase()),a(this).trigger(f,e),f.isDefaultPrevented()&&(g=!0)}),!g}}},b.plugin=function(c,d){var e=a[c]=function(b,c){this._element=a(b),this.options(c),this._init(),this.create()};return e.fn=e.prototype=a.extend({},b.base(c),d),a.fn[c]=function(b){var d=Array.prototype.slice.call(arguments,1),f=this;return this.each("string"==typeof b?function(){var e=a(this).data(c);if(!e)return a.error("Cannot call methods on "+c+' prior to initialization; attempted to call method "'+b+'"');if(!a.isFunction(e[b])||"_"===b.charAt(0))return a.error('No such method "'+b+'" for '+c+" instance");var g=e[b].apply(e,d);return g!==e&&"undefined"!=typeof g?(f=g,!1):void 0}:function(){var d=a(this).data(c);d instanceof e?d.reload(b):new e(this,b)}),f},e}}(jQuery),function(a,b){"use strict";var c=function(a){return parseFloat(a)||0};a.jCarousel.plugin("jcarousel",{animating:!1,tail:0,inTail:!1,resizeTimer:null,lt:null,vertical:!1,rtl:!1,circular:!1,underflow:!1,relative:!1,_options:{list:function(){return this.element().children().eq(0)},items:function(){return this.list().children()},animation:400,transitions:!1,wrap:null,vertical:null,rtl:null,center:!1},_list:null,_items:null,_target:a(),_first:a(),_last:a(),_visible:a(),_fullyvisible:a(),_init:function(){var a=this;return this.onWindowResize=function(){a.resizeTimer&&clearTimeout(a.resizeTimer),a.resizeTimer=setTimeout(function(){a.reload()},100)},this},_create:function(){this._reload(),a(b).on("resize.jcarousel",this.onWindowResize)},_destroy:function(){a(b).off("resize.jcarousel",this.onWindowResize)},_reload:function(){this.vertical=this.options("vertical"),null==this.vertical&&(this.vertical=this.list().height()>this.list().width()),this.rtl=this.options("rtl"),null==this.rtl&&(this.rtl=function(b){if("rtl"===(""+b.attr("dir")).toLowerCase())return!0;var c=!1;return b.parents("[dir]").each(function(){return/rtl/i.test(a(this).attr("dir"))?(c=!0,!1):void 0}),c}(this._element)),this.lt=this.vertical?"top":"left",this.relative="relative"===this.list().css("position"),this._list=null,this._items=null;var b=this.index(this._target)>=0?this._target:this.closest();this.circular="circular"===this.options("wrap"),this.underflow=!1;var c={left:0,top:0};return b.length>0&&(this._prepare(b),this.list().find("[data-jcarousel-clone]").remove(),this._items=null,this.underflow=this._fullyvisible.length>=this.items().length,this.circular=this.circular&&!this.underflow,c[this.lt]=this._position(b)+"px"),this.move(c),this},list:function(){if(null===this._list){var b=this.options("list");this._list=a.isFunction(b)?b.call(this):this._element.find(b)}return this._list},items:function(){if(null===this._items){var b=this.options("items");this._items=(a.isFunction(b)?b.call(this):this.list().find(b)).not("[data-jcarousel-clone]")}return this._items},index:function(a){return this.items().index(a)},closest:function(){var b,d=this,e=this.list().position()[this.lt],f=a(),g=!1,h=this.vertical?"bottom":this.rtl&&!this.relative?"left":"right";return this.rtl&&this.relative&&!this.vertical&&(e+=this.list().width()-this.clipping()),this.items().each(function(){if(f=a(this),g)return!1;var i=d.dimension(f);if(e+=i,e>=0){if(b=i-c(f.css("margin-"+h)),!(Math.abs(e)-i+b/2<=0))return!1;g=!0}}),f},target:function(){return this._target},first:function(){return this._first},last:function(){return this._last},visible:function(){return this._visible},fullyvisible:function(){return this._fullyvisible},hasNext:function(){if(!1===this._trigger("hasnext"))return!0;var a=this.options("wrap"),b=this.items().length-1,c=this.options("center")?this._target:this._last;return b>=0&&!this.underflow&&(a&&"first"!==a||this.index(c)<b||this.tail&&!this.inTail)?!0:!1},hasPrev:function(){if(!1===this._trigger("hasprev"))return!0;var a=this.options("wrap");return this.items().length>0&&!this.underflow&&(a&&"last"!==a||this.index(this._first)>0||this.tail&&this.inTail)?!0:!1},clipping:function(){return this._element["inner"+(this.vertical?"Height":"Width")]()},dimension:function(a){return a["outer"+(this.vertical?"Height":"Width")](!0)},scroll:function(b,c,d){if(this.animating)return this;if(!1===this._trigger("scroll",null,[b,c]))return this;a.isFunction(c)&&(d=c,c=!0);var e=a.jCarousel.parseTarget(b);if(e.relative){var f,g,h,i,j,k,l,m,n=this.items().length-1,o=Math.abs(e.target),p=this.options("wrap");if(e.target>0){var q=this.index(this._last);if(q>=n&&this.tail)this.inTail?"both"===p||"last"===p?this._scroll(0,c,d):a.isFunction(d)&&d.call(this,!1):this._scrollTail(c,d);else if(f=this.index(this._target),this.underflow&&f===n&&("circular"===p||"both"===p||"last"===p)||!this.underflow&&q===n&&("both"===p||"last"===p))this._scroll(0,c,d);else if(h=f+o,this.circular&&h>n){for(m=n,j=this.items().get(-1);m++<h;)j=this.items().eq(0),k=this._visible.index(j)>=0,k&&j.after(j.clone(!0).attr("data-jcarousel-clone",!0)),this.list().append(j),k||(l={},l[this.lt]=this.dimension(j),this.moveBy(l)),this._items=null;this._scroll(j,c,d)}else this._scroll(Math.min(h,n),c,d)}else if(this.inTail)this._scroll(Math.max(this.index(this._first)-o+1,0),c,d);else if(g=this.index(this._first),f=this.index(this._target),i=this.underflow?f:g,h=i-o,0>=i&&(this.underflow&&"circular"===p||"both"===p||"first"===p))this._scroll(n,c,d);else if(this.circular&&0>h){for(m=h,j=this.items().get(0);m++<0;){j=this.items().eq(-1),k=this._visible.index(j)>=0,k&&j.after(j.clone(!0).attr("data-jcarousel-clone",!0)),this.list().prepend(j),this._items=null;var r=this.dimension(j);l={},l[this.lt]=-r,this.moveBy(l)}this._scroll(j,c,d)}else this._scroll(Math.max(h,0),c,d)}else this._scroll(e.target,c,d);return this._trigger("scrollend"),this},moveBy:function(a,b){var d=this.list().position(),e=1,f=0;return this.rtl&&!this.vertical&&(e=-1,this.relative&&(f=this.list().width()-this.clipping())),a.left&&(a.left=d.left+f+c(a.left)*e+"px"),a.top&&(a.top=d.top+f+c(a.top)*e+"px"),this.move(a,b)},move:function(b,c){c=c||{};var d=this.options("transitions"),e=!!d,f=!!d.transforms,g=!!d.transforms3d,h=c.duration||0,i=this.list();if(!e&&h>0)return void i.animate(b,c);var j=c.complete||a.noop,k={};if(e){var l={transitionDuration:i.css("transitionDuration"),transitionTimingFunction:i.css("transitionTimingFunction"),transitionProperty:i.css("transitionProperty")},m=j;j=function(){a(this).css(l),m.call(this)},k={transitionDuration:(h>0?h/1e3:0)+"s",transitionTimingFunction:d.easing||c.easing,transitionProperty:h>0?function(){return f||g?"all":b.left?"left":"top"}():"none",transform:"none"}}g?k.transform="translate3d("+(b.left||0)+","+(b.top||0)+",0)":f?k.transform="translate("+(b.left||0)+","+(b.top||0)+")":a.extend(k,b),e&&h>0&&i.one("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd",j),i.css(k),0>=h&&i.each(function(){j.call(this)})},_scroll:function(b,c,d){if(this.animating)return a.isFunction(d)&&d.call(this,!1),this;if("object"!=typeof b?b=this.items().eq(b):"undefined"==typeof b.jquery&&(b=a(b)),0===b.length)return a.isFunction(d)&&d.call(this,!1),this;this.inTail=!1,this._prepare(b);var e=this._position(b),f=this.list().position()[this.lt];if(e===f)return a.isFunction(d)&&d.call(this,!1),this;var g={};return g[this.lt]=e+"px",this._animate(g,c,d),this},_scrollTail:function(b,c){if(this.animating||!this.tail)return a.isFunction(c)&&c.call(this,!1),this;var d=this.list().position()[this.lt];this.rtl&&this.relative&&!this.vertical&&(d+=this.list().width()-this.clipping()),this.rtl&&!this.vertical?d+=this.tail:d-=this.tail,this.inTail=!0;var e={};return e[this.lt]=d+"px",this._update({target:this._target.next(),fullyvisible:this._fullyvisible.slice(1).add(this._visible.last())}),this._animate(e,b,c),this},_animate:function(b,c,d){if(d=d||a.noop,!1===this._trigger("animate"))return d.call(this,!1),this;this.animating=!0;var e=this.options("animation"),f=a.proxy(function(){this.animating=!1;var a=this.list().find("[data-jcarousel-clone]");a.length>0&&(a.remove(),this._reload()),this._trigger("animateend"),d.call(this,!0)},this),g="object"==typeof e?a.extend({},e):{duration:e},h=g.complete||a.noop;return c===!1?g.duration=0:"undefined"!=typeof a.fx.speeds[g.duration]&&(g.duration=a.fx.speeds[g.duration]),g.complete=function(){f(),h.call(this)},this.move(b,g),this},_prepare:function(b){var d,e,f,g,h=this.index(b),i=h,j=this.dimension(b),k=this.clipping(),l=this.vertical?"bottom":this.rtl?"left":"right",m=this.options("center"),n={target:b,first:b,last:b,visible:b,fullyvisible:k>=j?b:a()};if(m&&(j/=2,k/=2),k>j)for(;;){if(d=this.items().eq(++i),0===d.length){if(!this.circular)break;if(d=this.items().eq(0),b.get(0)===d.get(0))break;if(e=this._visible.index(d)>=0,e&&d.after(d.clone(!0).attr("data-jcarousel-clone",!0)),this.list().append(d),!e){var o={};o[this.lt]=this.dimension(d),this.moveBy(o)}this._items=null}if(g=this.dimension(d),0===g)break;if(j+=g,n.last=d,n.visible=n.visible.add(d),f=c(d.css("margin-"+l)),k>=j-f&&(n.fullyvisible=n.fullyvisible.add(d)),j>=k)break}if(!this.circular&&!m&&k>j)for(i=h;;){if(--i<0)break;if(d=this.items().eq(i),0===d.length)break;if(g=this.dimension(d),0===g)break;if(j+=g,n.first=d,n.visible=n.visible.add(d),f=c(d.css("margin-"+l)),k>=j-f&&(n.fullyvisible=n.fullyvisible.add(d)),j>=k)break}return this._update(n),this.tail=0,m||"circular"===this.options("wrap")||"custom"===this.options("wrap")||this.index(n.last)!==this.items().length-1||(j-=c(n.last.css("margin-"+l)),j>k&&(this.tail=j-k)),this},_position:function(a){var b=this._first,c=b.position()[this.lt],d=this.options("center"),e=d?this.clipping()/2-this.dimension(b)/2:0;return this.rtl&&!this.vertical?(c-=this.relative?this.list().width()-this.dimension(b):this.clipping()-this.dimension(b),c+=e):c-=e,!d&&(this.index(a)>this.index(b)||this.inTail)&&this.tail?(c=this.rtl&&!this.vertical?c-this.tail:c+this.tail,this.inTail=!0):this.inTail=!1,-c},_update:function(b){var c,d=this,e={target:this._target,first:this._first,last:this._last,visible:this._visible,fullyvisible:this._fullyvisible},f=this.index(b.first||e.first)<this.index(e.first),g=function(c){var g=[],h=[];b[c].each(function(){e[c].index(this)<0&&g.push(this)}),e[c].each(function(){b[c].index(this)<0&&h.push(this)}),f?g=g.reverse():h=h.reverse(),d._trigger(c+"in",a(g)),d._trigger(c+"out",a(h)),d["_"+c]=b[c]};for(c in b)g(c);return this}})}(jQuery,window),function(a){"use strict";a.jcarousel.fn.scrollIntoView=function(b,c,d){var e,f=a.jCarousel.parseTarget(b),g=this.index(this._fullyvisible.first()),h=this.index(this._fullyvisible.last());if(e=f.relative?f.target<0?Math.max(0,g+f.target):h+f.target:"object"!=typeof f.target?f.target:this.index(f.target),g>e)return this.scroll(e,c,d);if(e>=g&&h>=e)return a.isFunction(d)&&d.call(this,!1),this;for(var i,j=this.items(),k=this.clipping(),l=this.vertical?"bottom":this.rtl?"left":"right",m=0;;){if(i=j.eq(e),0===i.length)break;if(m+=this.dimension(i),m>=k){var n=parseFloat(i.css("margin-"+l))||0;m-n!==k&&e++;break}if(0>=e)break;e--}return this.scroll(e,c,d)}}(jQuery),function(a){"use strict";a.jCarousel.plugin("jcarouselControl",{_options:{target:"+=1",event:"click",method:"scroll"},_active:null,_init:function(){this.onDestroy=a.proxy(function(){this._destroy(),this.carousel().one("jcarousel:createend",a.proxy(this._create,this))},this),this.onReload=a.proxy(this._reload,this),this.onEvent=a.proxy(function(b){b.preventDefault();var c=this.options("method");a.isFunction(c)?c.call(this):this.carousel().jcarousel(this.options("method"),this.options("target"))},this)},_create:function(){this.carousel().one("jcarousel:destroy",this.onDestroy).on("jcarousel:reloadend jcarousel:scrollend",this.onReload),this._element.on(this.options("event")+".jcarouselcontrol",this.onEvent),this._reload()},_destroy:function(){this._element.off(".jcarouselcontrol",this.onEvent),this.carousel().off("jcarousel:destroy",this.onDestroy).off("jcarousel:reloadend jcarousel:scrollend",this.onReload)},_reload:function(){var b,c=a.jCarousel.parseTarget(this.options("target")),d=this.carousel();if(c.relative)b=d.jcarousel(c.target>0?"hasNext":"hasPrev");else{var e="object"!=typeof c.target?d.jcarousel("items").eq(c.target):c.target;b=d.jcarousel("target").index(e)>=0}return this._active!==b&&(this._trigger(b?"active":"inactive"),this._active=b),this}})}(jQuery),function(a){"use strict";a.jCarousel.plugin("jcarouselPagination",{_options:{perPage:null,item:function(a){return'<a href="#'+a+'">'+a+"</a>"},event:"click",method:"scroll"},_carouselItems:null,_pages:{},_items:{},_currentPage:null,_init:function(){this.onDestroy=a.proxy(function(){this._destroy(),this.carousel().one("jcarousel:createend",a.proxy(this._create,this))},this),this.onReload=a.proxy(this._reload,this),this.onScroll=a.proxy(this._update,this)},_create:function(){this.carousel().one("jcarousel:destroy",this.onDestroy).on("jcarousel:reloadend",this.onReload).on("jcarousel:scrollend",this.onScroll),this._reload()},_destroy:function(){this._clear(),this.carousel().off("jcarousel:destroy",this.onDestroy).off("jcarousel:reloadend",this.onReload).off("jcarousel:scrollend",this.onScroll),this._carouselItems=null},_reload:function(){var b=this.options("perPage");if(this._pages={},this._items={},a.isFunction(b)&&(b=b.call(this)),null==b)this._pages=this._calculatePages();else for(var c,d=parseInt(b,10)||0,e=this._getCarouselItems(),f=1,g=0;;){if(c=e.eq(g++),0===c.length)break;this._pages[f]=this._pages[f]?this._pages[f].add(c):c,g%d===0&&f++}this._clear();var h=this,i=this.carousel().data("jcarousel"),j=this._element,k=this.options("item"),l=this._getCarouselItems().length;a.each(this._pages,function(b,c){var d=h._items[b]=a(k.call(h,b,c));d.on(h.options("event")+".jcarouselpagination",a.proxy(function(){var a=c.eq(0);if(i.circular){var d=i.index(i.target()),e=i.index(a);parseFloat(b)>parseFloat(h._currentPage)?d>e&&(a="+="+(l-d+e)):e>d&&(a="-="+(d+(l-e)))}i[this.options("method")](a)},h)),j.append(d)}),this._update()},_update:function(){var b,c=this.carousel().jcarousel("target");a.each(this._pages,function(a,d){return d.each(function(){return c.is(this)?(b=a,!1):void 0}),b?!1:void 0}),this._currentPage!==b&&(this._trigger("inactive",this._items[this._currentPage]),this._trigger("active",this._items[b])),this._currentPage=b},items:function(){return this._items},reloadCarouselItems:function(){return this._carouselItems=null,this},_clear:function(){this._element.empty(),this._currentPage=null},_calculatePages:function(){for(var a,b,c=this.carousel().data("jcarousel"),d=this._getCarouselItems(),e=c.clipping(),f=0,g=0,h=1,i={};;){if(a=d.eq(g++),0===a.length)break;b=c.dimension(a),f+b>e&&(h++,f=0),f+=b,i[h]=i[h]?i[h].add(a):a}return i},_getCarouselItems:function(){return this._carouselItems||(this._carouselItems=this.carousel().jcarousel("items")),this._carouselItems}})}(jQuery),function(a,b){"use strict";var c,d,e={hidden:"visibilitychange",mozHidden:"mozvisibilitychange",msHidden:"msvisibilitychange",webkitHidden:"webkitvisibilitychange"};a.each(e,function(a,e){return"undefined"!=typeof b[a]?(c=a,d=e,!1):void 0}),a.jCarousel.plugin("jcarouselAutoscroll",{_options:{target:"+=1",interval:3e3,autostart:!0},_timer:null,_started:!1,_init:function(){this.onDestroy=a.proxy(function(){this._destroy(),this.carousel().one("jcarousel:createend",a.proxy(this._create,this))},this),this.onAnimateEnd=a.proxy(this._start,this),this.onVisibilityChange=a.proxy(function(){b[c]?this._stop():this._start()},this)},_create:function(){this.carousel().one("jcarousel:destroy",this.onDestroy),a(b).on(d,this.onVisibilityChange),this.options("autostart")&&this.start()},_destroy:function(){this._stop(),this.carousel().off("jcarousel:destroy",this.onDestroy),a(b).off(d,this.onVisibilityChange)},_start:function(){return this._stop(),this._started?(this.carousel().one("jcarousel:animateend",this.onAnimateEnd),this._timer=setTimeout(a.proxy(function(){this.carousel().jcarousel("scroll",this.options("target"))},this),this.options("interval")),this):void 0},_stop:function(){return this._timer&&(this._timer=clearTimeout(this._timer)),this.carousel().off("jcarousel:animateend",this.onAnimateEnd),this},start:function(){return this._started=!0,this._start(),this},stop:function(){return this._started=!1,this._stop(),this}})}(jQuery,document);;
//! moment.js
//! version : 2.8.4
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
(function(a){function b(a,b,c){switch(arguments.length){case 2:return null!=a?a:b;case 3:return null!=a?a:null!=b?b:c;default:throw new Error("Implement me")}}function c(a,b){return zb.call(a,b)}function d(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function e(a){tb.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+a)}function f(a,b){var c=!0;return m(function(){return c&&(e(a),c=!1),b.apply(this,arguments)},b)}function g(a,b){qc[a]||(e(b),qc[a]=!0)}function h(a,b){return function(c){return p(a.call(this,c),b)}}function i(a,b){return function(c){return this.localeData().ordinal(a.call(this,c),b)}}function j(){}function k(a,b){b!==!1&&F(a),n(this,a),this._d=new Date(+a._d)}function l(a){var b=y(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._locale=tb.localeData(),this._bubble()}function m(a,b){for(var d in b)c(b,d)&&(a[d]=b[d]);return c(b,"toString")&&(a.toString=b.toString),c(b,"valueOf")&&(a.valueOf=b.valueOf),a}function n(a,b){var c,d,e;if("undefined"!=typeof b._isAMomentObject&&(a._isAMomentObject=b._isAMomentObject),"undefined"!=typeof b._i&&(a._i=b._i),"undefined"!=typeof b._f&&(a._f=b._f),"undefined"!=typeof b._l&&(a._l=b._l),"undefined"!=typeof b._strict&&(a._strict=b._strict),"undefined"!=typeof b._tzm&&(a._tzm=b._tzm),"undefined"!=typeof b._isUTC&&(a._isUTC=b._isUTC),"undefined"!=typeof b._offset&&(a._offset=b._offset),"undefined"!=typeof b._pf&&(a._pf=b._pf),"undefined"!=typeof b._locale&&(a._locale=b._locale),Ib.length>0)for(c in Ib)d=Ib[c],e=b[d],"undefined"!=typeof e&&(a[d]=e);return a}function o(a){return 0>a?Math.ceil(a):Math.floor(a)}function p(a,b,c){for(var d=""+Math.abs(a),e=a>=0;d.length<b;)d="0"+d;return(e?c?"+":"":"-")+d}function q(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,"M").isAfter(b)&&--c.months,c.milliseconds=+b-+a.clone().add(c.months,"M"),c}function r(a,b){var c;return b=K(b,a),a.isBefore(b)?c=q(a,b):(c=q(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c}function s(a,b){return function(c,d){var e,f;return null===d||isNaN(+d)||(g(b,"moment()."+b+"(period, number) is deprecated. Please use moment()."+b+"(number, period)."),f=c,c=d,d=f),c="string"==typeof c?+c:c,e=tb.duration(c,d),t(this,e,a),this}}function t(a,b,c,d){var e=b._milliseconds,f=b._days,g=b._months;d=null==d?!0:d,e&&a._d.setTime(+a._d+e*c),f&&nb(a,"Date",mb(a,"Date")+f*c),g&&lb(a,mb(a,"Month")+g*c),d&&tb.updateOffset(a,f||g)}function u(a){return"[object Array]"===Object.prototype.toString.call(a)}function v(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function w(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&A(a[d])!==A(b[d]))&&g++;return g+f}function x(a){if(a){var b=a.toLowerCase().replace(/(.)s$/,"$1");a=jc[a]||kc[b]||b}return a}function y(a){var b,d,e={};for(d in a)c(a,d)&&(b=x(d),b&&(e[b]=a[d]));return e}function z(b){var c,d;if(0===b.indexOf("week"))c=7,d="day";else{if(0!==b.indexOf("month"))return;c=12,d="month"}tb[b]=function(e,f){var g,h,i=tb._locale[b],j=[];if("number"==typeof e&&(f=e,e=a),h=function(a){var b=tb().utc().set(d,a);return i.call(tb._locale,b,e||"")},null!=f)return h(f);for(g=0;c>g;g++)j.push(h(g));return j}}function A(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=b>=0?Math.floor(b):Math.ceil(b)),c}function B(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function C(a,b,c){return hb(tb([a,11,31+b-c]),b,c).week}function D(a){return E(a)?366:365}function E(a){return a%4===0&&a%100!==0||a%400===0}function F(a){var b;a._a&&-2===a._pf.overflow&&(b=a._a[Bb]<0||a._a[Bb]>11?Bb:a._a[Cb]<1||a._a[Cb]>B(a._a[Ab],a._a[Bb])?Cb:a._a[Db]<0||a._a[Db]>24||24===a._a[Db]&&(0!==a._a[Eb]||0!==a._a[Fb]||0!==a._a[Gb])?Db:a._a[Eb]<0||a._a[Eb]>59?Eb:a._a[Fb]<0||a._a[Fb]>59?Fb:a._a[Gb]<0||a._a[Gb]>999?Gb:-1,a._pf._overflowDayOfYear&&(Ab>b||b>Cb)&&(b=Cb),a._pf.overflow=b)}function G(b){return null==b._isValid&&(b._isValid=!isNaN(b._d.getTime())&&b._pf.overflow<0&&!b._pf.empty&&!b._pf.invalidMonth&&!b._pf.nullInput&&!b._pf.invalidFormat&&!b._pf.userInvalidated,b._strict&&(b._isValid=b._isValid&&0===b._pf.charsLeftOver&&0===b._pf.unusedTokens.length&&b._pf.bigHour===a)),b._isValid}function H(a){return a?a.toLowerCase().replace("_","-"):a}function I(a){for(var b,c,d,e,f=0;f<a.length;){for(e=H(a[f]).split("-"),b=e.length,c=H(a[f+1]),c=c?c.split("-"):null;b>0;){if(d=J(e.slice(0,b).join("-")))return d;if(c&&c.length>=b&&w(e,c,!0)>=b-1)break;b--}f++}return null}function J(a){var b=null;if(!Hb[a]&&Jb)try{b=tb.locale(),require("./locale/"+a),tb.locale(b)}catch(c){}return Hb[a]}function K(a,b){var c,d;return b._isUTC?(c=b.clone(),d=(tb.isMoment(a)||v(a)?+a:+tb(a))-+c,c._d.setTime(+c._d+d),tb.updateOffset(c,!1),c):tb(a).local()}function L(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function M(a){var b,c,d=a.match(Nb);for(b=0,c=d.length;c>b;b++)d[b]=pc[d[b]]?pc[d[b]]:L(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function N(a,b){return a.isValid()?(b=O(b,a.localeData()),lc[b]||(lc[b]=M(b)),lc[b](a)):a.localeData().invalidDate()}function O(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Ob.lastIndex=0;d>=0&&Ob.test(a);)a=a.replace(Ob,c),Ob.lastIndex=0,d-=1;return a}function P(a,b){var c,d=b._strict;switch(a){case"Q":return Zb;case"DDDD":return _b;case"YYYY":case"GGGG":case"gggg":return d?ac:Rb;case"Y":case"G":case"g":return cc;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return d?bc:Sb;case"S":if(d)return Zb;case"SS":if(d)return $b;case"SSS":if(d)return _b;case"DDD":return Qb;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return Ub;case"a":case"A":return b._locale._meridiemParse;case"x":return Xb;case"X":return Yb;case"Z":case"ZZ":return Vb;case"T":return Wb;case"SSSS":return Tb;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return d?$b:Pb;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return Pb;case"Do":return d?b._locale._ordinalParse:b._locale._ordinalParseLenient;default:return c=new RegExp(Y(X(a.replace("\\","")),"i"))}}function Q(a){a=a||"";var b=a.match(Vb)||[],c=b[b.length-1]||[],d=(c+"").match(hc)||["-",0,0],e=+(60*d[1])+A(d[2]);return"+"===d[0]?-e:e}function R(a,b,c){var d,e=c._a;switch(a){case"Q":null!=b&&(e[Bb]=3*(A(b)-1));break;case"M":case"MM":null!=b&&(e[Bb]=A(b)-1);break;case"MMM":case"MMMM":d=c._locale.monthsParse(b,a,c._strict),null!=d?e[Bb]=d:c._pf.invalidMonth=b;break;case"D":case"DD":null!=b&&(e[Cb]=A(b));break;case"Do":null!=b&&(e[Cb]=A(parseInt(b.match(/\d{1,2}/)[0],10)));break;case"DDD":case"DDDD":null!=b&&(c._dayOfYear=A(b));break;case"YY":e[Ab]=tb.parseTwoDigitYear(b);break;case"YYYY":case"YYYYY":case"YYYYYY":e[Ab]=A(b);break;case"a":case"A":c._isPm=c._locale.isPM(b);break;case"h":case"hh":c._pf.bigHour=!0;case"H":case"HH":e[Db]=A(b);break;case"m":case"mm":e[Eb]=A(b);break;case"s":case"ss":e[Fb]=A(b);break;case"S":case"SS":case"SSS":case"SSSS":e[Gb]=A(1e3*("0."+b));break;case"x":c._d=new Date(A(b));break;case"X":c._d=new Date(1e3*parseFloat(b));break;case"Z":case"ZZ":c._useUTC=!0,c._tzm=Q(b);break;case"dd":case"ddd":case"dddd":d=c._locale.weekdaysParse(b),null!=d?(c._w=c._w||{},c._w.d=d):c._pf.invalidWeekday=b;break;case"w":case"ww":case"W":case"WW":case"d":case"e":case"E":a=a.substr(0,1);case"gggg":case"GGGG":case"GGGGG":a=a.substr(0,2),b&&(c._w=c._w||{},c._w[a]=A(b));break;case"gg":case"GG":c._w=c._w||{},c._w[a]=tb.parseTwoDigitYear(b)}}function S(a){var c,d,e,f,g,h,i;c=a._w,null!=c.GG||null!=c.W||null!=c.E?(g=1,h=4,d=b(c.GG,a._a[Ab],hb(tb(),1,4).year),e=b(c.W,1),f=b(c.E,1)):(g=a._locale._week.dow,h=a._locale._week.doy,d=b(c.gg,a._a[Ab],hb(tb(),g,h).year),e=b(c.w,1),null!=c.d?(f=c.d,g>f&&++e):f=null!=c.e?c.e+g:g),i=ib(d,e,f,h,g),a._a[Ab]=i.year,a._dayOfYear=i.dayOfYear}function T(a){var c,d,e,f,g=[];if(!a._d){for(e=V(a),a._w&&null==a._a[Cb]&&null==a._a[Bb]&&S(a),a._dayOfYear&&(f=b(a._a[Ab],e[Ab]),a._dayOfYear>D(f)&&(a._pf._overflowDayOfYear=!0),d=db(f,0,a._dayOfYear),a._a[Bb]=d.getUTCMonth(),a._a[Cb]=d.getUTCDate()),c=0;3>c&&null==a._a[c];++c)a._a[c]=g[c]=e[c];for(;7>c;c++)a._a[c]=g[c]=null==a._a[c]?2===c?1:0:a._a[c];24===a._a[Db]&&0===a._a[Eb]&&0===a._a[Fb]&&0===a._a[Gb]&&(a._nextDay=!0,a._a[Db]=0),a._d=(a._useUTC?db:cb).apply(null,g),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()+a._tzm),a._nextDay&&(a._a[Db]=24)}}function U(a){var b;a._d||(b=y(a._i),a._a=[b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],T(a))}function V(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function W(b){if(b._f===tb.ISO_8601)return void $(b);b._a=[],b._pf.empty=!0;var c,d,e,f,g,h=""+b._i,i=h.length,j=0;for(e=O(b._f,b._locale).match(Nb)||[],c=0;c<e.length;c++)f=e[c],d=(h.match(P(f,b))||[])[0],d&&(g=h.substr(0,h.indexOf(d)),g.length>0&&b._pf.unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),j+=d.length),pc[f]?(d?b._pf.empty=!1:b._pf.unusedTokens.push(f),R(f,d,b)):b._strict&&!d&&b._pf.unusedTokens.push(f);b._pf.charsLeftOver=i-j,h.length>0&&b._pf.unusedInput.push(h),b._pf.bigHour===!0&&b._a[Db]<=12&&(b._pf.bigHour=a),b._isPm&&b._a[Db]<12&&(b._a[Db]+=12),b._isPm===!1&&12===b._a[Db]&&(b._a[Db]=0),T(b),F(b)}function X(a){return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e})}function Y(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function Z(a){var b,c,e,f,g;if(0===a._f.length)return a._pf.invalidFormat=!0,void(a._d=new Date(0/0));for(f=0;f<a._f.length;f++)g=0,b=n({},a),null!=a._useUTC&&(b._useUTC=a._useUTC),b._pf=d(),b._f=a._f[f],W(b),G(b)&&(g+=b._pf.charsLeftOver,g+=10*b._pf.unusedTokens.length,b._pf.score=g,(null==e||e>g)&&(e=g,c=b));m(a,c||b)}function $(a){var b,c,d=a._i,e=dc.exec(d);if(e){for(a._pf.iso=!0,b=0,c=fc.length;c>b;b++)if(fc[b][1].exec(d)){a._f=fc[b][0]+(e[6]||" ");break}for(b=0,c=gc.length;c>b;b++)if(gc[b][1].exec(d)){a._f+=gc[b][0];break}d.match(Vb)&&(a._f+="Z"),W(a)}else a._isValid=!1}function _(a){$(a),a._isValid===!1&&(delete a._isValid,tb.createFromInputFallback(a))}function ab(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function bb(b){var c,d=b._i;d===a?b._d=new Date:v(d)?b._d=new Date(+d):null!==(c=Kb.exec(d))?b._d=new Date(+c[1]):"string"==typeof d?_(b):u(d)?(b._a=ab(d.slice(0),function(a){return parseInt(a,10)}),T(b)):"object"==typeof d?U(b):"number"==typeof d?b._d=new Date(d):tb.createFromInputFallback(b)}function cb(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function db(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function eb(a,b){if("string"==typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!=typeof a)return null}else a=parseInt(a,10);return a}function fb(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function gb(a,b,c){var d=tb.duration(a).abs(),e=yb(d.as("s")),f=yb(d.as("m")),g=yb(d.as("h")),h=yb(d.as("d")),i=yb(d.as("M")),j=yb(d.as("y")),k=e<mc.s&&["s",e]||1===f&&["m"]||f<mc.m&&["mm",f]||1===g&&["h"]||g<mc.h&&["hh",g]||1===h&&["d"]||h<mc.d&&["dd",h]||1===i&&["M"]||i<mc.M&&["MM",i]||1===j&&["y"]||["yy",j];return k[2]=b,k[3]=+a>0,k[4]=c,fb.apply({},k)}function hb(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=tb(a).add(f,"d"),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function ib(a,b,c,d,e){var f,g,h=db(a,0,1).getUTCDay();return h=0===h?7:h,c=null!=c?c:e,f=e-h+(h>d?7:0)-(e>h?7:0),g=7*(b-1)+(c-e)+f+1,{year:g>0?a:a-1,dayOfYear:g>0?g:D(a-1)+g}}function jb(b){var c,d=b._i,e=b._f;return b._locale=b._locale||tb.localeData(b._l),null===d||e===a&&""===d?tb.invalid({nullInput:!0}):("string"==typeof d&&(b._i=d=b._locale.preparse(d)),tb.isMoment(d)?new k(d,!0):(e?u(e)?Z(b):W(b):bb(b),c=new k(b),c._nextDay&&(c.add(1,"d"),c._nextDay=a),c))}function kb(a,b){var c,d;if(1===b.length&&u(b[0])&&(b=b[0]),!b.length)return tb();for(c=b[0],d=1;d<b.length;++d)b[d][a](c)&&(c=b[d]);return c}function lb(a,b){var c;return"string"==typeof b&&(b=a.localeData().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),B(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function mb(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function nb(a,b,c){return"Month"===b?lb(a,c):a._d["set"+(a._isUTC?"UTC":"")+b](c)}function ob(a,b){return function(c){return null!=c?(nb(this,a,c),tb.updateOffset(this,b),this):mb(this,a)}}function pb(a){return 400*a/146097}function qb(a){return 146097*a/400}function rb(a){tb.duration.fn[a]=function(){return this._data[a]}}function sb(a){"undefined"==typeof ender&&(ub=xb.moment,xb.moment=a?f("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",tb):tb)}for(var tb,ub,vb,wb="2.8.4",xb="undefined"!=typeof global?global:this,yb=Math.round,zb=Object.prototype.hasOwnProperty,Ab=0,Bb=1,Cb=2,Db=3,Eb=4,Fb=5,Gb=6,Hb={},Ib=[],Jb="undefined"!=typeof module&&module&&module.exports,Kb=/^\/?Date\((\-?\d+)/i,Lb=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,Mb=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,Nb=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,Ob=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Pb=/\d\d?/,Qb=/\d{1,3}/,Rb=/\d{1,4}/,Sb=/[+\-]?\d{1,6}/,Tb=/\d+/,Ub=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Vb=/Z|[\+\-]\d\d:?\d\d/gi,Wb=/T/i,Xb=/[\+\-]?\d+/,Yb=/[\+\-]?\d+(\.\d{1,3})?/,Zb=/\d/,$b=/\d\d/,_b=/\d{3}/,ac=/\d{4}/,bc=/[+-]?\d{6}/,cc=/[+-]?\d+/,dc=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,ec="YYYY-MM-DDTHH:mm:ssZ",fc=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],gc=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],hc=/([\+\-]|\d\d)/gi,ic=("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),jc={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",Q:"quarter",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},kc={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},lc={},mc={s:45,m:45,h:22,d:26,M:11},nc="DDD w W M D d".split(" "),oc="M D H h m s w W".split(" "),pc={M:function(){return this.month()+1},MMM:function(a){return this.localeData().monthsShort(this,a)},MMMM:function(a){return this.localeData().months(this,a)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(a){return this.localeData().weekdaysMin(this,a)},ddd:function(a){return this.localeData().weekdaysShort(this,a)},dddd:function(a){return this.localeData().weekdays(this,a)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return p(this.year()%100,2)},YYYY:function(){return p(this.year(),4)},YYYYY:function(){return p(this.year(),5)},YYYYYY:function(){var a=this.year(),b=a>=0?"+":"-";return b+p(Math.abs(a),6)},gg:function(){return p(this.weekYear()%100,2)},gggg:function(){return p(this.weekYear(),4)},ggggg:function(){return p(this.weekYear(),5)},GG:function(){return p(this.isoWeekYear()%100,2)},GGGG:function(){return p(this.isoWeekYear(),4)},GGGGG:function(){return p(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.localeData().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.localeData().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return A(this.milliseconds()/100)},SS:function(){return p(A(this.milliseconds()/10),2)},SSS:function(){return p(this.milliseconds(),3)},SSSS:function(){return p(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+p(A(a/60),2)+":"+p(A(a)%60,2)},ZZ:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+p(A(a/60),2)+p(A(a)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},x:function(){return this.valueOf()},X:function(){return this.unix()},Q:function(){return this.quarter()}},qc={},rc=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];nc.length;)vb=nc.pop(),pc[vb+"o"]=i(pc[vb],vb);for(;oc.length;)vb=oc.pop(),pc[vb+vb]=h(pc[vb],2);pc.DDDD=h(pc.DDD,3),m(j.prototype,{set:function(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b;this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(a){return this._months[a.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(a){return this._monthsShort[a.month()]},monthsParse:function(a,b,c){var d,e,f;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12>d;d++){if(e=tb.utc([2e3,d]),c&&!this._longMonthsParse[d]&&(this._longMonthsParse[d]=new RegExp("^"+this.months(e,"").replace(".","")+"$","i"),this._shortMonthsParse[d]=new RegExp("^"+this.monthsShort(e,"").replace(".","")+"$","i")),c||this._monthsParse[d]||(f="^"+this.months(e,"")+"|^"+this.monthsShort(e,""),this._monthsParse[d]=new RegExp(f.replace(".",""),"i")),c&&"MMMM"===b&&this._longMonthsParse[d].test(a))return d;if(c&&"MMM"===b&&this._shortMonthsParse[d].test(a))return d;if(!c&&this._monthsParse[d].test(a))return d}},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(a){return this._weekdays[a.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(a){return this._weekdaysShort[a.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(a){return this._weekdaysMin[a.day()]},weekdaysParse:function(a){var b,c,d;for(this._weekdaysParse||(this._weekdaysParse=[]),b=0;7>b;b++)if(this._weekdaysParse[b]||(c=tb([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b},_longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY LT",LLLL:"dddd, MMMM D, YYYY LT"},longDateFormat:function(a){var b=this._longDateFormat[a];return!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a]=b),b},isPM:function(a){return"p"===(a+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a,b,c){var d=this._calendar[a];return"function"==typeof d?d.apply(b,[c]):d},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)},pastFuture:function(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)},ordinal:function(a){return this._ordinal.replace("%d",a)},_ordinal:"%d",_ordinalParse:/\d{1,2}/,preparse:function(a){return a},postformat:function(a){return a},week:function(a){return hb(a,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}}),tb=function(b,c,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._i=b,g._f=c,g._l=e,g._strict=f,g._isUTC=!1,g._pf=d(),jb(g)},tb.suppressDeprecationWarnings=!1,tb.createFromInputFallback=f("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i+(a._useUTC?" UTC":""))}),tb.min=function(){var a=[].slice.call(arguments,0);return kb("isBefore",a)},tb.max=function(){var a=[].slice.call(arguments,0);return kb("isAfter",a)},tb.utc=function(b,c,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._useUTC=!0,g._isUTC=!0,g._l=e,g._i=b,g._f=c,g._strict=f,g._pf=d(),jb(g).utc()},tb.unix=function(a){return tb(1e3*a)},tb.duration=function(a,b){var d,e,f,g,h=a,i=null;return tb.isDuration(a)?h={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(h={},b?h[b]=a:h.milliseconds=a):(i=Lb.exec(a))?(d="-"===i[1]?-1:1,h={y:0,d:A(i[Cb])*d,h:A(i[Db])*d,m:A(i[Eb])*d,s:A(i[Fb])*d,ms:A(i[Gb])*d}):(i=Mb.exec(a))?(d="-"===i[1]?-1:1,f=function(a){var b=a&&parseFloat(a.replace(",","."));return(isNaN(b)?0:b)*d},h={y:f(i[2]),M:f(i[3]),d:f(i[4]),h:f(i[5]),m:f(i[6]),s:f(i[7]),w:f(i[8])}):"object"==typeof h&&("from"in h||"to"in h)&&(g=r(tb(h.from),tb(h.to)),h={},h.ms=g.milliseconds,h.M=g.months),e=new l(h),tb.isDuration(a)&&c(a,"_locale")&&(e._locale=a._locale),e},tb.version=wb,tb.defaultFormat=ec,tb.ISO_8601=function(){},tb.momentProperties=Ib,tb.updateOffset=function(){},tb.relativeTimeThreshold=function(b,c){return mc[b]===a?!1:c===a?mc[b]:(mc[b]=c,!0)},tb.lang=f("moment.lang is deprecated. Use moment.locale instead.",function(a,b){return tb.locale(a,b)}),tb.locale=function(a,b){var c;return a&&(c="undefined"!=typeof b?tb.defineLocale(a,b):tb.localeData(a),c&&(tb.duration._locale=tb._locale=c)),tb._locale._abbr},tb.defineLocale=function(a,b){return null!==b?(b.abbr=a,Hb[a]||(Hb[a]=new j),Hb[a].set(b),tb.locale(a),Hb[a]):(delete Hb[a],null)},tb.langData=f("moment.langData is deprecated. Use moment.localeData instead.",function(a){return tb.localeData(a)}),tb.localeData=function(a){var b;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return tb._locale;if(!u(a)){if(b=J(a))return b;a=[a]}return I(a)},tb.isMoment=function(a){return a instanceof k||null!=a&&c(a,"_isAMomentObject")},tb.isDuration=function(a){return a instanceof l};for(vb=rc.length-1;vb>=0;--vb)z(rc[vb]);tb.normalizeUnits=function(a){return x(a)},tb.invalid=function(a){var b=tb.utc(0/0);return null!=a?m(b._pf,a):b._pf.userInvalidated=!0,b},tb.parseZone=function(){return tb.apply(null,arguments).parseZone()},tb.parseTwoDigitYear=function(a){return A(a)+(A(a)>68?1900:2e3)},m(tb.fn=k.prototype,{clone:function(){return tb(this)},valueOf:function(){return+this._d+6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var a=tb(this).utc();return 0<a.year()&&a.year()<=9999?"function"==typeof Date.prototype.toISOString?this.toDate().toISOString():N(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):N(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds()]},isValid:function(){return G(this)},isDSTShifted:function(){return this._a?this.isValid()&&w(this._a,(this._isUTC?tb.utc(this._a):tb(this._a)).toArray())>0:!1},parsingFlags:function(){return m({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(a){return this.zone(0,a)},local:function(a){return this._isUTC&&(this.zone(0,a),this._isUTC=!1,a&&this.add(this._dateTzOffset(),"m")),this},format:function(a){var b=N(this,a||tb.defaultFormat);return this.localeData().postformat(b)},add:s(1,"add"),subtract:s(-1,"subtract"),diff:function(a,b,c){var d,e,f,g=K(a,this),h=6e4*(this.zone()-g.zone());return b=x(b),"year"===b||"month"===b?(d=432e5*(this.daysInMonth()+g.daysInMonth()),e=12*(this.year()-g.year())+(this.month()-g.month()),f=this-tb(this).startOf("month")-(g-tb(g).startOf("month")),f-=6e4*(this.zone()-tb(this).startOf("month").zone()-(g.zone()-tb(g).startOf("month").zone())),e+=f/d,"year"===b&&(e/=12)):(d=this-g,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-h)/864e5:"week"===b?(d-h)/6048e5:d),c?e:o(e)},from:function(a,b){return tb.duration({to:this,from:a}).locale(this.locale()).humanize(!b)},fromNow:function(a){return this.from(tb(),a)},calendar:function(a){var b=a||tb(),c=K(b,this).startOf("day"),d=this.diff(c,"days",!0),e=-6>d?"sameElse":-1>d?"lastWeek":0>d?"lastDay":1>d?"sameDay":2>d?"nextDay":7>d?"nextWeek":"sameElse";return this.format(this.localeData().calendar(e,this,tb(b)))},isLeapYear:function(){return E(this.year())},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=eb(a,this.localeData()),this.add(a-b,"d")):b},month:ob("Month",!0),startOf:function(a){switch(a=x(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a?this.weekday(0):"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this},endOf:function(b){return b=x(b),b===a||"millisecond"===b?this:this.startOf(b).add(1,"isoWeek"===b?"week":b).subtract(1,"ms")},isAfter:function(a,b){var c;return b=x("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=tb.isMoment(a)?a:tb(a),+this>+a):(c=tb.isMoment(a)?+a:+tb(a),c<+this.clone().startOf(b))},isBefore:function(a,b){var c;return b=x("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=tb.isMoment(a)?a:tb(a),+a>+this):(c=tb.isMoment(a)?+a:+tb(a),+this.clone().endOf(b)<c)},isSame:function(a,b){var c;return b=x(b||"millisecond"),"millisecond"===b?(a=tb.isMoment(a)?a:tb(a),+this===+a):(c=+tb(a),+this.clone().startOf(b)<=c&&c<=+this.clone().endOf(b))},min:f("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(a){return a=tb.apply(null,arguments),this>a?this:a}),max:f("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(a){return a=tb.apply(null,arguments),a>this?this:a}),zone:function(a,b){var c,d=this._offset||0;return null==a?this._isUTC?d:this._dateTzOffset():("string"==typeof a&&(a=Q(a)),Math.abs(a)<16&&(a=60*a),!this._isUTC&&b&&(c=this._dateTzOffset()),this._offset=a,this._isUTC=!0,null!=c&&this.subtract(c,"m"),d!==a&&(!b||this._changeInProgress?t(this,tb.duration(d-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,tb.updateOffset(this,!0),this._changeInProgress=null)),this)},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){return this._tzm?this.zone(this._tzm):"string"==typeof this._i&&this.zone(this._i),this},hasAlignedHourOffset:function(a){return a=a?tb(a).zone():0,(this.zone()-a)%60===0},daysInMonth:function(){return B(this.year(),this.month())},dayOfYear:function(a){var b=yb((tb(this).startOf("day")-tb(this).startOf("year"))/864e5)+1;return null==a?b:this.add(a-b,"d")},quarter:function(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)},weekYear:function(a){var b=hb(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return null==a?b:this.add(a-b,"y")},isoWeekYear:function(a){var b=hb(this,1,4).year;return null==a?b:this.add(a-b,"y")},week:function(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),"d")},isoWeek:function(a){var b=hb(this,1,4).week;return null==a?b:this.add(7*(a-b),"d")},weekday:function(a){var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,"d")},isoWeekday:function(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)},isoWeeksInYear:function(){return C(this.year(),1,4)},weeksInYear:function(){var a=this.localeData()._week;return C(this.year(),a.dow,a.doy)},get:function(a){return a=x(a),this[a]()},set:function(a,b){return a=x(a),"function"==typeof this[a]&&this[a](b),this},locale:function(b){var c;return b===a?this._locale._abbr:(c=tb.localeData(b),null!=c&&(this._locale=c),this)},lang:f("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(b){return b===a?this.localeData():this.locale(b)}),localeData:function(){return this._locale},_dateTzOffset:function(){return 15*Math.round(this._d.getTimezoneOffset()/15)}}),tb.fn.millisecond=tb.fn.milliseconds=ob("Milliseconds",!1),tb.fn.second=tb.fn.seconds=ob("Seconds",!1),tb.fn.minute=tb.fn.minutes=ob("Minutes",!1),tb.fn.hour=tb.fn.hours=ob("Hours",!0),tb.fn.date=ob("Date",!0),tb.fn.dates=f("dates accessor is deprecated. Use date instead.",ob("Date",!0)),tb.fn.year=ob("FullYear",!0),tb.fn.years=f("years accessor is deprecated. Use year instead.",ob("FullYear",!0)),tb.fn.days=tb.fn.day,tb.fn.months=tb.fn.month,tb.fn.weeks=tb.fn.week,tb.fn.isoWeeks=tb.fn.isoWeek,tb.fn.quarters=tb.fn.quarter,tb.fn.toJSON=tb.fn.toISOString,m(tb.duration.fn=l.prototype,{_bubble:function(){var a,b,c,d=this._milliseconds,e=this._days,f=this._months,g=this._data,h=0;g.milliseconds=d%1e3,a=o(d/1e3),g.seconds=a%60,b=o(a/60),g.minutes=b%60,c=o(b/60),g.hours=c%24,e+=o(c/24),h=o(pb(e)),e-=o(qb(h)),f+=o(e/30),e%=30,h+=o(f/12),f%=12,g.days=e,g.months=f,g.years=h},abs:function(){return this._milliseconds=Math.abs(this._milliseconds),this._days=Math.abs(this._days),this._months=Math.abs(this._months),this._data.milliseconds=Math.abs(this._data.milliseconds),this._data.seconds=Math.abs(this._data.seconds),this._data.minutes=Math.abs(this._data.minutes),this._data.hours=Math.abs(this._data.hours),this._data.months=Math.abs(this._data.months),this._data.years=Math.abs(this._data.years),this},weeks:function(){return o(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*A(this._months/12)},humanize:function(a){var b=gb(this,!a,this.localeData());return a&&(b=this.localeData().pastFuture(+this,b)),this.localeData().postformat(b)},add:function(a,b){var c=tb.duration(a,b);return this._milliseconds+=c._milliseconds,this._days+=c._days,this._months+=c._months,this._bubble(),this},subtract:function(a,b){var c=tb.duration(a,b);return this._milliseconds-=c._milliseconds,this._days-=c._days,this._months-=c._months,this._bubble(),this},get:function(a){return a=x(a),this[a.toLowerCase()+"s"]()},as:function(a){var b,c;if(a=x(a),"month"===a||"year"===a)return b=this._days+this._milliseconds/864e5,c=this._months+12*pb(b),"month"===a?c:c/12;switch(b=this._days+Math.round(qb(this._months/12)),a){case"week":return b/7+this._milliseconds/6048e5;case"day":return b+this._milliseconds/864e5;case"hour":return 24*b+this._milliseconds/36e5;case"minute":return 24*b*60+this._milliseconds/6e4;case"second":return 24*b*60*60+this._milliseconds/1e3;
case"millisecond":return Math.floor(24*b*60*60*1e3)+this._milliseconds;default:throw new Error("Unknown unit "+a)}},lang:tb.fn.lang,locale:tb.fn.locale,toIsoString:f("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",function(){return this.toISOString()}),toISOString:function(){var a=Math.abs(this.years()),b=Math.abs(this.months()),c=Math.abs(this.days()),d=Math.abs(this.hours()),e=Math.abs(this.minutes()),f=Math.abs(this.seconds()+this.milliseconds()/1e3);return this.asSeconds()?(this.asSeconds()<0?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||f?"T":"")+(d?d+"H":"")+(e?e+"M":"")+(f?f+"S":""):"P0D"},localeData:function(){return this._locale}}),tb.duration.fn.toString=tb.duration.fn.toISOString;for(vb in ic)c(ic,vb)&&rb(vb.toLowerCase());tb.duration.fn.asMilliseconds=function(){return this.as("ms")},tb.duration.fn.asSeconds=function(){return this.as("s")},tb.duration.fn.asMinutes=function(){return this.as("m")},tb.duration.fn.asHours=function(){return this.as("h")},tb.duration.fn.asDays=function(){return this.as("d")},tb.duration.fn.asWeeks=function(){return this.as("weeks")},tb.duration.fn.asMonths=function(){return this.as("M")},tb.duration.fn.asYears=function(){return this.as("y")},tb.locale("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===A(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),Jb?module.exports=tb:"function"==typeof define&&define.amd?(define("moment",function(a,b,c){return c.config&&c.config()&&c.config().noGlobal===!0&&(xb.moment=ub),tb}),sb(!0)):sb()}).call(this);;
/*
 *	jQuery dotdotdot 1.8.0
 *
 *	Copyright (c) Fred Heusschen
 *	www.frebsite.nl
 *
 *	Plugin website:
 *	dotdotdot.frebsite.nl
 *
 *	Licensed under the MIT license.
 *	http://en.wikipedia.org/wiki/MIT_License
 */

(function( $, undef )
{
	if ( $.fn.dotdotdot )
	{
		return;
	}

	$.fn.dotdotdot = function( o )
	{
		if ( this.length == 0 )
		{
			$.fn.dotdotdot.debug( 'No element found for "' + this.selector + '".' );
			return this;
		}
		if ( this.length > 1 )
		{
			return this.each(
				function()
				{
					$(this).dotdotdot( o );
				}
			);
		}


		var $dot = this;
		var orgContent	= $dot.contents();

		if ( $dot.data( 'dotdotdot' ) )
		{
			$dot.trigger( 'destroy.dot' );
		}

		$dot.data( 'dotdotdot-style', $dot.attr( 'style' ) || '' );
		$dot.css( 'word-wrap', 'break-word' );
		if ($dot.css( 'white-space' ) === 'nowrap')
		{
			$dot.css( 'white-space', 'normal' );
		}

		$dot.bind_events = function()
		{
			$dot.bind(
				'update.dot',
				function( e, c )
				{
					$dot.removeClass("is-truncated");
					e.preventDefault();
					e.stopPropagation();

					switch( typeof opts.height )
					{
						case 'number':
							opts.maxHeight = opts.height;
							break;

						case 'function':
							opts.maxHeight = opts.height.call( $dot[ 0 ] );
							break;

						default:
							opts.maxHeight = getTrueInnerHeight( $dot );
							break;
					}

					opts.maxHeight += opts.tolerance;

					if ( typeof c != 'undefined' )
					{
						if ( typeof c == 'string' || ('nodeType' in c && c.nodeType === 1) )
						{
					 		c = $('<div />').append( c ).contents();
						}
						if ( c instanceof $ )
						{
							orgContent = c;
						}
					}

					$inr = $dot.wrapInner( '<div class="dotdotdot" />' ).children();
					$inr.contents()
						.detach()
						.end()
						.append( orgContent.clone( true ) )
						.find( 'br' )
						.replaceWith( '  <br />  ' )
						.end()
						.css({
							'height'	: 'auto',
							'width'		: 'auto',
							'border'	: 'none',
							'padding'	: 0,
							'margin'	: 0
						});

					var after = false,
						trunc = false;

					if ( conf.afterElement )
					{
						after = conf.afterElement.clone( true );
					    after.show();
						conf.afterElement.detach();
					}

					if ( test( $inr, opts ) )
					{
						if ( opts.wrap == 'children' )
						{
							trunc = children( $inr, opts, after );
						}
						else
						{
							trunc = ellipsis( $inr, $dot, $inr, opts, after );
						}
					}
					$inr.replaceWith( $inr.contents() );
					$inr = null;

					if ( $.isFunction( opts.callback ) )
					{
						opts.callback.call( $dot[ 0 ], trunc, orgContent );
					}

					conf.isTruncated = trunc;
					return trunc;
				}

			).bind(
				'isTruncated.dot',
				function( e, fn )
				{
					e.preventDefault();
					e.stopPropagation();

					if ( typeof fn == 'function' )
					{
						fn.call( $dot[ 0 ], conf.isTruncated );
					}
					return conf.isTruncated;
				}

			).bind(
				'originalContent.dot',
				function( e, fn )
				{
					e.preventDefault();
					e.stopPropagation();

					if ( typeof fn == 'function' )
					{
						fn.call( $dot[ 0 ], orgContent );
					}
					return orgContent;
				}

			).bind(
				'destroy.dot',
				function( e )
				{
					e.preventDefault();
					e.stopPropagation();

					$dot.unwatch()
						.unbind_events()
						.contents()
						.detach()
						.end()
						.append( orgContent )
						.attr( 'style', $dot.data( 'dotdotdot-style' ) || '' )
						.removeClass( 'is-truncated' )
						.data( 'dotdotdot', false );
				}
			);
			return $dot;
		};	//	/bind_events

		$dot.unbind_events = function()
		{
			$dot.unbind('.dot');
			return $dot;
		};	//	/unbind_events

		$dot.watch = function()
		{
			$dot.unwatch();
			if ( opts.watch == 'window' )
			{
				var $window = $(window),
					_wWidth = $window.width(),
					_wHeight = $window.height();

				$window.bind(
					'resize.dot' + conf.dotId,
					function()
					{
						if ( _wWidth != $window.width() || _wHeight != $window.height() || !opts.windowResizeFix )
						{
							_wWidth = $window.width();
							_wHeight = $window.height();

							if ( watchInt )
							{
								clearInterval( watchInt );
							}
							watchInt = setTimeout(
								function()
								{
									$dot.trigger( 'update.dot' );
								}, 100
							);
						}
					}
				);
			}
			else
			{
				watchOrg = getSizes( $dot );
				watchInt = setInterval(
					function()
					{
						if ( $dot.is( ':visible' ) )
						{
							var watchNew = getSizes( $dot );
							if ( watchOrg.width  != watchNew.width ||
								 watchOrg.height != watchNew.height )
							{
								$dot.trigger( 'update.dot' );
								watchOrg = watchNew;
							}
						}
					}, 500
				);
			}
			return $dot;
		};
		$dot.unwatch = function()
		{
			$(window).unbind( 'resize.dot' + conf.dotId );
			if ( watchInt )
			{
				clearInterval( watchInt );
			}
			return $dot;
		};

		var	opts 		= $.extend( true, {}, $.fn.dotdotdot.defaults, o ),
			conf		= {},
			watchOrg	= {},
			watchInt	= null,
			$inr		= null;


		if ( !( opts.lastCharacter.remove instanceof Array ) )
		{
			opts.lastCharacter.remove = $.fn.dotdotdot.defaultArrays.lastCharacter.remove;
		}
		if ( !( opts.lastCharacter.noEllipsis instanceof Array ) )
		{
			opts.lastCharacter.noEllipsis = $.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis;
		}


		conf.afterElement	= getElement( opts.after, $dot );
		conf.isTruncated	= false;
		conf.dotId			= dotId++;


		$dot.data( 'dotdotdot', true )
			.bind_events()
			.trigger( 'update.dot' );

		if ( opts.watch )
		{
			$dot.watch();
		}

		return $dot;
	};


	//	public
	$.fn.dotdotdot.defaults = {
		'ellipsis'			: '... ',
		'wrap'				: 'word',
		'fallbackToLetter'	: true,
		'lastCharacter'		: {},
		'tolerance'			: 0,
		'callback'			: null,
		'after'				: null,
		'height'			: null,
		'watch'				: false,
		'windowResizeFix'	: true
	};
	$.fn.dotdotdot.defaultArrays = {
		'lastCharacter'		: {
			'remove'			: [ ' ', '\u3000', ',', ';', '.', '!', '?' ],
			'noEllipsis'		: []
		}
	};
	$.fn.dotdotdot.debug = function( msg ) {};


	//	private
	var dotId = 1;

	function children( $elem, o, after )
	{
		var $elements 	= $elem.children(),
			isTruncated	= false;

		$elem.empty();

		for ( var a = 0, l = $elements.length; a < l; a++ )
		{
			var $e = $elements.eq( a );
			$elem.append( $e );
			if ( after )
			{
				$elem.append( after );
			}
			if ( test( $elem, o ) )
			{
				$e.remove();
				isTruncated = true;
				break;
			}
			else
			{
				if ( after )
				{
					after.detach();
				}
			}
		}
		return isTruncated;
	}
	function ellipsis( $elem, $d, $i, o, after )
	{
		var isTruncated	= false;

		//	Don't put the ellipsis directly inside these elements
		var notx = 'a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style';

		//	Don't remove these elements even if they are after the ellipsis
		var noty = 'script, .dotdotdot-keep';

		$elem
			.contents()
			.detach()
			.each(
				function()
				{

					var e	= this,
						$e	= $(e);

					if ( typeof e == 'undefined' )
					{
						return true;
					}
					else if ( $e.is( noty ) )
					{
						$elem.append( $e );
					}
					else if ( isTruncated )
					{
						return true;
					}
					else
					{
						$elem.append( $e );
						if ( after && !$e.is( o.after ) && !$e.find( o.after ).length  )
						{
							$elem[ $elem.is( notx ) ? 'after' : 'append' ]( after );
						}
						if ( test( $i, o ) )
						{
							if ( e.nodeType == 3 ) // node is TEXT
							{
								isTruncated = ellipsisElement( $e, $d, $i, o, after );
							}
							else
							{
								isTruncated = ellipsis( $e, $d, $i, o, after );
							}
						}

						if ( !isTruncated )
						{
							if ( after )
							{
								after.detach();
							}
						}
					}
				}
			);
		$d.addClass("is-truncated");
		return isTruncated;
	}
	function ellipsisElement( $e, $d, $i, o, after )
	{
		var e = $e[ 0 ];

		if ( !e )
		{
			return false;
		}

		var txt			= getTextContent( e ),
			space		= ( txt.indexOf(' ') !== -1 ) ? ' ' : '\u3000',
			separator	= ( o.wrap == 'letter' ) ? '' : space,
			textArr		= txt.split( separator ),
			position 	= -1,
			midPos		= -1,
			startPos	= 0,
			endPos		= textArr.length - 1;


		//	Only one word
		if ( o.fallbackToLetter && startPos == 0 && endPos == 0 )
		{
			separator	= '';
			textArr		= txt.split( separator );
			endPos		= textArr.length - 1;
		}

		while ( startPos <= endPos && !( startPos == 0 && endPos == 0 ) )
		{
			var m = Math.floor( ( startPos + endPos ) / 2 );
			if ( m == midPos )
			{
				break;
			}
			midPos = m;

			setTextContent( e, textArr.slice( 0, midPos + 1 ).join( separator ) + o.ellipsis );
			$i.children()
				.each(
					function()
					{
						$(this).toggle().toggle();
					}
				);

			if ( !test( $i, o ) )
			{
				position = midPos;
				startPos = midPos;
			}
			else
			{
				endPos = midPos;

				//	Fallback to letter
				if (o.fallbackToLetter && startPos == 0 && endPos == 0 )
				{
					separator	= '';
					textArr		= textArr[ 0 ].split( separator );
					position	= -1;
					midPos		= -1;
					startPos	= 0;
					endPos		= textArr.length - 1;
				}
			}
		}

		if ( position != -1 && !( textArr.length == 1 && textArr[ 0 ].length == 0 ) )
		{
			txt = addEllipsis( textArr.slice( 0, position + 1 ).join( separator ), o );
			setTextContent( e, txt );
		}
		else
		{
			var $w = $e.parent();
			$e.detach();

			var afterLength = ( after && after.closest($w).length ) ? after.length : 0;

			if ( $w.contents().length > afterLength )
			{
				e = findLastTextNode( $w.contents().eq( -1 - afterLength ), $d );
			}
			else
			{
				e = findLastTextNode( $w, $d, true );
				if ( !afterLength )
				{
					$w.detach();
				}
			}
			if ( e )
			{
				txt = addEllipsis( getTextContent( e ), o );
				setTextContent( e, txt );
				if ( afterLength && after )
				{
					$(e).parent().append( after );
				}
			}
		}

		return true;
	}
	function test( $i, o )
	{
		return $i.innerHeight() > o.maxHeight;
	}
	function addEllipsis( txt, o )
	{
		while( $.inArray( txt.slice( -1 ), o.lastCharacter.remove ) > -1 )
		{
			txt = txt.slice( 0, -1 );
		}
		if ( $.inArray( txt.slice( -1 ), o.lastCharacter.noEllipsis ) < 0 )
		{
			txt += o.ellipsis;
		}
		return txt;
	}
	function getSizes( $d )
	{
		return {
			'width'	: $d.innerWidth(),
			'height': $d.innerHeight()
		};
	}
	function setTextContent( e, content )
	{
		if ( e.innerText )
		{
			e.innerText = content;
		}
		else if ( e.nodeValue )
		{
			e.nodeValue = content;
		}
		else if (e.textContent)
		{
			e.textContent = content;
		}

	}
	function getTextContent( e )
	{
		if ( e.innerText )
		{
			return e.innerText;
		}
		else if ( e.nodeValue )
		{
			return e.nodeValue;
		}
		else if ( e.textContent )
		{
			return e.textContent;
		}
		else
		{
			return "";
		}
	}
	function getPrevNode( n )
	{
		do
		{
			n = n.previousSibling;
		}
		while ( n && n.nodeType !== 1 && n.nodeType !== 3 );

		return n;
	}
	function findLastTextNode( $el, $top, excludeCurrent )
	{
		var e = $el && $el[ 0 ], p;
		if ( e )
		{
			if ( !excludeCurrent )
			{
				if ( e.nodeType === 3 )
				{
					return e;
				}
				if ( $.trim( $el.text() ) )
				{
					return findLastTextNode( $el.contents().last(), $top );
				}
			}
			p = getPrevNode( e );
			while ( !p )
			{
				$el = $el.parent();
				if ( $el.is( $top ) || !$el.length )
				{
					return false;
				}
				p = getPrevNode( $el[0] );
			}
			if ( p )
			{
				return findLastTextNode( $(p), $top );
			}
		}
		return false;
	}
	function getElement( e, $i )
	{
		if ( !e )
		{
			return false;
		}
		if ( typeof e === 'string' )
		{
			e = $(e, $i);
			return ( e.length )
				? e
				: false;
		}
		return !e.jquery
			? false
			: e;
	}
	function getTrueInnerHeight( $el )
	{
		var h = $el.innerHeight(),
			a = [ 'paddingTop', 'paddingBottom' ];

		for ( var z = 0, l = a.length; z < l; z++ )
		{
			var m = parseInt( $el.css( a[ z ] ), 10 );
			if ( isNaN( m ) )
			{
				m = 0;
			}
			h -= m;
		}
		return h;
	}


	//	override jQuery.html
	var _orgHtml = $.fn.html;
	$.fn.html = function( str )
	{
		if ( str != undef && !$.isFunction( str ) && this.data( 'dotdotdot' ) )
		{
			return this.trigger( 'update', [ str ] );
		}
		return _orgHtml.apply( this, arguments );
	};


	//	override jQuery.text
	var _orgText = $.fn.text;
	$.fn.text = function( str )
	{
		if ( str != undef && !$.isFunction( str ) && this.data( 'dotdotdot' ) )
		{
			str = $( '<div />' ).text( str ).html();
			return this.trigger( 'update', [ str ] );
		}
		return _orgText.apply( this, arguments );
	};


})( jQuery );

/*

## Automatic parsing for CSS classes
Contributed by [Ramil Valitov](https://github.com/rvalitov)

### The idea
You can add one or several CSS classes to HTML elements to automatically invoke "jQuery.dotdotdot functionality" and some extra features. It allows to use jQuery.dotdotdot only by adding appropriate CSS classes without JS programming.

### Available classes and their description
* dot-ellipsis - automatically invoke jQuery.dotdotdot to this element. This class must be included if you plan to use other classes below.
* dot-resize-update - automatically update if window resize event occurs. It's equivalent to option `watch:'window'`.
* dot-timer-update - automatically update if window resize event occurs. It's equivalent to option `watch:true`.
* dot-load-update - automatically update after the window has beem completely rendered. Can be useful if your content is generated dynamically using using JS and, hence, jQuery.dotdotdot can't correctly detect the height of the element before it's rendered completely.
* dot-height-XXX - available height of content area in pixels, where XXX is a number, e.g. can be `dot-height-35` if you want to set maximum height for 35 pixels. It's equivalent to option `height:'XXX'`.

### Usage examples
*Adding jQuery.dotdotdot to element*
    
	<div class="dot-ellipsis">
	<p>Lorem Ipsum is simply dummy text.</p>
	</div>
	
*Adding jQuery.dotdotdot to element with update on window resize*
    
	<div class="dot-ellipsis dot-resize-update">
	<p>Lorem Ipsum is simply dummy text.</p>
	</div>
	
*Adding jQuery.dotdotdot to element with predefined height of 50px*
    
	<div class="dot-ellipsis dot-height-50">
	<p>Lorem Ipsum is simply dummy text.</p>
	</div>
	
*/

jQuery(document).ready(function($) {
	//We only invoke jQuery.dotdotdot on elements that have dot-ellipsis class
	$(".dot-ellipsis").each(function(){
		//Checking if update on window resize required
		var watch_window=$(this).hasClass("dot-resize-update");
		
		//Checking if update on timer required
		var watch_timer=$(this).hasClass("dot-timer-update");
		
		//Checking if height set
		var height=0;		
		var classList = $(this).attr('class').split(/\s+/);
		$.each(classList, function(index, item) {
			if (!item.match('/^dot\-height\-\d+$/')) {
				height=Number(item.substr(item.indexOf('-',-1)+1));
			}
		});
		
		//Invoking jQuery.dotdotdot
		var x = new Object();
		if (watch_timer)
			x.watch=true;
		if (watch_window)
			x.watch='window';
		if (height>0)
			x.height=height;
		$(this).dotdotdot(x);
	});
		
});

//Updating elements (if any) on window.load event
jQuery(window).load(function(){
	jQuery(".dot-ellipsis.dot-load-update").trigger("update.dot");
});;
function SocialFeedbackSlide() {
    var feedbackBlock = $('.feedback-block');
    var socialfeedbackYesNo = $('#socialfeedback');
    var socialfeedbackmobile = $('.social-feedback-mobile');
    var socialfeedback = $('.social-feedback');
    var submitBtn = $('.submitBtn');
    var socialFollowUs = $('.social-follow-us');
    var socialShare = $('.social-share');
    var maxlength = 1500;
    var feedBackId;
    var first, second, third, fourth = "";
    $('.yes-btn, .no-btn').on('mousedown', function (e) {
        e.preventDefault();
        socialfeedbackYesNo.hide();
        socialfeedbackmobile.hide();
        feedbackBlock.show();
        $('.comments').focus();
        $('.comments-mobile').focus();
        socialfeedback.addClass('toggle');
        feedBackId = (generateGUID() + generateGUID() + "-" + generateGUID() + "-4" + generateGUID().substr(0, 3) + "-" + generateGUID() + "-" + generateGUID() + generateGUID() + generateGUID()).toLowerCase();
        if (sessionStorage.getItem('fburl') == null) {
            sessionStorage.setItem('fburl', window.location.href);
        }
        else {
            sessionStorage.setItem('fburl', sessionStorage.getItem('fburl') + ',' + window.location.href);
        }
        if ($(this).hasClass('yes-btn')) {
            $('.yes-btn').trigger("submitRating", [{
                "feedbackID": feedBackId,
                "rating": 1
            }]);
        }
        if ($(this).hasClass('no-btn')) {
            $('.no-btn').trigger("submitRating", [{
                "feedbackID": feedBackId,
                "rating": 0
            }]);
        }
    });

    $('.yes-btn, .no-btn').on('keydown', function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            socialfeedbackYesNo.hide();
            socialfeedbackmobile.hide();
            feedbackBlock.show();
            $('.comments').focus();
            $('.comments-mobile').focus();
            socialfeedback.addClass('toggle');
            feedBackId = (generateGUID() + generateGUID() + "-" + generateGUID() + "-4" + generateGUID().substr(0, 3) + "-" + generateGUID() + "-" + generateGUID() + generateGUID() + generateGUID()).toLowerCase();
            if (sessionStorage.getItem('fburl') == null) {
                sessionStorage.setItem('fburl', window.location.href);
            }
            else {
                sessionStorage.setItem('fburl', sessionStorage.getItem('fburl') + ',' + window.location.href);
            }
            if ($(this).hasClass('yes-btn')) {
                $('.yes-btn').trigger("submitRating", [{
                    "feedbackID": feedBackId,
                    "rating": 1
                }]);
            }
            if ($(this).hasClass('no-btn')) {
                $('.no-btn').trigger("submitRating", [{
                    "feedbackID": feedBackId,
                    "rating": 0
                }]);
            }
        }
    });



    $(".spnCount").html(maxlength.toString() + "&nbsp;");
    $(".comments").attr('title', 'Enter' + " " + $('#hdnAdditionalFeedback').val() + " " + (maxlength.toString() + " ") + $('#hdnCharRemaining').val());

    $('.comments').keydown(function (e) {
        setTimeout(function () {
            var text = $('.comments').val();
            var chars = text.length;
            if ((chars > maxlength) && !(e.keyCode == 46 || e.keyCode != 8 || e.keyCode == 37 || e.keyCode == 38 || e.keyCode == 39 || e.keyCode == 40)) {
                $('.comments').val($('.comments').val().substring(0, 1500));
                return false;
            }
            if (chars > maxlength && e.keyCode != 8) {
                $('.comments').val($('.comments').val().substring(0, 1500));
                return false;
            }
            if (e.keyCode == 46 || e.keyCode == 37 || e.keyCode == 38 || e.keyCode == 39 || e.keyCode == 40) {
                $(".spnCount").html(((maxlength - chars) > 0 ? (maxlength - chars) : 0) + "&nbsp;");
                $('.comments').attr('title', 'Enter' + " " + $('#hdnAdditionalFeedback').val() + " " + ((maxlength - chars) > 0 ? (maxlength - chars) : 0) + " " +$('#hdnCharRemaining').val());
                return true;
            }
            else {
                $(".spnCount").html(((maxlength - chars) > 0 ? (maxlength - chars) : 0) + "&nbsp;");
                $('.comments').attr('title', 'Enter' + " " +$('#hdnAdditionalFeedback').val() + " " + ((maxlength - chars) > 0 ? (maxlength - chars): 0) + " " +$('#hdnCharRemaining').val());
            }

        }, 1);
    });

    $(".comments-mobile").attr('title', 'Enter' + " " + $('#hdnAdditionalFeedback').val() + " " + (maxlength.toString() + " ") + $('#hdnCharRemaining').val());
    $('.comments-mobile').keydown(function (e) {
        setTimeout(function () {
            var text = $('.comments-mobile').val();
            var chars = text.length;
            if ((chars > maxlength) && !(e.keyCode == 46 || e.keyCode != 8 || e.keyCode == 37 || e.keyCode == 38 || e.keyCode == 39 || e.keyCode == 40)) {
                $('.comments-mobile').val($('.comments-mobile').val().substring(0, 1500));
                return false;
            }
            if (chars > maxlength && e.keyCode != 8) {
                $('.comments-mobile').val($('.comments-mobile').val().substring(0, 1500));
                return false;
            }
            if (e.keyCode == 46 || e.keyCode == 37 || e.keyCode == 38 || e.keyCode == 39 || e.keyCode == 40) {
                $(".spnCount").html(((maxlength - chars) > 0 ? (maxlength - chars) : 0) + "&nbsp;");
                $('.comments-mobile').attr('title', 'Enter' + " " + $('#hdnAdditionalFeedback').val() + " " + ((maxlength - chars) > 0 ? (maxlength - chars) : 0) + " " + $('#hdnCharRemaining').val());
                return true;
            }
            else {
                $(".spnCount").html(((maxlength - chars) > 0 ? (maxlength - chars) : 0) + "&nbsp;");
                $('.comments-mobile').attr('title', 'Enter' + " " + $('#hdnAdditionalFeedback').val() + " " + ((maxlength - chars) > 0 ? (maxlength - chars) : 0) + " " + $('#hdnCharRemaining').val());
            }

        }, 1);
    });

    var feedbackurl = "";
    if (sessionStorage.getItem('fburl') != null)
        feedbackurl = sessionStorage.getItem('fburl').toString();

    if (feedbackurl.indexOf(window.location.href.toString()) >= 0) {
        feedbackBlock.hide();
        $('.thanks-message').show();
        socialfeedbackYesNo.hide();
        socialfeedbackmobile.hide();
        return false;
    }
    if (socialFollowUs.length == 0) {
        socialfeedback.addClass('slide-left');
        $('.social-share').addClass('pull-right');
    }
    if (socialShare.length == 0) {
        socialfeedback.addClass('slide-right');
    }
    if ((socialFollowUs.length == 0) && (socialShare.length == 0)) {
        socialfeedback.removeClass('slide-left slide-right');
    }
}
function generateGUID() {
    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
}
$(document).ready(function () {
    SocialFeedbackSlide();
    if ($("#share").length && !$("#social-feedback").length && !$("social-follow").length) {
        $('.single-block.social-header #share').css({ "padding-top": "0px", "margin-bottom": "-20px" });
    }
    if ($("#social-feedback").length && !$("#share").length && !$("social-follow").length) {
        $('.single-block.social-header #social-feedback').css({ "margin-top": "0px" });
    }
    if ($("#social-follow").length && !$("#share").length && !$("#social-feedback").length) {
        $('.single-block.social-header #social-follow').css({ "margin-bottom": "-20px","padding-bottom": "0px" });
    }
});
jq214(window).on('resize', function () {
    if ((jq214(window).width() > 899) && (jq214(window).width() < 1200)) {
        $('#social-follow').removeClass('col-sm-6');
        $('#social-follow').addClass('col-lg-4 col-med-12 col-sm-12 col-xs-12');
        $('#share').removeClass('col-sm-6');
        $('#share').addClass('col-lg-4');
        $('#social-feedback').removeClass('col-md-4').removeClass('col-sm-8');
        $('#social-feedback').addClass('col-md-12 col-sm-12');
        if (!$('#share').find('.dc-content').length) {
            var shareContent = $('#share').html();
            $('#share').html("");
            $('#share').append('<div class="dc-content pull-right">' + shareContent + '</div>');
        }
    } else {
        if ($('#share').find('.dc-content').length) {
            var dcContent = $('#share').find('.dc-content').html();
            $('#share').html('');
            $('#share').html(dcContent).addClass('pull-left');
        }
    }

});
$(window).load(function () {

    $('.submitBtn,.gutter').off("click");
    $('.submitBtn,.gutter').click(function () {
        var SendingData = {};
        var feedBackId;
        feedBackId = (generateGUID() + generateGUID() + "-" + generateGUID() + "-4" + generateGUID().substr(0, 3) + "-" + generateGUID() + "-" + generateGUID() + generateGUID() + generateGUID()).toLowerCase();
        $('.feedback-block').hide();
        var comments = "";
        if ($(window).width() >= 1200) {
            comments = $('.comments').val().toString();
        } else {
            comments = $('.comments-mobile').val().toString();
        }

        if (comments.length <= 400) {
            first = comments;
            SendingData =
                [{ "cleantext": first }];

        }
        if (comments.length > 400 && comments.length <= 800) {
            first = comments.substr(0, 400);
            second = comments.substr(400, 400);
            SendingData =
                [{ "cleantext": first },
                 { "cleantext": second }];

        }
        if (comments.length > 800 && comments.length <= 1200) {
            first = comments.substr(0, 400);
            second = comments.substr(400, 400);
            third = comments.substr(800, 400);
            SendingData =
                [{ "cleantext": first },
                 { "cleantext": second },
                 { "cleantext": third }];

        }
        if (comments.length > 1200) {
            first = comments.substr(0, 400);
            second = comments.substr(400, 400);
            third = comments.substr(800, 400);
            fourth = comments.substr(1200, 300);
            SendingData =
                [{ "cleantext": first },
                 { "cleantext": second },
                 { "cleantext": third },
                 { "cleantext": fourth }];

        }
        $('.submitBtn').trigger("submitFeedback", [{
            "feedbackID": feedBackId,
            "verbatim": SendingData
        }]);
        $('.thanks-message').show();
        return false;
    });
});
;
function initFeaturedCards($) {
    var featuredCardGroups = $('div.icon-custom-content');
    if (!featuredCardGroups.length) return;

    //Set all cards in a group to the same height
    setFeaturedCardGroupHeight(featuredCardGroups, false);

    $(window).on('resize', function (e) {
        setFeaturedCardGroupHeight(featuredCardGroups, true);
    });
}

function setFeaturedCardGroupHeight(inFeaturedCardGroups, resetCardHeights) {
    for (var i = 0; i < inFeaturedCardGroups.length; i++) {
        //Find cards in each product card grouping
        var $group = $(inFeaturedCardGroups[i]);
        var cards = $group.find('.icon-blade-cards > div.icon-blade-card > div.icon-blade-card-content');
        var cardGroupHeight = 0;

        //Reset any previously set heights on window resize
        if (resetCardHeights) {
            cards.css('height', 'auto');
            cards.children('.icon-blade-button').removeClass('autoPosition');
        }

        //Find the tallest card in the group
        for (var j = 0; j < cards.length; j++) {
            var $card = $(cards[j]);
            var cardHeight = $card.innerHeight();
            console.log(cardHeight);
            if (cardHeight > cardGroupHeight) {
                cardGroupHeight = cardHeight;
            }
        }

        //Set all cards in the group to the same height as the tallest card.
        cards.css('height', cardGroupHeight + 'px');
        //cards.children('.icon-stack-image').addClass('autoHeight');
        cards.children('.icon-blade-button').addClass('autoPosition');
    }
}
jQuery(window).resize(function () {
    hairLineDivider();
});
jQuery(document).ready(function () {
    hairLineDivider();
    initFeaturedCards(jQuery);
    $(".icon-blade-container .icon-blade-cards .icon-blade-card .icon-blade-card-content").each(function () {
        $(window).resize(function() {
            if ($(window).width() >= 900) {
                $('.icon-custom-content .icon-blade-card-Hover').attr('tabindex', 0);
            }
            else {
                $('.icon-custom-content .icon-blade-card-Hover').removeAttr('tabindex', 0);
            }

        });
        if ($(this).find("a").length > 1) {
            $(this).addClass('icon-blade-card-noHover');
        }
        else if ($(this).find("a").length == 0) {
            $(this).addClass('icon-blade-card-onHover');
        }
        else {
            $(this).addClass('icon-blade-card-Hover');
        }
    });
    $('.icon-custom-content .icon-blade-card-Hover').click(function () {
        if ($(window).width() >= 900) {
            CTAAction(this);
        }
    });

    $('.icon-custom-content .icon-blade-card-Hover').keydown(function (ev) {
        if ($(window).width() >= 900) {
            if (ev.keyCode == 13) {
                CTAAction(this);
            }
        }
    });
});

function hairLineDivider() {
    if ($(".hairlineDivider").length) {
        jQuery('.hairlineDivider').each(function () {
            if ($(window).width() > 899) {
                $(this).prev().find('.icon-blade-container').css('padding-bottom', 40);
                $(this).next().find('.icon-blade-container').css('padding-top', 40);
            }
            if (($(window).width() > 539) && ($(window).width() < 899)) {
                $(this).prev().find('.icon-blade-container').css('padding-bottom', 20);
                $(this).next().find('.icon-blade-container').css('padding-top', 20);
            }
        });
    }
}

function CTAAction(currentProductCart) {
    var locationURL = $(currentProductCart).find("a").eq(0).attr("href");
    var URLOpenPage = $(currentProductCart).find("a").eq(0).attr("target");
    if (URLOpenPage == "_blank") {
        window.open(locationURL);
    }
    else {
        window.location.href = locationURL;
    }
};
jQuery(document).ready(function ($) {
    $(".locale-chooser").click(function () {

        var link = UpdateLocaleCookie();
        $.ajax({
            url: link,
            type: "POST",
            data: { URL: document.URL },
            success: function () {
            }

        });


    });
});;
$(document).ready(function () {
    //removing overlay-index class for FWF Version2 
   if($(".full-width-feature.fwf-basic-cta-right.fwf-bg-right").hasClass('overlay-x'))
    {
       $(".full-width-feature.fwf-basic-cta-right.fwf-bg-right .row").removeClass('overlay-index');
       $(".full-width-feature.fwf-basic-cta-right.fwf-bg-right .overlay-mask").addClass('col-xs-12');
    }
    //click action
    $(".clickable-panel").each(function () {
        $(this).find('a.cta-x.cta-x-primary').first().addClass('hoverable');
        // hovering for secondary cta
        if ($(this).find(' a.cta-x.cta-x-primary').length <= 0) {
            $(this).find('a.cta-x.cta-x-secondary').first().addClass('hoverable');
            $(this).find('a.cta-x.cta-x-tertiary').first().addClass('hoverable');
        }
        //hovering for header hover 
        $(this).find('.clickable-panel-header-hover a').first().addClass('hoverable');

        //remove hoveable if non-hoverable
        $(this).find('.clickable-panel-non-hoverable-target.hoverable').removeClass('hoverable');
    });
    noPanelClick();
    $(".clickable-panel").on("click", panelClick);
    //hover actions
    $(".clickable-panel").hover(function () {
        //find hoverable classes and toggle hover style
        $(this).find(".hoverable").toggleClass("hovered");
        //add underline to headline, headers
        $(this).find(".headline-hoverable").toggleClass("headline-hovered");
        //add overlay to image
        $(this).find(".img-hoverable").toggleClass("img-hovered");
        //check video for hovering
        if ($(this).find(".hoverable").hasClass("video-connect")) {
            $(this).find(".video-connect:not(.hoverable)").toggleClass("vid-hover");
        }
        $(this).find(".clickable-panel-header-hover").toggleClass("headline-hovered");
        $(this).find(".clickable-panel-header-media-x").toggleClass("img-hovered");
    });
    //remove hover when on non-hoverable cta
    $(".clickable-panel .cta-x:not(.hoverable)").hover(function () {
        $(this).prevAll('.cta-x.hoverable').toggleClass("hovered");
        $(this).closest(".clickable-panel").find(".headline-hoverable").toggleClass("headline-hovered");
        $(this).closest(".clickable-panel").find(".img-hoverable").toggleClass("img-hovered");
    });
    $(".clickable-panel .clickable-panel-non-hoverable a:not(.hoverable)").hover(function () {
        $(this).closest(".clickable-panel").find(".clickable-panel-header-hover").toggleClass("headline-hovered");
        $(this).closest(".clickable-panel").find(".clickable-panel-header-media-x").toggleClass("img-hovered");
    });

    if ($('.container-x').hasClass('clickable-panel')) {
        $('.container-x.clickable-panel .video-overlay-x').show();
    }
});

function panelClick(event) {
    var clickablePanel = $(this);
    var ctasInCP = clickablePanel.find('a.cta-x');
    var mediaInCP = clickablePanel.find('a.video-thumbnail');
    var headerLink = clickablePanel.find('.clickable-panel-header-hover a');
    var ItemId = headerLink.first().attr('data-itemid');
    var AssetClickedEvent = headerLink.first().attr('data-pageevent');
    var TrackingName = headerLink.first().attr('data-trackingname');
    clickIgnoreElement = $(event.target);
    if (!(clickIgnoreElement.hasClass('icon') || clickIgnoreElement.hasClass('overlay') || clickIgnoreElement.hasClass('playbtn') || clickIgnoreElement.hasClass('playicon') || clickIgnoreElement.hasClass('cta-text-span') || clickIgnoreElement.hasClass('duration') || clickIgnoreElement.hasClass('cta-x') || clickIgnoreElement.hasClass('headline-hoverable-target') || clickIgnoreElement.hasClass('clickable-panel-non-hoverable-target')) || clickIgnoreElement.hasClass('video-clickable') || clickIgnoreElement.hasClass('icon-indicator-x') ) {
        
        if (ctasInCP.length > 0) {
            //one or more ctas without media
            firstCTA = ctasInCP.first();
            if (firstCTA.hasClass('video-connect')) {
                CTAGoal.ClickablePanelClickEvent(firstCTA);
                if (gmositecore &&
                    gmositecore._useAccessibleVideoPlayer && (gmositecore._useAccessibleVideoPlayer.toLowerCase() === "true") &&
                    gmositecore._contextItemId && gmositecore._contextItemId.length && (gmositecore._contextItemId.length > 0)) {
                    firstCTA.click();
                }
                else {
                    $.colorbox({ iframe: true, title: firstCTA.attr("title"), href: firstCTA.attr('href'), innerWidth: "80%", innerHeight: "80%" });
                }
            } else {
                CTAGoal.ClickablePanelClickEvent(firstCTA);
                firstCTA[0].click();
            }
        } else if (ctasInCP.length <= 0 && mediaInCP.length > 0) {
            //No CTA only Media
            firstMP = mediaInCP.first();
            CTAGoal.ClickablePanelClickEvent(firstMP);
            if (gmositecore &&
                gmositecore._useAccessibleVideoPlayer && (gmositecore._useAccessibleVideoPlayer.toLowerCase() === "true") &&
                gmositecore._contextItemId && gmositecore._contextItemId.length && (gmositecore._contextItemId.length > 0)) {
                firstMP.click();
            }
            else {
                $.colorbox({ iframe: true, title: firstMP.attr("title"), href: firstMP.attr('href'), innerWidth: "80%", innerHeight: "80%" });
            }
        }
        else if (mediaInCP.length <= 0 && headerLink.length > 0) {            
            AssetLibrary2.OneCard.trackClick(this, ItemId, AssetClickedEvent, TrackingName);
            firstHeaderLink = headerLink.first().attr('href');
            firstTargetLink = headerLink.first().attr('target');
            window.open(firstHeaderLink, firstTargetLink);
        }
    }
}
function noPanelClick() {
    $('.clickable-panel').each(function ()
    {
        var ctasInCP = $(this).find('a.cta-x');
        var mediaInCP = $(this).find('a.video-thumbnail');
        var headerLinkValue = $(this).find('.clickable-panel-header-hover a').attr('href');
        if (ctasInCP.length <= 0 && mediaInCP.length <= 0 && !(headerLinkValue))
        {
           $(this).removeClass('clickable-panel');
        }
    });
  
}
;
var carouselControl = function () {

    var myCarousel,
        pauseTitle,
        pauseorplaycontrol=null;
        

    init = function () {

        myCarousel = $(".large-hero-carousel-x .carousel");
        pauseorplaycontrol = $('.large-hero-carousel-x #hidPauseorPlay').val();
        if (pauseorplaycontrol != null && pauseorplaycontrol.split("/").length > 0) {
            pauseTitle = pauseorplaycontrol.split("/")[0];/*"Pause";*/
           // keyNav();
            pauseCarousel();
            playCarousel();
            itemWrapper();
            addCarouselIndicators();
            carouselIndicatorBGClass();
            pauseToggleIcon();
            activeCarouselIndicator();
            screenReaderPause();
        }
        $(document).bind('keydown.' + 'cbox', function (e) {
            keyNav(e);
        });
    },

        keyNav= function (e) {
        var key = e.keyCode;
       
            if (open &&   key === 27) {
                e.preventDefault();
                //publicMethod.close();
                $('.search-dropdown-curated').hide();
            }
            if (open &&   !e.altKey) {
                if (key === 37 || key === 39) {
                 
                    $('li.active a') .focus();
                     
                }
            }
        };

        pauseCarousel = function () {
            $('.large-hero-carousel-x .carousel-inner .item').find('.cta-wrapper').on('focus', function () {
                $(this).closest('.carousel').carousel('pause');
            });
        },

        playCarousel = function () {
            $('.large-hero-carousel-x .carousel-inner .item').find('.cta-x').on('blur', function () {
                $(this).closest('.carousel').carousel('cycle');
            });
        },

        itemWrapper = function () {
            var slideCount = 0;
            $('.large-hero-carousel-x .carousel .carousel-inner').find('.LargeHero').each(function () {
                var slideActiveClass = slideCount == 0 ? 'active' : '';
                $(this).wrap('<div class="item ' + slideActiveClass + '"></div>');
                slideCount++;
            });
        },
           addCarouselIndicators = function () {
               myCarousel.append("<ol class='carousel-indicators'></ol>");

            var indicators = $('.large-hero-carousel-x .carousel-indicators'),
                    bulletTitle = $('#hidSlideDot').val();;
                var totalslides = myCarousel.find('.carousel-inner').children('.item').length + 1;
                myCarousel.find('.carousel-inner').children('.item').each(function (index) {

                    (index === 0) ?
                        indicators.append("<li class='active'><a href='#' class='icon' data-target='#myCarousel' role='button' data-slide-to='" + index + "'title='" + (index + 1) + " of " + totalslides + "' aria-label='" + bulletTitle + " " + (index + 1) + "' tabindex='12'></a></li>") :
                        indicators.append("<li><a href='#' class='icon' data-target='#myCarousel' role='button' data-slide-to='" + index + "'title='" + (index + 1) + " of " + totalslides + "' aria-label='" + bulletTitle + " " + (index + 1) + "' tabindex='12'></a></li>");
                });
                indicators.append("<li><a id='carouselPauseButton' href='javascript:void(0);' class='icon icon-carousel-pause' role='button' title='" + (totalslides) + " of " + totalslides + "' aria-label='" + pauseTitle + "' tabindex='11'></a></li>");

            },
       
        carouselIndicatorBGClass = function () {
            myCarousel.on('slid.bs.carousel', function () {
                $(this).find('.carousel-indicators').attr('class', 'carousel-indicators');
                $(this).find('.carousel-indicators').addClass($(this).find('.carousel-inner .item.active').find('.large-hero-x-sub-container').attr('data-theme-color'));
            });

            if (myCarousel.length) {
                setTimeout(function () {
                    myCarousel.each(function () {
                        $(this).find('.carousel-indicators').addClass($(this).find('.carousel-inner .item').first().find('.large-hero-x-sub-container').attr('data-theme-color'));
                    });
                }, 500);
            }
        },

        pauseToggleIcon = function () {

            var playpausetitle = $('.large-hero-carousel-x #hidPauseorPlay').val();
            if (playpausetitle != null && playpausetitle.split("/").length > 0) {

                var pauseTitle;
                var playTitle;/*"Play";*/
                $('.large-hero-carousel-x #carouselPauseButton').on('click', function () {
                    if ($(this).hasClass('icon-carousel-pause')) {
                        playTitle = pauseorplaycontrol.split("/")[1];
                        $(this).addClass('icon-carousel-play').removeClass('icon-carousel-pause').attr('title', playTitle).attr('aria-label', playTitle);
                        $('.large-hero-carousel-x .carousel').carousel('pause');
                    } else {
                        pauseTitle = pauseorplaycontrol.split("/")[0];
                        $(this).addClass('icon-carousel-pause').removeClass('icon-carousel-play').attr('title', pauseTitle).attr('aria-label', pauseTitle);
                        $('.large-hero-carousel-x .carousel').carousel('cycle');
                    }
                });
                $('.large-hero-carousel-x .carousel-control').on('click', function () {
                    $('.click-txt').text($('.carousel-indicators .active .icon').attr('title'));
                });
                $('.large-hero-carousel-x .icon').on('click', function () {
                    if ($(this).hasClass('icon-carousel-pause')) {
                    }
                    else if ($(this).hasClass('icon-carousel-play')) {
                    }
                    else {
                        $('.click-txt').text($(this).attr('title') + ' Selected');
                    }                
                });
        }

     },


    
    activeCarouselIndicator = function () {
        myCarousel.on('slide.bs.carousel', function (e) {
            var to_slide = $(e.relatedTarget).index();

            $(".large-hero-carousel-x .carousel-indicators li.active").removeClass("active");
            $(".large-hero-carousel-x .carousel-indicators li a[data-slide-to=" + to_slide + "]").parent().addClass("active");

        });
        
    };
 screenReaderPause = function () {
     $('.large-hero-carousel-x').find('.carousel.slide').find('a.left.carousel-control').on('focus', function () {
         $(this).closest('.carousel').carousel('pause');
         $('.large-hero-carousel-x').find('#carouselPauseButton').removeClass('icon-carousel-pause').addClass('icon-carousel-play');
     });
     $('.large-hero-carousel-x').find('.carousel.slide').find('a.left.carousel-control').on('keydown', function (e) {
         if (e.keyCode == "9" && e.shiftKey) {
             $(this).closest('.carousel').carousel('cycle');
             $('.large-hero-carousel-x').find('#carouselPauseButton').removeClass('icon-carousel-play').addClass('icon-carousel-pause');
         }
     });
     $('.large-hero-carousel-x').find('.carousel.slide').find('a.right.carousel-control').on('focus', function () {
         $(this).closest('.carousel').carousel('pause');
         $('.large-hero-carousel-x').find('#carouselPauseButton').removeClass('icon-carousel-pause').addClass('icon-carousel-play');
     });
     $('.large-hero-carousel-x').find('.carousel.slide').find('a.right.carousel-control').on('keydown', function (e) {
         if (e.keyCode == "9" && !e.shiftKey) {
             $(this).closest('.carousel').carousel('cycle');
             $('.large-hero-carousel-x').find('#carouselPauseButton').removeClass('icon-carousel-play').addClass('icon-carousel-pause');
         }
     });
     $('.large-hero-carousel-x').find('.carousel.slide .carousel-inner .item').find("a.cta-x").on('focus', function () {
         $(this).closest('.carousel').carousel('pause');
         $('.large-hero-carousel-x').find('#carouselPauseButton').removeClass('icon-carousel-pause').addClass('icon-carousel-play');
     });
     $('.large-hero-carousel-x').find('.carousel.slide .carousel-indicators').find("a.icon:not(.icon-carousel-play):not(.icon-carousel-pause)").on('focus', function () {
         $(this).closest('.carousel').carousel('pause');
         $('.large-hero-carousel-x').find('#carouselPauseButton').removeClass('icon-carousel-pause').addClass('icon-carousel-play');
     });
     $('.large-hero-carousel-x').find('.carousel.slide .carousel-indicators').find("a.icon#carouselPauseButton").on('keydown', function (e) {
         if (!e.shiftKey) {
             $(this).closest('.carousel').carousel('cycle');
             $('.large-hero-carousel-x').find('#carouselPauseButton').removeClass('icon-carousel-play').addClass('icon-carousel-pause');
         }
     });
 };

     
    return {
        init: init
    };

}(); // parens immediately invokes the carouselControl anonymous function

$(document).ready(function () {
    $('.large-hero-carousel-x .carousel').carousel({
        wrap: true,
        keyboard: true,
        pause: focus
    });

    carouselControl.init();

});;
function OverlayRemoval() {  
    if (jq214(window).width() <= 679) {
        jq214('.large-hero-x').removeClass('overlay-x');
    }
    else {
        jq214('.large-hero-x').addClass('overlay-x');
    }
   }       
jq214(window).on('resize', function () {
    OverlayRemoval();
});
jq214(document).ready(function () {
    OverlayRemoval();
});;
(function(jq214) {
    jq214(function () {
        jq214('.cqc-carousel-x').each(function () {
            var jcarousel = jq214(this).find('.cqc-jcarousel-x');
            var vNextCarousel = jq214(this).find('.cqc-carousel-vnext');
            var cqcCarousel = jq214(this);
            jcarousel.on('jcarousel:reload jcarousel:create', function () {
                var carousel = jq214(this),
                width = parseInt(carousel.innerWidth() + 20)
                var windowWidth = jq214(window).outerWidth();
                if (windowWidth >= 900) {
                    if (vNextCarousel.length) { width = width / 3; }
                    else {
                        width = width / 4;
                    }
                }
                else if (windowWidth >= 540) {
                    width = width / 2;
                }
                else {
                    width = width;
                }
                carousel.jcarousel('items').css('width', Math.ceil(width) + 'px');

            }).jcarousel({
                wrap: 'circular',
            }).jcarouselAutoscroll({
                autostart: true,
                target: '+=1',
                interval: 5000
            });

            cqcCarousel.find('.cqc-jcarousel-prev-x').jcarouselControl({
                target: '-=1'
            });

            cqcCarousel.find('.cqc-jcarousel-next-x').jcarouselControl({
                target: '+=1'
            });

            //Carousel Indicators functionality
            var carouselIndicatorTitle = cqcCarousel.data('indicator-title');
            cqcCarousel.find('.cqc-jcarousel-pagination-x span').on('jcarouselpagination:active', 'a', function () {
                jcarousel.find('.cqc-carousel-item-x').removeClass('active');
                jcarousel.find('.cqc-carousel-item-x').find("a[href='" + jq214(this).attr('href') + "']").parent().addClass('active');
                jq214(this).addClass('active');
            }).on('jcarouselpagination:inactive', 'a', function () {
                jq214(this).removeClass('active');
            }).on('click', function (e) {
                e.preventDefault();
            }).jcarouselPagination({
                perPage: 1,
                item: function (page) {
                    return '<a class="icon" href="#' + page + '" data-target="#cqcCarousel" data-slide-to="' + page + '" title="' + carouselIndicatorTitle + " " + page + '" aria-label="' + carouselIndicatorTitle + " " + page + '">&nbsp;</a>';

                }
            });

            //Pause and Play
            var playTitle = cqcCarousel.data('play-title');
            var pauseTitle = cqcCarousel.data('pause-title');
            cqcCarousel.find('.cqc-carousel-pause').attr('title', 'pause').attr('aria-label', 'pause');
            cqcCarousel.find('.cqc-carousel-pause').on('click', function (e) {
                e.preventDefault();
                if (jq214(this).hasClass('icon-carousel-pause')) {
                    jq214(this).addClass('icon-carousel-play').removeClass('icon-carousel-pause').attr('title', 'play').attr('aria-label', 'play');
                    jcarousel.jcarouselAutoscroll('stop');
                } else {
                    jq214(this).addClass('icon-carousel-pause').removeClass('icon-carousel-play').attr('title', 'pause').attr('aria-label', 'pause');
                    jcarousel.jcarouselAutoscroll('start');
                }
            });
        });
    });
    
})(jq214);

;
$(document).ready(function () {
    //Dropddown pivot options shows till page end
    function pivotDropdownPageEnd() {
        $('.dropdown-pivot-row .dropdown-menu.ac-modal-drpdwn').height('auto');
        var dropdownHeight = $('.dropdown-pivot').height()
        var dropdownOffset = $('.dropdown-pivot').offset();
        var listItemHeight = $('.dropdown-pivot .ac-modal-drpdwn-link').height();
        var countListItem = $(".dropdown-pivot").find(".ac-modal-drpdwn-link").length;
        var totalHeight = listItemHeight * countListItem;
        var pagebottom = $(document).height() - dropdownOffset.top - dropdownHeight;
        $(function () {
            var li = $('.dropdown-menu.ac-modal-drpdwn').children(); var liSelected;
            $('.dropdown-toggle.ac-modal-drpdwn-link').keydown(function (e) {
                if (e.which === 40) {
                    if (liSelected) {
                        liSelected.focus();
                        next = liSelected.next();
                        if (next.length > 0) {
                            liSelected = next.focus();
                        } else {
                            liSelected = li.eq(0).focus();
                        }
                    } else {
                        liSelected = li.eq(0).focus();

                    }
                }
                else if (e.which === 38) {
                    if (liSelected) {
                        liSelected.focus();
                        next = liSelected.prev();
                        if (next.length > 0) {
                            liSelected = next.focus();
                        } else {
                            liSelected = li.last().focus();
                        }
                    } else {
                        liSelected = li.last().focus();
                    }
                }

            });
        });

        if (totalHeight > pagebottom) {
            $('.dropdown-menu.ac-modal-drpdwn').height(pagebottom + 10).css({ 'overflow-y': 'auto' });
        }
    }

    window.changeValueDropdownPivot = function ($this) {
        $('.dropdown-pivot-content').hide();
        document.getElementById('mainDropdownPivot').innerHTML = $this.innerHTML;
        $('.selected-alert').html($this.innerHTML + "selected");
        var datavalue = $('#mainDropdownPivot').next().val($($this).attr('data-value'));
        //$('.dropdown-pivot').attr('role', 'alert');
        $('#' + datavalue.val()).show();
    };

    $('#mainDropdownPivot').on('click', function () {
        pivotDropdownPageEnd();
    });
    $(window).resize(function () {
        $('#mainDropdownPivot').parents('.dropdown ').removeClass('open');
        $('.dropdown-pivot-row .dropdown-menu.ac-modal-drpdwn').height('auto');
    });

});;
